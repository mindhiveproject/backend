# source: https://us1.prisma.sh/shevchenko_yury-d70d0e/mindhive-us-back/dev
# timestamp: Thu Oct 20 2022 09:26:25 GMT+0200 (Central European Summer Time)

type AggregateAssignment {
  count: Int!
}

type AggregateAuthEmail {
  count: Int!
}

type AggregateAuthInvite {
  count: Int!
}

type AggregateAuthParticipant {
  count: Int!
}

type AggregateAuthToken {
  count: Int!
}

type AggregateClass {
  count: Int!
}

type AggregateClassNetwork {
  count: Int!
}

type AggregateConsent {
  count: Int!
}

type AggregateData {
  count: Int!
}

type AggregateGuest {
  count: Int!
}

type AggregateHomework {
  count: Int!
}

type AggregateJournal {
  count: Int!
}

type AggregateMessage {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregateProfile {
  count: Int!
}

type AggregateProposalBoard {
  count: Int!
}

type AggregateProposalCard {
  count: Int!
}

type AggregateProposalSection {
  count: Int!
}

type AggregateResult {
  count: Int!
}

type AggregateReview {
  count: Int!
}

type AggregateSchool {
  count: Int!
}

type AggregateScript {
  count: Int!
}

type AggregateStudy {
  count: Int!
}

type AggregateSummaryResult {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateTalk {
  count: Int!
}

type AggregateTask {
  count: Int!
}

type AggregateTemplate {
  count: Int!
}

type AggregateUpdate {
  count: Int!
}

type AggregateWord {
  count: Int!
}

type Assignment implements Node {
  id: ID!
  author: Profile
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  homework(where: HomeworkWhereInput, orderBy: HomeworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Homework!]
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

"""A connection to a list of items."""
type AssignmentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AssignmentEdge]!
  aggregate: AggregateAssignment!
}

input AssignmentCreateInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileCreateOneWithoutAuthorOfAssignmentInput
  classes: ClassCreateManyWithoutAssignmentsInput
  homework: HomeworkCreateManyWithoutAssignmentInput
  tags: TagCreateManyWithoutAssignmentsInput
}

input AssignmentCreateManyWithoutAuthorInput {
  create: [AssignmentCreateWithoutAuthorInput!]
  connect: [AssignmentWhereUniqueInput!]
}

input AssignmentCreateManyWithoutClassesInput {
  create: [AssignmentCreateWithoutClassesInput!]
  connect: [AssignmentWhereUniqueInput!]
}

input AssignmentCreateManyWithoutTagsInput {
  create: [AssignmentCreateWithoutTagsInput!]
  connect: [AssignmentWhereUniqueInput!]
}

input AssignmentCreateOneWithoutHomeworkInput {
  create: AssignmentCreateWithoutHomeworkInput
  connect: AssignmentWhereUniqueInput
}

input AssignmentCreateWithoutAuthorInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  classes: ClassCreateManyWithoutAssignmentsInput
  homework: HomeworkCreateManyWithoutAssignmentInput
  tags: TagCreateManyWithoutAssignmentsInput
}

input AssignmentCreateWithoutClassesInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileCreateOneWithoutAuthorOfAssignmentInput
  homework: HomeworkCreateManyWithoutAssignmentInput
  tags: TagCreateManyWithoutAssignmentsInput
}

input AssignmentCreateWithoutHomeworkInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileCreateOneWithoutAuthorOfAssignmentInput
  classes: ClassCreateManyWithoutAssignmentsInput
  tags: TagCreateManyWithoutAssignmentsInput
}

input AssignmentCreateWithoutTagsInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileCreateOneWithoutAuthorOfAssignmentInput
  classes: ClassCreateManyWithoutAssignmentsInput
  homework: HomeworkCreateManyWithoutAssignmentInput
}

"""An edge in a connection."""
type AssignmentEdge {
  """The item at the end of the edge."""
  node: Assignment!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AssignmentOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  settings_ASC
  settings_DESC
  public_ASC
  public_DESC
  isTemplate_ASC
  isTemplate_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AssignmentPreviousValues {
  id: ID!
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AssignmentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AssignmentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssignmentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssignmentScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  isTemplate: Boolean

  """All values that are not equal to given value."""
  isTemplate_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type AssignmentSubscriptionPayload {
  mutation: MutationType!
  node: Assignment
  updatedFields: [String!]
  previousValues: AssignmentPreviousValues
}

input AssignmentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AssignmentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssignmentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssignmentSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AssignmentWhereInput
}

input AssignmentUpdateInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileUpdateOneWithoutAuthorOfAssignmentInput
  classes: ClassUpdateManyWithoutAssignmentsInput
  homework: HomeworkUpdateManyWithoutAssignmentInput
  tags: TagUpdateManyWithoutAssignmentsInput
}

input AssignmentUpdateManyDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
}

input AssignmentUpdateManyMutationInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
}

input AssignmentUpdateManyWithoutAuthorInput {
  create: [AssignmentCreateWithoutAuthorInput!]
  connect: [AssignmentWhereUniqueInput!]
  set: [AssignmentWhereUniqueInput!]
  disconnect: [AssignmentWhereUniqueInput!]
  delete: [AssignmentWhereUniqueInput!]
  update: [AssignmentUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [AssignmentUpdateManyWithWhereNestedInput!]
  deleteMany: [AssignmentScalarWhereInput!]
  upsert: [AssignmentUpsertWithWhereUniqueWithoutAuthorInput!]
}

input AssignmentUpdateManyWithoutClassesInput {
  create: [AssignmentCreateWithoutClassesInput!]
  connect: [AssignmentWhereUniqueInput!]
  set: [AssignmentWhereUniqueInput!]
  disconnect: [AssignmentWhereUniqueInput!]
  delete: [AssignmentWhereUniqueInput!]
  update: [AssignmentUpdateWithWhereUniqueWithoutClassesInput!]
  updateMany: [AssignmentUpdateManyWithWhereNestedInput!]
  deleteMany: [AssignmentScalarWhereInput!]
  upsert: [AssignmentUpsertWithWhereUniqueWithoutClassesInput!]
}

input AssignmentUpdateManyWithoutTagsInput {
  create: [AssignmentCreateWithoutTagsInput!]
  connect: [AssignmentWhereUniqueInput!]
  set: [AssignmentWhereUniqueInput!]
  disconnect: [AssignmentWhereUniqueInput!]
  delete: [AssignmentWhereUniqueInput!]
  update: [AssignmentUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [AssignmentUpdateManyWithWhereNestedInput!]
  deleteMany: [AssignmentScalarWhereInput!]
  upsert: [AssignmentUpsertWithWhereUniqueWithoutTagsInput!]
}

input AssignmentUpdateManyWithWhereNestedInput {
  where: AssignmentScalarWhereInput!
  data: AssignmentUpdateManyDataInput!
}

input AssignmentUpdateOneWithoutHomeworkInput {
  create: AssignmentCreateWithoutHomeworkInput
  connect: AssignmentWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssignmentUpdateWithoutHomeworkDataInput
  upsert: AssignmentUpsertWithoutHomeworkInput
}

input AssignmentUpdateWithoutAuthorDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  classes: ClassUpdateManyWithoutAssignmentsInput
  homework: HomeworkUpdateManyWithoutAssignmentInput
  tags: TagUpdateManyWithoutAssignmentsInput
}

input AssignmentUpdateWithoutClassesDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileUpdateOneWithoutAuthorOfAssignmentInput
  homework: HomeworkUpdateManyWithoutAssignmentInput
  tags: TagUpdateManyWithoutAssignmentsInput
}

input AssignmentUpdateWithoutHomeworkDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileUpdateOneWithoutAuthorOfAssignmentInput
  classes: ClassUpdateManyWithoutAssignmentsInput
  tags: TagUpdateManyWithoutAssignmentsInput
}

input AssignmentUpdateWithoutTagsDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  isTemplate: Boolean
  author: ProfileUpdateOneWithoutAuthorOfAssignmentInput
  classes: ClassUpdateManyWithoutAssignmentsInput
  homework: HomeworkUpdateManyWithoutAssignmentInput
}

input AssignmentUpdateWithWhereUniqueWithoutAuthorInput {
  where: AssignmentWhereUniqueInput!
  data: AssignmentUpdateWithoutAuthorDataInput!
}

input AssignmentUpdateWithWhereUniqueWithoutClassesInput {
  where: AssignmentWhereUniqueInput!
  data: AssignmentUpdateWithoutClassesDataInput!
}

input AssignmentUpdateWithWhereUniqueWithoutTagsInput {
  where: AssignmentWhereUniqueInput!
  data: AssignmentUpdateWithoutTagsDataInput!
}

input AssignmentUpsertWithoutHomeworkInput {
  update: AssignmentUpdateWithoutHomeworkDataInput!
  create: AssignmentCreateWithoutHomeworkInput!
}

input AssignmentUpsertWithWhereUniqueWithoutAuthorInput {
  where: AssignmentWhereUniqueInput!
  update: AssignmentUpdateWithoutAuthorDataInput!
  create: AssignmentCreateWithoutAuthorInput!
}

input AssignmentUpsertWithWhereUniqueWithoutClassesInput {
  where: AssignmentWhereUniqueInput!
  update: AssignmentUpdateWithoutClassesDataInput!
  create: AssignmentCreateWithoutClassesInput!
}

input AssignmentUpsertWithWhereUniqueWithoutTagsInput {
  where: AssignmentWhereUniqueInput!
  update: AssignmentUpdateWithoutTagsDataInput!
  create: AssignmentCreateWithoutTagsInput!
}

input AssignmentWhereInput {
  """Logical AND on all given filters."""
  AND: [AssignmentWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssignmentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssignmentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  isTemplate: Boolean

  """All values that are not equal to given value."""
  isTemplate_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  classes_every: ClassWhereInput
  classes_some: ClassWhereInput
  classes_none: ClassWhereInput
  homework_every: HomeworkWhereInput
  homework_some: HomeworkWhereInput
  homework_none: HomeworkWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input AssignmentWhereUniqueInput {
  id: ID
}

type AuthEmail implements Node {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  profile: Profile!
  settings: Json
}

"""A connection to a list of items."""
type AuthEmailConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthEmailEdge]!
  aggregate: AggregateAuthEmail!
}

input AuthEmailCreateInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileCreateOneWithoutAuthEmailInput!
}

input AuthEmailCreateManyWithoutProfileInput {
  create: [AuthEmailCreateWithoutProfileInput!]
  connect: [AuthEmailWhereUniqueInput!]
}

input AuthEmailCreateWithoutProfileInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

"""An edge in a connection."""
type AuthEmailEdge {
  """The item at the end of the edge."""
  node: AuthEmail!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthEmailOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  settings_ASC
  settings_DESC
}

type AuthEmailPreviousValues {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthEmailScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthEmailScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthEmailScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
}

type AuthEmailSubscriptionPayload {
  mutation: MutationType!
  node: AuthEmail
  updatedFields: [String!]
  previousValues: AuthEmailPreviousValues
}

input AuthEmailSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthEmailSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthEmailSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthEmailSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthEmailWhereInput
}

input AuthEmailUpdateInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileUpdateOneRequiredWithoutAuthEmailInput
}

input AuthEmailUpdateManyDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailUpdateManyMutationInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailUpdateManyWithoutProfileInput {
  create: [AuthEmailCreateWithoutProfileInput!]
  connect: [AuthEmailWhereUniqueInput!]
  set: [AuthEmailWhereUniqueInput!]
  disconnect: [AuthEmailWhereUniqueInput!]
  delete: [AuthEmailWhereUniqueInput!]
  update: [AuthEmailUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [AuthEmailUpdateManyWithWhereNestedInput!]
  deleteMany: [AuthEmailScalarWhereInput!]
  upsert: [AuthEmailUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthEmailUpdateManyWithWhereNestedInput {
  where: AuthEmailScalarWhereInput!
  data: AuthEmailUpdateManyDataInput!
}

input AuthEmailUpdateWithoutProfileDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthEmailUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthEmailWhereUniqueInput!
  data: AuthEmailUpdateWithoutProfileDataInput!
}

input AuthEmailUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthEmailWhereUniqueInput!
  update: AuthEmailUpdateWithoutProfileDataInput!
  create: AuthEmailCreateWithoutProfileInput!
}

input AuthEmailWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthEmailWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthEmailWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthEmailWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
  profile: ProfileWhereInput
}

input AuthEmailWhereUniqueInput {
  id: ID
  email: String
}

type AuthInvite implements Node {
  id: ID!
  profile: Profile!
  invitedIn: Class!
}

"""A connection to a list of items."""
type AuthInviteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthInviteEdge]!
  aggregate: AggregateAuthInvite!
}

input AuthInviteCreateInput {
  id: ID
  profile: ProfileCreateOneWithoutAuthInviteInput!
  invitedIn: ClassCreateOneWithoutInvitesInput!
}

input AuthInviteCreateManyWithoutInvitedInInput {
  create: [AuthInviteCreateWithoutInvitedInInput!]
  connect: [AuthInviteWhereUniqueInput!]
}

input AuthInviteCreateManyWithoutProfileInput {
  create: [AuthInviteCreateWithoutProfileInput!]
  connect: [AuthInviteWhereUniqueInput!]
}

input AuthInviteCreateWithoutInvitedInInput {
  id: ID
  profile: ProfileCreateOneWithoutAuthInviteInput!
}

input AuthInviteCreateWithoutProfileInput {
  id: ID
  invitedIn: ClassCreateOneWithoutInvitesInput!
}

"""An edge in a connection."""
type AuthInviteEdge {
  """The item at the end of the edge."""
  node: AuthInvite!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthInviteOrderByInput {
  id_ASC
  id_DESC
}

type AuthInvitePreviousValues {
  id: ID!
}

input AuthInviteScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthInviteScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthInviteScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthInviteScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
}

type AuthInviteSubscriptionPayload {
  mutation: MutationType!
  node: AuthInvite
  updatedFields: [String!]
  previousValues: AuthInvitePreviousValues
}

input AuthInviteSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthInviteSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthInviteSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthInviteSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthInviteWhereInput
}

input AuthInviteUpdateInput {
  profile: ProfileUpdateOneRequiredWithoutAuthInviteInput
  invitedIn: ClassUpdateOneRequiredWithoutInvitesInput
}

input AuthInviteUpdateManyWithoutInvitedInInput {
  create: [AuthInviteCreateWithoutInvitedInInput!]
  connect: [AuthInviteWhereUniqueInput!]
  set: [AuthInviteWhereUniqueInput!]
  disconnect: [AuthInviteWhereUniqueInput!]
  delete: [AuthInviteWhereUniqueInput!]
  update: [AuthInviteUpdateWithWhereUniqueWithoutInvitedInInput!]
  deleteMany: [AuthInviteScalarWhereInput!]
  upsert: [AuthInviteUpsertWithWhereUniqueWithoutInvitedInInput!]
}

input AuthInviteUpdateManyWithoutProfileInput {
  create: [AuthInviteCreateWithoutProfileInput!]
  connect: [AuthInviteWhereUniqueInput!]
  set: [AuthInviteWhereUniqueInput!]
  disconnect: [AuthInviteWhereUniqueInput!]
  delete: [AuthInviteWhereUniqueInput!]
  update: [AuthInviteUpdateWithWhereUniqueWithoutProfileInput!]
  deleteMany: [AuthInviteScalarWhereInput!]
  upsert: [AuthInviteUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthInviteUpdateWithoutInvitedInDataInput {
  profile: ProfileUpdateOneRequiredWithoutAuthInviteInput
}

input AuthInviteUpdateWithoutProfileDataInput {
  invitedIn: ClassUpdateOneRequiredWithoutInvitesInput
}

input AuthInviteUpdateWithWhereUniqueWithoutInvitedInInput {
  where: AuthInviteWhereUniqueInput!
  data: AuthInviteUpdateWithoutInvitedInDataInput!
}

input AuthInviteUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthInviteWhereUniqueInput!
  data: AuthInviteUpdateWithoutProfileDataInput!
}

input AuthInviteUpsertWithWhereUniqueWithoutInvitedInInput {
  where: AuthInviteWhereUniqueInput!
  update: AuthInviteUpdateWithoutInvitedInDataInput!
  create: AuthInviteCreateWithoutInvitedInInput!
}

input AuthInviteUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthInviteWhereUniqueInput!
  update: AuthInviteUpdateWithoutProfileDataInput!
  create: AuthInviteCreateWithoutProfileInput!
}

input AuthInviteWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthInviteWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthInviteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthInviteWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  profile: ProfileWhereInput
  invitedIn: ClassWhereInput
}

input AuthInviteWhereUniqueInput {
  id: ID
}

type AuthParticipant implements Node {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  profile: Profile!
  settings: Json
}

"""A connection to a list of items."""
type AuthParticipantConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthParticipantEdge]!
  aggregate: AggregateAuthParticipant!
}

input AuthParticipantCreateInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileCreateOneWithoutAuthParticipantInput!
}

input AuthParticipantCreateManyWithoutProfileInput {
  create: [AuthParticipantCreateWithoutProfileInput!]
  connect: [AuthParticipantWhereUniqueInput!]
}

input AuthParticipantCreateWithoutProfileInput {
  id: ID
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

"""An edge in a connection."""
type AuthParticipantEdge {
  """The item at the end of the edge."""
  node: AuthParticipant!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthParticipantOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  settings_ASC
  settings_DESC
}

type AuthParticipantPreviousValues {
  id: ID!
  email: String
  password: String!
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthParticipantScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthParticipantScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthParticipantScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
}

type AuthParticipantSubscriptionPayload {
  mutation: MutationType!
  node: AuthParticipant
  updatedFields: [String!]
  previousValues: AuthParticipantPreviousValues
}

input AuthParticipantSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthParticipantSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthParticipantSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthParticipantSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthParticipantWhereInput
}

input AuthParticipantUpdateInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
  profile: ProfileUpdateOneRequiredWithoutAuthParticipantInput
}

input AuthParticipantUpdateManyDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantUpdateManyMutationInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantUpdateManyWithoutProfileInput {
  create: [AuthParticipantCreateWithoutProfileInput!]
  connect: [AuthParticipantWhereUniqueInput!]
  set: [AuthParticipantWhereUniqueInput!]
  disconnect: [AuthParticipantWhereUniqueInput!]
  delete: [AuthParticipantWhereUniqueInput!]
  update: [AuthParticipantUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [AuthParticipantUpdateManyWithWhereNestedInput!]
  deleteMany: [AuthParticipantScalarWhereInput!]
  upsert: [AuthParticipantUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthParticipantUpdateManyWithWhereNestedInput {
  where: AuthParticipantScalarWhereInput!
  data: AuthParticipantUpdateManyDataInput!
}

input AuthParticipantUpdateWithoutProfileDataInput {
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  settings: Json
}

input AuthParticipantUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthParticipantWhereUniqueInput!
  data: AuthParticipantUpdateWithoutProfileDataInput!
}

input AuthParticipantUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthParticipantWhereUniqueInput!
  update: AuthParticipantUpdateWithoutProfileDataInput!
  create: AuthParticipantCreateWithoutProfileInput!
}

input AuthParticipantWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthParticipantWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthParticipantWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthParticipantWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
  profile: ProfileWhereInput
}

input AuthParticipantWhereUniqueInput {
  id: ID
  email: String
}

type AuthToken implements Node {
  id: ID!
  token: String!
  tokenExpiry: String
  profile: Profile!
  email: String
}

"""A connection to a list of items."""
type AuthTokenConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuthTokenEdge]!
  aggregate: AggregateAuthToken!
}

input AuthTokenCreateInput {
  id: ID
  token: String!
  tokenExpiry: String
  email: String
  profile: ProfileCreateOneWithoutAuthTokenInput!
}

input AuthTokenCreateManyWithoutProfileInput {
  create: [AuthTokenCreateWithoutProfileInput!]
  connect: [AuthTokenWhereUniqueInput!]
}

input AuthTokenCreateWithoutProfileInput {
  id: ID
  token: String!
  tokenExpiry: String
  email: String
}

"""An edge in a connection."""
type AuthTokenEdge {
  """The item at the end of the edge."""
  node: AuthToken!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuthTokenOrderByInput {
  id_ASC
  id_DESC
  token_ASC
  token_DESC
  tokenExpiry_ASC
  tokenExpiry_DESC
  email_ASC
  email_DESC
}

type AuthTokenPreviousValues {
  id: ID!
  token: String!
  tokenExpiry: String
  email: String
}

input AuthTokenScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthTokenScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthTokenScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthTokenScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  tokenExpiry: String

  """All values that are not equal to given value."""
  tokenExpiry_not: String

  """All values that are contained in given list."""
  tokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  tokenExpiry_not_in: [String!]

  """All values less than the given value."""
  tokenExpiry_lt: String

  """All values less than or equal the given value."""
  tokenExpiry_lte: String

  """All values greater than the given value."""
  tokenExpiry_gt: String

  """All values greater than or equal the given value."""
  tokenExpiry_gte: String

  """All values containing the given string."""
  tokenExpiry_contains: String

  """All values not containing the given string."""
  tokenExpiry_not_contains: String

  """All values starting with the given string."""
  tokenExpiry_starts_with: String

  """All values not starting with the given string."""
  tokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  tokenExpiry_ends_with: String

  """All values not ending with the given string."""
  tokenExpiry_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
}

type AuthTokenSubscriptionPayload {
  mutation: MutationType!
  node: AuthToken
  updatedFields: [String!]
  previousValues: AuthTokenPreviousValues
}

input AuthTokenSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthTokenSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthTokenSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthTokenSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuthTokenWhereInput
}

input AuthTokenUpdateInput {
  token: String
  tokenExpiry: String
  email: String
  profile: ProfileUpdateOneRequiredWithoutAuthTokenInput
}

input AuthTokenUpdateManyDataInput {
  token: String
  tokenExpiry: String
  email: String
}

input AuthTokenUpdateManyMutationInput {
  token: String
  tokenExpiry: String
  email: String
}

input AuthTokenUpdateManyWithoutProfileInput {
  create: [AuthTokenCreateWithoutProfileInput!]
  connect: [AuthTokenWhereUniqueInput!]
  set: [AuthTokenWhereUniqueInput!]
  disconnect: [AuthTokenWhereUniqueInput!]
  delete: [AuthTokenWhereUniqueInput!]
  update: [AuthTokenUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [AuthTokenUpdateManyWithWhereNestedInput!]
  deleteMany: [AuthTokenScalarWhereInput!]
  upsert: [AuthTokenUpsertWithWhereUniqueWithoutProfileInput!]
}

input AuthTokenUpdateManyWithWhereNestedInput {
  where: AuthTokenScalarWhereInput!
  data: AuthTokenUpdateManyDataInput!
}

input AuthTokenUpdateWithoutProfileDataInput {
  token: String
  tokenExpiry: String
  email: String
}

input AuthTokenUpdateWithWhereUniqueWithoutProfileInput {
  where: AuthTokenWhereUniqueInput!
  data: AuthTokenUpdateWithoutProfileDataInput!
}

input AuthTokenUpsertWithWhereUniqueWithoutProfileInput {
  where: AuthTokenWhereUniqueInput!
  update: AuthTokenUpdateWithoutProfileDataInput!
  create: AuthTokenCreateWithoutProfileInput!
}

input AuthTokenWhereInput {
  """Logical AND on all given filters."""
  AND: [AuthTokenWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuthTokenWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuthTokenWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  tokenExpiry: String

  """All values that are not equal to given value."""
  tokenExpiry_not: String

  """All values that are contained in given list."""
  tokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  tokenExpiry_not_in: [String!]

  """All values less than the given value."""
  tokenExpiry_lt: String

  """All values less than or equal the given value."""
  tokenExpiry_lte: String

  """All values greater than the given value."""
  tokenExpiry_gt: String

  """All values greater than or equal the given value."""
  tokenExpiry_gte: String

  """All values containing the given string."""
  tokenExpiry_contains: String

  """All values not containing the given string."""
  tokenExpiry_not_contains: String

  """All values starting with the given string."""
  tokenExpiry_starts_with: String

  """All values not starting with the given string."""
  tokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  tokenExpiry_ends_with: String

  """All values not ending with the given string."""
  tokenExpiry_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  profile: ProfileWhereInput
}

input AuthTokenWhereUniqueInput {
  id: ID
  token: String
  email: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Class implements Node {
  id: ID!
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: Profile!
  students(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  invites(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthInvite!]
  network(where: ClassNetworkWhereInput, orderBy: ClassNetworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassNetwork!]
  assignments(where: AssignmentWhereInput, orderBy: AssignmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Assignment!]
  mentors(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  settings: Json
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  talks(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk!]
}

"""A connection to a list of items."""
type ClassConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ClassEdge]!
  aggregate: AggregateClass!
}

input ClassCreateInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateManyWithoutAssignmentsInput {
  create: [ClassCreateWithoutAssignmentsInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutCreatorInput {
  create: [ClassCreateWithoutCreatorInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutMentorsInput {
  create: [ClassCreateWithoutMentorsInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutNetworkInput {
  create: [ClassCreateWithoutNetworkInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutStudentsInput {
  create: [ClassCreateWithoutStudentsInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutStudiesInput {
  create: [ClassCreateWithoutStudiesInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutTagsInput {
  create: [ClassCreateWithoutTagsInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateManyWithoutTalksInput {
  create: [ClassCreateWithoutTalksInput!]
  connect: [ClassWhereUniqueInput!]
}

input ClassCreateOneWithoutInvitesInput {
  create: ClassCreateWithoutInvitesInput
  connect: ClassWhereUniqueInput
}

input ClassCreateWithoutAssignmentsInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutCreatorInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutInvitesInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutMentorsInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutNetworkInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutStudentsInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutStudiesInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  tags: TagCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutTagsInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  talks: TalkCreateManyWithoutClassesInput
}

input ClassCreateWithoutTalksInput {
  id: ID
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileCreateOneWithoutTeacherInInput!
  students: ProfileCreateManyWithoutStudentInInput
  invites: AuthInviteCreateManyWithoutInvitedInInput
  network: ClassNetworkCreateManyWithoutClassesInput
  assignments: AssignmentCreateManyWithoutClassesInput
  mentors: ProfileCreateManyWithoutMentorInInput
  studies: StudyCreateManyWithoutClassesInput
  tags: TagCreateManyWithoutClassesInput
}

"""An edge in a connection."""
type ClassEdge {
  """The item at the end of the edge."""
  node: Class!

  """A cursor for use in pagination."""
  cursor: String!
}

type ClassNetwork implements Node {
  id: ID!
  title: String
  description: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: Profile!
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

"""A connection to a list of items."""
type ClassNetworkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ClassNetworkEdge]!
  aggregate: AggregateClassNetwork!
}

input ClassNetworkCreateInput {
  id: ID
  title: String
  description: String
  settings: Json
  creator: ProfileCreateOneWithoutClassNetworksCreatedInput!
  classes: ClassCreateManyWithoutNetworkInput
  tags: TagCreateManyWithoutClassNetworksInput
}

input ClassNetworkCreateManyWithoutClassesInput {
  create: [ClassNetworkCreateWithoutClassesInput!]
  connect: [ClassNetworkWhereUniqueInput!]
}

input ClassNetworkCreateManyWithoutCreatorInput {
  create: [ClassNetworkCreateWithoutCreatorInput!]
  connect: [ClassNetworkWhereUniqueInput!]
}

input ClassNetworkCreateManyWithoutTagsInput {
  create: [ClassNetworkCreateWithoutTagsInput!]
  connect: [ClassNetworkWhereUniqueInput!]
}

input ClassNetworkCreateWithoutClassesInput {
  id: ID
  title: String
  description: String
  settings: Json
  creator: ProfileCreateOneWithoutClassNetworksCreatedInput!
  tags: TagCreateManyWithoutClassNetworksInput
}

input ClassNetworkCreateWithoutCreatorInput {
  id: ID
  title: String
  description: String
  settings: Json
  classes: ClassCreateManyWithoutNetworkInput
  tags: TagCreateManyWithoutClassNetworksInput
}

input ClassNetworkCreateWithoutTagsInput {
  id: ID
  title: String
  description: String
  settings: Json
  creator: ProfileCreateOneWithoutClassNetworksCreatedInput!
  classes: ClassCreateManyWithoutNetworkInput
}

"""An edge in a connection."""
type ClassNetworkEdge {
  """The item at the end of the edge."""
  node: ClassNetwork!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ClassNetworkOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ClassNetworkPreviousValues {
  id: ID!
  title: String
  description: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ClassNetworkScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassNetworkScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassNetworkScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassNetworkScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ClassNetworkSubscriptionPayload {
  mutation: MutationType!
  node: ClassNetwork
  updatedFields: [String!]
  previousValues: ClassNetworkPreviousValues
}

input ClassNetworkSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassNetworkSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassNetworkSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassNetworkSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ClassNetworkWhereInput
}

input ClassNetworkUpdateInput {
  title: String
  description: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutClassNetworksCreatedInput
  classes: ClassUpdateManyWithoutNetworkInput
  tags: TagUpdateManyWithoutClassNetworksInput
}

input ClassNetworkUpdateManyDataInput {
  title: String
  description: String
  settings: Json
}

input ClassNetworkUpdateManyMutationInput {
  title: String
  description: String
  settings: Json
}

input ClassNetworkUpdateManyWithoutClassesInput {
  create: [ClassNetworkCreateWithoutClassesInput!]
  connect: [ClassNetworkWhereUniqueInput!]
  set: [ClassNetworkWhereUniqueInput!]
  disconnect: [ClassNetworkWhereUniqueInput!]
  delete: [ClassNetworkWhereUniqueInput!]
  update: [ClassNetworkUpdateWithWhereUniqueWithoutClassesInput!]
  updateMany: [ClassNetworkUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassNetworkScalarWhereInput!]
  upsert: [ClassNetworkUpsertWithWhereUniqueWithoutClassesInput!]
}

input ClassNetworkUpdateManyWithoutCreatorInput {
  create: [ClassNetworkCreateWithoutCreatorInput!]
  connect: [ClassNetworkWhereUniqueInput!]
  set: [ClassNetworkWhereUniqueInput!]
  disconnect: [ClassNetworkWhereUniqueInput!]
  delete: [ClassNetworkWhereUniqueInput!]
  update: [ClassNetworkUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [ClassNetworkUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassNetworkScalarWhereInput!]
  upsert: [ClassNetworkUpsertWithWhereUniqueWithoutCreatorInput!]
}

input ClassNetworkUpdateManyWithoutTagsInput {
  create: [ClassNetworkCreateWithoutTagsInput!]
  connect: [ClassNetworkWhereUniqueInput!]
  set: [ClassNetworkWhereUniqueInput!]
  disconnect: [ClassNetworkWhereUniqueInput!]
  delete: [ClassNetworkWhereUniqueInput!]
  update: [ClassNetworkUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ClassNetworkUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassNetworkScalarWhereInput!]
  upsert: [ClassNetworkUpsertWithWhereUniqueWithoutTagsInput!]
}

input ClassNetworkUpdateManyWithWhereNestedInput {
  where: ClassNetworkScalarWhereInput!
  data: ClassNetworkUpdateManyDataInput!
}

input ClassNetworkUpdateWithoutClassesDataInput {
  title: String
  description: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutClassNetworksCreatedInput
  tags: TagUpdateManyWithoutClassNetworksInput
}

input ClassNetworkUpdateWithoutCreatorDataInput {
  title: String
  description: String
  settings: Json
  classes: ClassUpdateManyWithoutNetworkInput
  tags: TagUpdateManyWithoutClassNetworksInput
}

input ClassNetworkUpdateWithoutTagsDataInput {
  title: String
  description: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutClassNetworksCreatedInput
  classes: ClassUpdateManyWithoutNetworkInput
}

input ClassNetworkUpdateWithWhereUniqueWithoutClassesInput {
  where: ClassNetworkWhereUniqueInput!
  data: ClassNetworkUpdateWithoutClassesDataInput!
}

input ClassNetworkUpdateWithWhereUniqueWithoutCreatorInput {
  where: ClassNetworkWhereUniqueInput!
  data: ClassNetworkUpdateWithoutCreatorDataInput!
}

input ClassNetworkUpdateWithWhereUniqueWithoutTagsInput {
  where: ClassNetworkWhereUniqueInput!
  data: ClassNetworkUpdateWithoutTagsDataInput!
}

input ClassNetworkUpsertWithWhereUniqueWithoutClassesInput {
  where: ClassNetworkWhereUniqueInput!
  update: ClassNetworkUpdateWithoutClassesDataInput!
  create: ClassNetworkCreateWithoutClassesInput!
}

input ClassNetworkUpsertWithWhereUniqueWithoutCreatorInput {
  where: ClassNetworkWhereUniqueInput!
  update: ClassNetworkUpdateWithoutCreatorDataInput!
  create: ClassNetworkCreateWithoutCreatorInput!
}

input ClassNetworkUpsertWithWhereUniqueWithoutTagsInput {
  where: ClassNetworkWhereUniqueInput!
  update: ClassNetworkUpdateWithoutTagsDataInput!
  create: ClassNetworkCreateWithoutTagsInput!
}

input ClassNetworkWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassNetworkWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassNetworkWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassNetworkWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  creator: ProfileWhereInput
  classes_every: ClassWhereInput
  classes_some: ClassWhereInput
  classes_none: ClassWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input ClassNetworkWhereUniqueInput {
  id: ID
}

enum ClassOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  settings_ASC
  settings_DESC
}

type ClassPreviousValues {
  id: ID!
  code: String!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
  settings: Json
}

input ClassScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ClassSubscriptionPayload {
  mutation: MutationType!
  node: Class
  updatedFields: [String!]
  previousValues: ClassPreviousValues
}

input ClassSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ClassWhereInput
}

input ClassUpdateInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateManyDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
}

input ClassUpdateManyMutationInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
}

input ClassUpdateManyWithoutAssignmentsInput {
  create: [ClassCreateWithoutAssignmentsInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutAssignmentsInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutAssignmentsInput!]
}

input ClassUpdateManyWithoutCreatorInput {
  create: [ClassCreateWithoutCreatorInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutCreatorInput!]
}

input ClassUpdateManyWithoutMentorsInput {
  create: [ClassCreateWithoutMentorsInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutMentorsInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutMentorsInput!]
}

input ClassUpdateManyWithoutNetworkInput {
  create: [ClassCreateWithoutNetworkInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutNetworkInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutNetworkInput!]
}

input ClassUpdateManyWithoutStudentsInput {
  create: [ClassCreateWithoutStudentsInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutStudentsInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutStudentsInput!]
}

input ClassUpdateManyWithoutStudiesInput {
  create: [ClassCreateWithoutStudiesInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutStudiesInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutStudiesInput!]
}

input ClassUpdateManyWithoutTagsInput {
  create: [ClassCreateWithoutTagsInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutTagsInput!]
}

input ClassUpdateManyWithoutTalksInput {
  create: [ClassCreateWithoutTalksInput!]
  connect: [ClassWhereUniqueInput!]
  set: [ClassWhereUniqueInput!]
  disconnect: [ClassWhereUniqueInput!]
  delete: [ClassWhereUniqueInput!]
  update: [ClassUpdateWithWhereUniqueWithoutTalksInput!]
  updateMany: [ClassUpdateManyWithWhereNestedInput!]
  deleteMany: [ClassScalarWhereInput!]
  upsert: [ClassUpsertWithWhereUniqueWithoutTalksInput!]
}

input ClassUpdateManyWithWhereNestedInput {
  where: ClassScalarWhereInput!
  data: ClassUpdateManyDataInput!
}

input ClassUpdateOneRequiredWithoutInvitesInput {
  create: ClassCreateWithoutInvitesInput
  connect: ClassWhereUniqueInput
  update: ClassUpdateWithoutInvitesDataInput
  upsert: ClassUpsertWithoutInvitesInput
}

input ClassUpdateWithoutAssignmentsDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutCreatorDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutInvitesDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutMentorsDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutNetworkDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutStudentsDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutStudiesDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  tags: TagUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutTagsDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  talks: TalkUpdateManyWithoutClassesInput
}

input ClassUpdateWithoutTalksDataInput {
  code: String
  title: String
  description: String
  image: String
  largeImage: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutTeacherInInput
  students: ProfileUpdateManyWithoutStudentInInput
  invites: AuthInviteUpdateManyWithoutInvitedInInput
  network: ClassNetworkUpdateManyWithoutClassesInput
  assignments: AssignmentUpdateManyWithoutClassesInput
  mentors: ProfileUpdateManyWithoutMentorInInput
  studies: StudyUpdateManyWithoutClassesInput
  tags: TagUpdateManyWithoutClassesInput
}

input ClassUpdateWithWhereUniqueWithoutAssignmentsInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutAssignmentsDataInput!
}

input ClassUpdateWithWhereUniqueWithoutCreatorInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutCreatorDataInput!
}

input ClassUpdateWithWhereUniqueWithoutMentorsInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutMentorsDataInput!
}

input ClassUpdateWithWhereUniqueWithoutNetworkInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutNetworkDataInput!
}

input ClassUpdateWithWhereUniqueWithoutStudentsInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutStudentsDataInput!
}

input ClassUpdateWithWhereUniqueWithoutStudiesInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutStudiesDataInput!
}

input ClassUpdateWithWhereUniqueWithoutTagsInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutTagsDataInput!
}

input ClassUpdateWithWhereUniqueWithoutTalksInput {
  where: ClassWhereUniqueInput!
  data: ClassUpdateWithoutTalksDataInput!
}

input ClassUpsertWithoutInvitesInput {
  update: ClassUpdateWithoutInvitesDataInput!
  create: ClassCreateWithoutInvitesInput!
}

input ClassUpsertWithWhereUniqueWithoutAssignmentsInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutAssignmentsDataInput!
  create: ClassCreateWithoutAssignmentsInput!
}

input ClassUpsertWithWhereUniqueWithoutCreatorInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutCreatorDataInput!
  create: ClassCreateWithoutCreatorInput!
}

input ClassUpsertWithWhereUniqueWithoutMentorsInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutMentorsDataInput!
  create: ClassCreateWithoutMentorsInput!
}

input ClassUpsertWithWhereUniqueWithoutNetworkInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutNetworkDataInput!
  create: ClassCreateWithoutNetworkInput!
}

input ClassUpsertWithWhereUniqueWithoutStudentsInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutStudentsDataInput!
  create: ClassCreateWithoutStudentsInput!
}

input ClassUpsertWithWhereUniqueWithoutStudiesInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutStudiesDataInput!
  create: ClassCreateWithoutStudiesInput!
}

input ClassUpsertWithWhereUniqueWithoutTagsInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutTagsDataInput!
  create: ClassCreateWithoutTagsInput!
}

input ClassUpsertWithWhereUniqueWithoutTalksInput {
  where: ClassWhereUniqueInput!
  update: ClassUpdateWithoutTalksDataInput!
  create: ClassCreateWithoutTalksInput!
}

input ClassWhereInput {
  """Logical AND on all given filters."""
  AND: [ClassWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClassWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClassWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  creator: ProfileWhereInput
  students_every: ProfileWhereInput
  students_some: ProfileWhereInput
  students_none: ProfileWhereInput
  invites_every: AuthInviteWhereInput
  invites_some: AuthInviteWhereInput
  invites_none: AuthInviteWhereInput
  network_every: ClassNetworkWhereInput
  network_some: ClassNetworkWhereInput
  network_none: ClassNetworkWhereInput
  assignments_every: AssignmentWhereInput
  assignments_some: AssignmentWhereInput
  assignments_none: AssignmentWhereInput
  mentors_every: ProfileWhereInput
  mentors_some: ProfileWhereInput
  mentors_none: ProfileWhereInput
  studies_every: StudyWhereInput
  studies_some: StudyWhereInput
  studies_none: StudyWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  talks_every: TalkWhereInput
  talks_some: TalkWhereInput
  talks_none: TalkWhereInput
}

input ClassWhereUniqueInput {
  id: ID
  code: String
}

type Consent implements Node {
  id: ID!
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  author: Profile!
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  participants(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type ConsentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ConsentEdge]!
  aggregate: AggregateConsent!
}

input ConsentCreateInput {
  id: ID
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateManyWithoutAuthorInput {
  create: [ConsentCreateWithoutAuthorInput!]
  connect: [ConsentWhereUniqueInput!]
}

input ConsentCreateManyWithoutCollaboratorsInput {
  create: [ConsentCreateWithoutCollaboratorsInput!]
  connect: [ConsentWhereUniqueInput!]
}

input ConsentCreateManyWithoutParticipantsInput {
  create: [ConsentCreateWithoutParticipantsInput!]
  connect: [ConsentWhereUniqueInput!]
}

input ConsentCreateManyWithoutStudiesInput {
  create: [ConsentCreateWithoutStudiesInput!]
  connect: [ConsentWhereUniqueInput!]
}

input ConsentCreateOneWithoutTasksInput {
  create: ConsentCreateWithoutTasksInput
  connect: ConsentWhereUniqueInput
}

input ConsentCreateWithoutAuthorInput {
  id: ID
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutParticipantsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  studies: StudyCreateManyWithoutConsentInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutStudiesInput {
  id: ID
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  tasks: TaskCreateManyWithoutConsentInput
}

input ConsentCreateWithoutTasksInput {
  id: ID
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileCreateOneWithoutConsentCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInConsentInput
  participants: ProfileCreateManyWithoutConsentGivenForInput
  studies: StudyCreateManyWithoutConsentInput
}

"""An edge in a connection."""
type ConsentEdge {
  """The item at the end of the edge."""
  node: Consent!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ConsentOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  organization_ASC
  organization_DESC
  info_ASC
  info_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ConsentPreviousValues {
  id: ID!
  title: String!
  slug: String!
  description: String
  organization: String
  info: Json
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ConsentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ConsentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConsentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConsentScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  organization: String

  """All values that are not equal to given value."""
  organization_not: String

  """All values that are contained in given list."""
  organization_in: [String!]

  """All values that are not contained in given list."""
  organization_not_in: [String!]

  """All values less than the given value."""
  organization_lt: String

  """All values less than or equal the given value."""
  organization_lte: String

  """All values greater than the given value."""
  organization_gt: String

  """All values greater than or equal the given value."""
  organization_gte: String

  """All values containing the given string."""
  organization_contains: String

  """All values not containing the given string."""
  organization_not_contains: String

  """All values starting with the given string."""
  organization_starts_with: String

  """All values not starting with the given string."""
  organization_not_starts_with: String

  """All values ending with the given string."""
  organization_ends_with: String

  """All values not ending with the given string."""
  organization_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ConsentSubscriptionPayload {
  mutation: MutationType!
  node: Consent
  updatedFields: [String!]
  previousValues: ConsentPreviousValues
}

input ConsentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ConsentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConsentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConsentSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ConsentWhereInput
}

input ConsentUpdateInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateManyDataInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
}

input ConsentUpdateManyMutationInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
}

input ConsentUpdateManyWithoutAuthorInput {
  create: [ConsentCreateWithoutAuthorInput!]
  connect: [ConsentWhereUniqueInput!]
  set: [ConsentWhereUniqueInput!]
  disconnect: [ConsentWhereUniqueInput!]
  delete: [ConsentWhereUniqueInput!]
  update: [ConsentUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ConsentUpdateManyWithWhereNestedInput!]
  deleteMany: [ConsentScalarWhereInput!]
  upsert: [ConsentUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ConsentUpdateManyWithoutCollaboratorsInput {
  create: [ConsentCreateWithoutCollaboratorsInput!]
  connect: [ConsentWhereUniqueInput!]
  set: [ConsentWhereUniqueInput!]
  disconnect: [ConsentWhereUniqueInput!]
  delete: [ConsentWhereUniqueInput!]
  update: [ConsentUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [ConsentUpdateManyWithWhereNestedInput!]
  deleteMany: [ConsentScalarWhereInput!]
  upsert: [ConsentUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input ConsentUpdateManyWithoutParticipantsInput {
  create: [ConsentCreateWithoutParticipantsInput!]
  connect: [ConsentWhereUniqueInput!]
  set: [ConsentWhereUniqueInput!]
  disconnect: [ConsentWhereUniqueInput!]
  delete: [ConsentWhereUniqueInput!]
  update: [ConsentUpdateWithWhereUniqueWithoutParticipantsInput!]
  updateMany: [ConsentUpdateManyWithWhereNestedInput!]
  deleteMany: [ConsentScalarWhereInput!]
  upsert: [ConsentUpsertWithWhereUniqueWithoutParticipantsInput!]
}

input ConsentUpdateManyWithoutStudiesInput {
  create: [ConsentCreateWithoutStudiesInput!]
  connect: [ConsentWhereUniqueInput!]
  set: [ConsentWhereUniqueInput!]
  disconnect: [ConsentWhereUniqueInput!]
  delete: [ConsentWhereUniqueInput!]
  update: [ConsentUpdateWithWhereUniqueWithoutStudiesInput!]
  updateMany: [ConsentUpdateManyWithWhereNestedInput!]
  deleteMany: [ConsentScalarWhereInput!]
  upsert: [ConsentUpsertWithWhereUniqueWithoutStudiesInput!]
}

input ConsentUpdateManyWithWhereNestedInput {
  where: ConsentScalarWhereInput!
  data: ConsentUpdateManyDataInput!
}

input ConsentUpdateOneWithoutTasksInput {
  create: ConsentCreateWithoutTasksInput
  connect: ConsentWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConsentUpdateWithoutTasksDataInput
  upsert: ConsentUpsertWithoutTasksInput
}

input ConsentUpdateWithoutAuthorDataInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutCollaboratorsDataInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutParticipantsDataInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  studies: StudyUpdateManyWithoutConsentInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutStudiesDataInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  tasks: TaskUpdateManyWithoutConsentInput
}

input ConsentUpdateWithoutTasksDataInput {
  title: String
  slug: String
  description: String
  organization: String
  info: Json
  settings: Json
  author: ProfileUpdateOneRequiredWithoutConsentCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInConsentInput
  participants: ProfileUpdateManyWithoutConsentGivenForInput
  studies: StudyUpdateManyWithoutConsentInput
}

input ConsentUpdateWithWhereUniqueWithoutAuthorInput {
  where: ConsentWhereUniqueInput!
  data: ConsentUpdateWithoutAuthorDataInput!
}

input ConsentUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: ConsentWhereUniqueInput!
  data: ConsentUpdateWithoutCollaboratorsDataInput!
}

input ConsentUpdateWithWhereUniqueWithoutParticipantsInput {
  where: ConsentWhereUniqueInput!
  data: ConsentUpdateWithoutParticipantsDataInput!
}

input ConsentUpdateWithWhereUniqueWithoutStudiesInput {
  where: ConsentWhereUniqueInput!
  data: ConsentUpdateWithoutStudiesDataInput!
}

input ConsentUpsertWithoutTasksInput {
  update: ConsentUpdateWithoutTasksDataInput!
  create: ConsentCreateWithoutTasksInput!
}

input ConsentUpsertWithWhereUniqueWithoutAuthorInput {
  where: ConsentWhereUniqueInput!
  update: ConsentUpdateWithoutAuthorDataInput!
  create: ConsentCreateWithoutAuthorInput!
}

input ConsentUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: ConsentWhereUniqueInput!
  update: ConsentUpdateWithoutCollaboratorsDataInput!
  create: ConsentCreateWithoutCollaboratorsInput!
}

input ConsentUpsertWithWhereUniqueWithoutParticipantsInput {
  where: ConsentWhereUniqueInput!
  update: ConsentUpdateWithoutParticipantsDataInput!
  create: ConsentCreateWithoutParticipantsInput!
}

input ConsentUpsertWithWhereUniqueWithoutStudiesInput {
  where: ConsentWhereUniqueInput!
  update: ConsentUpdateWithoutStudiesDataInput!
  create: ConsentCreateWithoutStudiesInput!
}

input ConsentWhereInput {
  """Logical AND on all given filters."""
  AND: [ConsentWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConsentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConsentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  organization: String

  """All values that are not equal to given value."""
  organization_not: String

  """All values that are contained in given list."""
  organization_in: [String!]

  """All values that are not contained in given list."""
  organization_not_in: [String!]

  """All values less than the given value."""
  organization_lt: String

  """All values less than or equal the given value."""
  organization_lte: String

  """All values greater than the given value."""
  organization_gt: String

  """All values greater than or equal the given value."""
  organization_gte: String

  """All values containing the given string."""
  organization_contains: String

  """All values not containing the given string."""
  organization_not_contains: String

  """All values starting with the given string."""
  organization_starts_with: String

  """All values not starting with the given string."""
  organization_not_starts_with: String

  """All values ending with the given string."""
  organization_ends_with: String

  """All values not ending with the given string."""
  organization_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  participants_every: ProfileWhereInput
  participants_some: ProfileWhereInput
  participants_none: ProfileWhereInput
  studies_every: StudyWhereInput
  studies_some: StudyWhereInput
  studies_none: StudyWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
}

input ConsentWhereUniqueInput {
  id: ID
  slug: String
}

type Data implements Node {
  id: ID!
  content: String
}

"""A connection to a list of items."""
type DataConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DataEdge]!
  aggregate: AggregateData!
}

input DataCreateInput {
  id: ID
  content: String
}

input DataCreateManyInput {
  create: [DataCreateInput!]
  connect: [DataWhereUniqueInput!]
}

input DataCreateOneInput {
  create: DataCreateInput
  connect: DataWhereUniqueInput
}

"""An edge in a connection."""
type DataEdge {
  """The item at the end of the edge."""
  node: Data!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DataOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
}

type DataPreviousValues {
  id: ID!
  content: String
}

input DataScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [DataScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
}

type DataSubscriptionPayload {
  mutation: MutationType!
  node: Data
  updatedFields: [String!]
  previousValues: DataPreviousValues
}

input DataSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DataSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DataWhereInput
}

input DataUpdateDataInput {
  content: String
}

input DataUpdateInput {
  content: String
}

input DataUpdateManyDataInput {
  content: String
}

input DataUpdateManyInput {
  create: [DataCreateInput!]
  connect: [DataWhereUniqueInput!]
  set: [DataWhereUniqueInput!]
  disconnect: [DataWhereUniqueInput!]
  delete: [DataWhereUniqueInput!]
  update: [DataUpdateWithWhereUniqueNestedInput!]
  updateMany: [DataUpdateManyWithWhereNestedInput!]
  deleteMany: [DataScalarWhereInput!]
  upsert: [DataUpsertWithWhereUniqueNestedInput!]
}

input DataUpdateManyMutationInput {
  content: String
}

input DataUpdateManyWithWhereNestedInput {
  where: DataScalarWhereInput!
  data: DataUpdateManyDataInput!
}

input DataUpdateOneInput {
  create: DataCreateInput
  connect: DataWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: DataUpdateDataInput
  upsert: DataUpsertNestedInput
}

input DataUpdateWithWhereUniqueNestedInput {
  where: DataWhereUniqueInput!
  data: DataUpdateDataInput!
}

input DataUpsertNestedInput {
  update: DataUpdateDataInput!
  create: DataCreateInput!
}

input DataUpsertWithWhereUniqueNestedInput {
  where: DataWhereUniqueInput!
  update: DataUpdateDataInput!
  create: DataCreateInput!
}

input DataWhereInput {
  """Logical AND on all given filters."""
  AND: [DataWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
}

input DataWhereUniqueInput {
  id: ID
}

scalar DateTime

type Guest implements Node {
  id: ID!
  publicId: String
  publicReadableId: String
  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result!]
  guestParticipantIn(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
}

"""A connection to a list of items."""
type GuestConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [GuestEdge]!
  aggregate: AggregateGuest!
}

input GuestCreateInput {
  id: ID
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
  results: ResultCreateManyWithoutGuestInput
  guestParticipantIn: StudyCreateManyWithoutGuestsInput
}

input GuestCreateManyWithoutGuestParticipantInInput {
  create: [GuestCreateWithoutGuestParticipantInInput!]
  connect: [GuestWhereUniqueInput!]
}

input GuestCreateOneInput {
  create: GuestCreateInput
  connect: GuestWhereUniqueInput
}

input GuestCreateOneWithoutResultsInput {
  create: GuestCreateWithoutResultsInput
  connect: GuestWhereUniqueInput
}

input GuestCreateWithoutGuestParticipantInInput {
  id: ID
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
  results: ResultCreateManyWithoutGuestInput
}

input GuestCreateWithoutResultsInput {
  id: ID
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
  guestParticipantIn: StudyCreateManyWithoutGuestsInput
}

"""An edge in a connection."""
type GuestEdge {
  """The item at the end of the edge."""
  node: Guest!

  """A cursor for use in pagination."""
  cursor: String!
}

enum GuestOrderByInput {
  id_ASC
  id_DESC
  publicId_ASC
  publicId_DESC
  publicReadableId_ASC
  publicReadableId_DESC
  info_ASC
  info_DESC
  generalInfo_ASC
  generalInfo_DESC
  tasksInfo_ASC
  tasksInfo_DESC
  studiesInfo_ASC
  studiesInfo_DESC
  consentsInfo_ASC
  consentsInfo_DESC
  guestAccountExpiry_ASC
  guestAccountExpiry_DESC
}

type GuestPreviousValues {
  id: ID!
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
}

input GuestScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [GuestScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [GuestScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GuestScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  publicId: String

  """All values that are not equal to given value."""
  publicId_not: String

  """All values that are contained in given list."""
  publicId_in: [String!]

  """All values that are not contained in given list."""
  publicId_not_in: [String!]

  """All values less than the given value."""
  publicId_lt: String

  """All values less than or equal the given value."""
  publicId_lte: String

  """All values greater than the given value."""
  publicId_gt: String

  """All values greater than or equal the given value."""
  publicId_gte: String

  """All values containing the given string."""
  publicId_contains: String

  """All values not containing the given string."""
  publicId_not_contains: String

  """All values starting with the given string."""
  publicId_starts_with: String

  """All values not starting with the given string."""
  publicId_not_starts_with: String

  """All values ending with the given string."""
  publicId_ends_with: String

  """All values not ending with the given string."""
  publicId_not_ends_with: String
  publicReadableId: String

  """All values that are not equal to given value."""
  publicReadableId_not: String

  """All values that are contained in given list."""
  publicReadableId_in: [String!]

  """All values that are not contained in given list."""
  publicReadableId_not_in: [String!]

  """All values less than the given value."""
  publicReadableId_lt: String

  """All values less than or equal the given value."""
  publicReadableId_lte: String

  """All values greater than the given value."""
  publicReadableId_gt: String

  """All values greater than or equal the given value."""
  publicReadableId_gte: String

  """All values containing the given string."""
  publicReadableId_contains: String

  """All values not containing the given string."""
  publicReadableId_not_contains: String

  """All values starting with the given string."""
  publicReadableId_starts_with: String

  """All values not starting with the given string."""
  publicReadableId_not_starts_with: String

  """All values ending with the given string."""
  publicReadableId_ends_with: String

  """All values not ending with the given string."""
  publicReadableId_not_ends_with: String
  guestAccountExpiry: String

  """All values that are not equal to given value."""
  guestAccountExpiry_not: String

  """All values that are contained in given list."""
  guestAccountExpiry_in: [String!]

  """All values that are not contained in given list."""
  guestAccountExpiry_not_in: [String!]

  """All values less than the given value."""
  guestAccountExpiry_lt: String

  """All values less than or equal the given value."""
  guestAccountExpiry_lte: String

  """All values greater than the given value."""
  guestAccountExpiry_gt: String

  """All values greater than or equal the given value."""
  guestAccountExpiry_gte: String

  """All values containing the given string."""
  guestAccountExpiry_contains: String

  """All values not containing the given string."""
  guestAccountExpiry_not_contains: String

  """All values starting with the given string."""
  guestAccountExpiry_starts_with: String

  """All values not starting with the given string."""
  guestAccountExpiry_not_starts_with: String

  """All values ending with the given string."""
  guestAccountExpiry_ends_with: String

  """All values not ending with the given string."""
  guestAccountExpiry_not_ends_with: String
}

type GuestSubscriptionPayload {
  mutation: MutationType!
  node: Guest
  updatedFields: [String!]
  previousValues: GuestPreviousValues
}

input GuestSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [GuestSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [GuestSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GuestSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GuestWhereInput
}

input GuestUpdateDataInput {
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
  results: ResultUpdateManyWithoutGuestInput
  guestParticipantIn: StudyUpdateManyWithoutGuestsInput
}

input GuestUpdateInput {
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
  results: ResultUpdateManyWithoutGuestInput
  guestParticipantIn: StudyUpdateManyWithoutGuestsInput
}

input GuestUpdateManyDataInput {
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
}

input GuestUpdateManyMutationInput {
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
}

input GuestUpdateManyWithoutGuestParticipantInInput {
  create: [GuestCreateWithoutGuestParticipantInInput!]
  connect: [GuestWhereUniqueInput!]
  set: [GuestWhereUniqueInput!]
  disconnect: [GuestWhereUniqueInput!]
  delete: [GuestWhereUniqueInput!]
  update: [GuestUpdateWithWhereUniqueWithoutGuestParticipantInInput!]
  updateMany: [GuestUpdateManyWithWhereNestedInput!]
  deleteMany: [GuestScalarWhereInput!]
  upsert: [GuestUpsertWithWhereUniqueWithoutGuestParticipantInInput!]
}

input GuestUpdateManyWithWhereNestedInput {
  where: GuestScalarWhereInput!
  data: GuestUpdateManyDataInput!
}

input GuestUpdateOneInput {
  create: GuestCreateInput
  connect: GuestWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: GuestUpdateDataInput
  upsert: GuestUpsertNestedInput
}

input GuestUpdateOneWithoutResultsInput {
  create: GuestCreateWithoutResultsInput
  connect: GuestWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: GuestUpdateWithoutResultsDataInput
  upsert: GuestUpsertWithoutResultsInput
}

input GuestUpdateWithoutGuestParticipantInDataInput {
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
  results: ResultUpdateManyWithoutGuestInput
}

input GuestUpdateWithoutResultsDataInput {
  publicId: String
  publicReadableId: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  guestAccountExpiry: String
  guestParticipantIn: StudyUpdateManyWithoutGuestsInput
}

input GuestUpdateWithWhereUniqueWithoutGuestParticipantInInput {
  where: GuestWhereUniqueInput!
  data: GuestUpdateWithoutGuestParticipantInDataInput!
}

input GuestUpsertNestedInput {
  update: GuestUpdateDataInput!
  create: GuestCreateInput!
}

input GuestUpsertWithoutResultsInput {
  update: GuestUpdateWithoutResultsDataInput!
  create: GuestCreateWithoutResultsInput!
}

input GuestUpsertWithWhereUniqueWithoutGuestParticipantInInput {
  where: GuestWhereUniqueInput!
  update: GuestUpdateWithoutGuestParticipantInDataInput!
  create: GuestCreateWithoutGuestParticipantInInput!
}

input GuestWhereInput {
  """Logical AND on all given filters."""
  AND: [GuestWhereInput!]

  """Logical OR on all given filters."""
  OR: [GuestWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GuestWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  publicId: String

  """All values that are not equal to given value."""
  publicId_not: String

  """All values that are contained in given list."""
  publicId_in: [String!]

  """All values that are not contained in given list."""
  publicId_not_in: [String!]

  """All values less than the given value."""
  publicId_lt: String

  """All values less than or equal the given value."""
  publicId_lte: String

  """All values greater than the given value."""
  publicId_gt: String

  """All values greater than or equal the given value."""
  publicId_gte: String

  """All values containing the given string."""
  publicId_contains: String

  """All values not containing the given string."""
  publicId_not_contains: String

  """All values starting with the given string."""
  publicId_starts_with: String

  """All values not starting with the given string."""
  publicId_not_starts_with: String

  """All values ending with the given string."""
  publicId_ends_with: String

  """All values not ending with the given string."""
  publicId_not_ends_with: String
  publicReadableId: String

  """All values that are not equal to given value."""
  publicReadableId_not: String

  """All values that are contained in given list."""
  publicReadableId_in: [String!]

  """All values that are not contained in given list."""
  publicReadableId_not_in: [String!]

  """All values less than the given value."""
  publicReadableId_lt: String

  """All values less than or equal the given value."""
  publicReadableId_lte: String

  """All values greater than the given value."""
  publicReadableId_gt: String

  """All values greater than or equal the given value."""
  publicReadableId_gte: String

  """All values containing the given string."""
  publicReadableId_contains: String

  """All values not containing the given string."""
  publicReadableId_not_contains: String

  """All values starting with the given string."""
  publicReadableId_starts_with: String

  """All values not starting with the given string."""
  publicReadableId_not_starts_with: String

  """All values ending with the given string."""
  publicReadableId_ends_with: String

  """All values not ending with the given string."""
  publicReadableId_not_ends_with: String
  guestAccountExpiry: String

  """All values that are not equal to given value."""
  guestAccountExpiry_not: String

  """All values that are contained in given list."""
  guestAccountExpiry_in: [String!]

  """All values that are not contained in given list."""
  guestAccountExpiry_not_in: [String!]

  """All values less than the given value."""
  guestAccountExpiry_lt: String

  """All values less than or equal the given value."""
  guestAccountExpiry_lte: String

  """All values greater than the given value."""
  guestAccountExpiry_gt: String

  """All values greater than or equal the given value."""
  guestAccountExpiry_gte: String

  """All values containing the given string."""
  guestAccountExpiry_contains: String

  """All values not containing the given string."""
  guestAccountExpiry_not_contains: String

  """All values starting with the given string."""
  guestAccountExpiry_starts_with: String

  """All values not starting with the given string."""
  guestAccountExpiry_not_starts_with: String

  """All values ending with the given string."""
  guestAccountExpiry_ends_with: String

  """All values not ending with the given string."""
  guestAccountExpiry_not_ends_with: String
  results_every: ResultWhereInput
  results_some: ResultWhereInput
  results_none: ResultWhereInput
  guestParticipantIn_every: StudyWhereInput
  guestParticipantIn_some: StudyWhereInput
  guestParticipantIn_none: StudyWhereInput
}

input GuestWhereUniqueInput {
  id: ID
  publicId: String
}

type Homework implements Node {
  id: ID!
  author: Profile
  assignment: Assignment
  title: String
  content: String
  settings: Json
  public: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

"""A connection to a list of items."""
type HomeworkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [HomeworkEdge]!
  aggregate: AggregateHomework!
}

input HomeworkCreateInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  author: ProfileCreateOneWithoutAuthorOfHomeworkInput
  assignment: AssignmentCreateOneWithoutHomeworkInput
  tags: TagCreateManyWithoutHomeworksInput
}

input HomeworkCreateManyWithoutAssignmentInput {
  create: [HomeworkCreateWithoutAssignmentInput!]
  connect: [HomeworkWhereUniqueInput!]
}

input HomeworkCreateManyWithoutAuthorInput {
  create: [HomeworkCreateWithoutAuthorInput!]
  connect: [HomeworkWhereUniqueInput!]
}

input HomeworkCreateManyWithoutTagsInput {
  create: [HomeworkCreateWithoutTagsInput!]
  connect: [HomeworkWhereUniqueInput!]
}

input HomeworkCreateWithoutAssignmentInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  author: ProfileCreateOneWithoutAuthorOfHomeworkInput
  tags: TagCreateManyWithoutHomeworksInput
}

input HomeworkCreateWithoutAuthorInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  assignment: AssignmentCreateOneWithoutHomeworkInput
  tags: TagCreateManyWithoutHomeworksInput
}

input HomeworkCreateWithoutTagsInput {
  id: ID
  title: String
  content: String
  settings: Json
  public: Boolean
  author: ProfileCreateOneWithoutAuthorOfHomeworkInput
  assignment: AssignmentCreateOneWithoutHomeworkInput
}

"""An edge in a connection."""
type HomeworkEdge {
  """The item at the end of the edge."""
  node: Homework!

  """A cursor for use in pagination."""
  cursor: String!
}

enum HomeworkOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  settings_ASC
  settings_DESC
  public_ASC
  public_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type HomeworkPreviousValues {
  id: ID!
  title: String
  content: String
  settings: Json
  public: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input HomeworkScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [HomeworkScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [HomeworkScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [HomeworkScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type HomeworkSubscriptionPayload {
  mutation: MutationType!
  node: Homework
  updatedFields: [String!]
  previousValues: HomeworkPreviousValues
}

input HomeworkSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [HomeworkSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [HomeworkSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [HomeworkSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: HomeworkWhereInput
}

input HomeworkUpdateInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  author: ProfileUpdateOneWithoutAuthorOfHomeworkInput
  assignment: AssignmentUpdateOneWithoutHomeworkInput
  tags: TagUpdateManyWithoutHomeworksInput
}

input HomeworkUpdateManyDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
}

input HomeworkUpdateManyMutationInput {
  title: String
  content: String
  settings: Json
  public: Boolean
}

input HomeworkUpdateManyWithoutAssignmentInput {
  create: [HomeworkCreateWithoutAssignmentInput!]
  connect: [HomeworkWhereUniqueInput!]
  set: [HomeworkWhereUniqueInput!]
  disconnect: [HomeworkWhereUniqueInput!]
  delete: [HomeworkWhereUniqueInput!]
  update: [HomeworkUpdateWithWhereUniqueWithoutAssignmentInput!]
  updateMany: [HomeworkUpdateManyWithWhereNestedInput!]
  deleteMany: [HomeworkScalarWhereInput!]
  upsert: [HomeworkUpsertWithWhereUniqueWithoutAssignmentInput!]
}

input HomeworkUpdateManyWithoutAuthorInput {
  create: [HomeworkCreateWithoutAuthorInput!]
  connect: [HomeworkWhereUniqueInput!]
  set: [HomeworkWhereUniqueInput!]
  disconnect: [HomeworkWhereUniqueInput!]
  delete: [HomeworkWhereUniqueInput!]
  update: [HomeworkUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [HomeworkUpdateManyWithWhereNestedInput!]
  deleteMany: [HomeworkScalarWhereInput!]
  upsert: [HomeworkUpsertWithWhereUniqueWithoutAuthorInput!]
}

input HomeworkUpdateManyWithoutTagsInput {
  create: [HomeworkCreateWithoutTagsInput!]
  connect: [HomeworkWhereUniqueInput!]
  set: [HomeworkWhereUniqueInput!]
  disconnect: [HomeworkWhereUniqueInput!]
  delete: [HomeworkWhereUniqueInput!]
  update: [HomeworkUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [HomeworkUpdateManyWithWhereNestedInput!]
  deleteMany: [HomeworkScalarWhereInput!]
  upsert: [HomeworkUpsertWithWhereUniqueWithoutTagsInput!]
}

input HomeworkUpdateManyWithWhereNestedInput {
  where: HomeworkScalarWhereInput!
  data: HomeworkUpdateManyDataInput!
}

input HomeworkUpdateWithoutAssignmentDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  author: ProfileUpdateOneWithoutAuthorOfHomeworkInput
  tags: TagUpdateManyWithoutHomeworksInput
}

input HomeworkUpdateWithoutAuthorDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  assignment: AssignmentUpdateOneWithoutHomeworkInput
  tags: TagUpdateManyWithoutHomeworksInput
}

input HomeworkUpdateWithoutTagsDataInput {
  title: String
  content: String
  settings: Json
  public: Boolean
  author: ProfileUpdateOneWithoutAuthorOfHomeworkInput
  assignment: AssignmentUpdateOneWithoutHomeworkInput
}

input HomeworkUpdateWithWhereUniqueWithoutAssignmentInput {
  where: HomeworkWhereUniqueInput!
  data: HomeworkUpdateWithoutAssignmentDataInput!
}

input HomeworkUpdateWithWhereUniqueWithoutAuthorInput {
  where: HomeworkWhereUniqueInput!
  data: HomeworkUpdateWithoutAuthorDataInput!
}

input HomeworkUpdateWithWhereUniqueWithoutTagsInput {
  where: HomeworkWhereUniqueInput!
  data: HomeworkUpdateWithoutTagsDataInput!
}

input HomeworkUpsertWithWhereUniqueWithoutAssignmentInput {
  where: HomeworkWhereUniqueInput!
  update: HomeworkUpdateWithoutAssignmentDataInput!
  create: HomeworkCreateWithoutAssignmentInput!
}

input HomeworkUpsertWithWhereUniqueWithoutAuthorInput {
  where: HomeworkWhereUniqueInput!
  update: HomeworkUpdateWithoutAuthorDataInput!
  create: HomeworkCreateWithoutAuthorInput!
}

input HomeworkUpsertWithWhereUniqueWithoutTagsInput {
  where: HomeworkWhereUniqueInput!
  update: HomeworkUpdateWithoutTagsDataInput!
  create: HomeworkCreateWithoutTagsInput!
}

input HomeworkWhereInput {
  """Logical AND on all given filters."""
  AND: [HomeworkWhereInput!]

  """Logical OR on all given filters."""
  OR: [HomeworkWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [HomeworkWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  assignment: AssignmentWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input HomeworkWhereUniqueInput {
  id: ID
}

type Journal implements Node {
  id: ID!
  title: String
  description: String
  creator: Profile!
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

"""A connection to a list of items."""
type JournalConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [JournalEdge]!
  aggregate: AggregateJournal!
}

input JournalCreateInput {
  id: ID
  title: String
  description: String
  settings: Json
  creator: ProfileCreateOneWithoutJournalsInput!
  posts: PostCreateManyWithoutJournalInput
  tags: TagCreateManyWithoutJournalsInput
}

input JournalCreateManyWithoutCreatorInput {
  create: [JournalCreateWithoutCreatorInput!]
  connect: [JournalWhereUniqueInput!]
}

input JournalCreateManyWithoutTagsInput {
  create: [JournalCreateWithoutTagsInput!]
  connect: [JournalWhereUniqueInput!]
}

input JournalCreateOneWithoutPostsInput {
  create: JournalCreateWithoutPostsInput
  connect: JournalWhereUniqueInput
}

input JournalCreateWithoutCreatorInput {
  id: ID
  title: String
  description: String
  settings: Json
  posts: PostCreateManyWithoutJournalInput
  tags: TagCreateManyWithoutJournalsInput
}

input JournalCreateWithoutPostsInput {
  id: ID
  title: String
  description: String
  settings: Json
  creator: ProfileCreateOneWithoutJournalsInput!
  tags: TagCreateManyWithoutJournalsInput
}

input JournalCreateWithoutTagsInput {
  id: ID
  title: String
  description: String
  settings: Json
  creator: ProfileCreateOneWithoutJournalsInput!
  posts: PostCreateManyWithoutJournalInput
}

"""An edge in a connection."""
type JournalEdge {
  """The item at the end of the edge."""
  node: Journal!

  """A cursor for use in pagination."""
  cursor: String!
}

enum JournalOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type JournalPreviousValues {
  id: ID!
  title: String
  description: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input JournalScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [JournalScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [JournalScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JournalScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type JournalSubscriptionPayload {
  mutation: MutationType!
  node: Journal
  updatedFields: [String!]
  previousValues: JournalPreviousValues
}

input JournalSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [JournalSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [JournalSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JournalSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: JournalWhereInput
}

input JournalUpdateInput {
  title: String
  description: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutJournalsInput
  posts: PostUpdateManyWithoutJournalInput
  tags: TagUpdateManyWithoutJournalsInput
}

input JournalUpdateManyDataInput {
  title: String
  description: String
  settings: Json
}

input JournalUpdateManyMutationInput {
  title: String
  description: String
  settings: Json
}

input JournalUpdateManyWithoutCreatorInput {
  create: [JournalCreateWithoutCreatorInput!]
  connect: [JournalWhereUniqueInput!]
  set: [JournalWhereUniqueInput!]
  disconnect: [JournalWhereUniqueInput!]
  delete: [JournalWhereUniqueInput!]
  update: [JournalUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [JournalUpdateManyWithWhereNestedInput!]
  deleteMany: [JournalScalarWhereInput!]
  upsert: [JournalUpsertWithWhereUniqueWithoutCreatorInput!]
}

input JournalUpdateManyWithoutTagsInput {
  create: [JournalCreateWithoutTagsInput!]
  connect: [JournalWhereUniqueInput!]
  set: [JournalWhereUniqueInput!]
  disconnect: [JournalWhereUniqueInput!]
  delete: [JournalWhereUniqueInput!]
  update: [JournalUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [JournalUpdateManyWithWhereNestedInput!]
  deleteMany: [JournalScalarWhereInput!]
  upsert: [JournalUpsertWithWhereUniqueWithoutTagsInput!]
}

input JournalUpdateManyWithWhereNestedInput {
  where: JournalScalarWhereInput!
  data: JournalUpdateManyDataInput!
}

input JournalUpdateOneRequiredWithoutPostsInput {
  create: JournalCreateWithoutPostsInput
  connect: JournalWhereUniqueInput
  update: JournalUpdateWithoutPostsDataInput
  upsert: JournalUpsertWithoutPostsInput
}

input JournalUpdateWithoutCreatorDataInput {
  title: String
  description: String
  settings: Json
  posts: PostUpdateManyWithoutJournalInput
  tags: TagUpdateManyWithoutJournalsInput
}

input JournalUpdateWithoutPostsDataInput {
  title: String
  description: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutJournalsInput
  tags: TagUpdateManyWithoutJournalsInput
}

input JournalUpdateWithoutTagsDataInput {
  title: String
  description: String
  settings: Json
  creator: ProfileUpdateOneRequiredWithoutJournalsInput
  posts: PostUpdateManyWithoutJournalInput
}

input JournalUpdateWithWhereUniqueWithoutCreatorInput {
  where: JournalWhereUniqueInput!
  data: JournalUpdateWithoutCreatorDataInput!
}

input JournalUpdateWithWhereUniqueWithoutTagsInput {
  where: JournalWhereUniqueInput!
  data: JournalUpdateWithoutTagsDataInput!
}

input JournalUpsertWithoutPostsInput {
  update: JournalUpdateWithoutPostsDataInput!
  create: JournalCreateWithoutPostsInput!
}

input JournalUpsertWithWhereUniqueWithoutCreatorInput {
  where: JournalWhereUniqueInput!
  update: JournalUpdateWithoutCreatorDataInput!
  create: JournalCreateWithoutCreatorInput!
}

input JournalUpsertWithWhereUniqueWithoutTagsInput {
  where: JournalWhereUniqueInput!
  update: JournalUpdateWithoutTagsDataInput!
  create: JournalCreateWithoutTagsInput!
}

input JournalWhereInput {
  """Logical AND on all given filters."""
  AND: [JournalWhereInput!]

  """Logical OR on all given filters."""
  OR: [JournalWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JournalWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  creator: ProfileWhereInput
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input JournalWhereUniqueInput {
  id: ID
}

"""Raw JSON value"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Message implements Node {
  id: ID!
  content: String!
  author: Profile!
  info: Json
  settings: Json
  expireAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type MessageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MessageEdge]!
  aggregate: AggregateMessage!
}

input MessageCreateInput {
  id: ID
  content: String!
  info: Json
  settings: Json
  expireAt: DateTime
  author: ProfileCreateOneInput!
}

input MessageCreateManyInput {
  create: [MessageCreateInput!]
  connect: [MessageWhereUniqueInput!]
}

"""An edge in a connection."""
type MessageEdge {
  """The item at the end of the edge."""
  node: Message!

  """A cursor for use in pagination."""
  cursor: String!
}

enum MessageOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  info_ASC
  info_DESC
  settings_ASC
  settings_DESC
  expireAt_ASC
  expireAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MessagePreviousValues {
  id: ID!
  content: String!
  info: Json
  settings: Json
  expireAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

input MessageScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [MessageScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [MessageScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MessageScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  expireAt: DateTime

  """All values that are not equal to given value."""
  expireAt_not: DateTime

  """All values that are contained in given list."""
  expireAt_in: [DateTime!]

  """All values that are not contained in given list."""
  expireAt_not_in: [DateTime!]

  """All values less than the given value."""
  expireAt_lt: DateTime

  """All values less than or equal the given value."""
  expireAt_lte: DateTime

  """All values greater than the given value."""
  expireAt_gt: DateTime

  """All values greater than or equal the given value."""
  expireAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type MessageSubscriptionPayload {
  mutation: MutationType!
  node: Message
  updatedFields: [String!]
  previousValues: MessagePreviousValues
}

input MessageSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [MessageSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MessageSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MessageSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MessageWhereInput
}

input MessageUpdateDataInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
  author: ProfileUpdateOneRequiredInput
}

input MessageUpdateInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
  author: ProfileUpdateOneRequiredInput
}

input MessageUpdateManyDataInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
}

input MessageUpdateManyInput {
  create: [MessageCreateInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  delete: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueNestedInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
  deleteMany: [MessageScalarWhereInput!]
  upsert: [MessageUpsertWithWhereUniqueNestedInput!]
}

input MessageUpdateManyMutationInput {
  content: String
  info: Json
  settings: Json
  expireAt: DateTime
}

input MessageUpdateManyWithWhereNestedInput {
  where: MessageScalarWhereInput!
  data: MessageUpdateManyDataInput!
}

input MessageUpdateWithWhereUniqueNestedInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateDataInput!
}

input MessageUpsertWithWhereUniqueNestedInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateDataInput!
  create: MessageCreateInput!
}

input MessageWhereInput {
  """Logical AND on all given filters."""
  AND: [MessageWhereInput!]

  """Logical OR on all given filters."""
  OR: [MessageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MessageWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  expireAt: DateTime

  """All values that are not equal to given value."""
  expireAt_not: DateTime

  """All values that are contained in given list."""
  expireAt_in: [DateTime!]

  """All values that are not contained in given list."""
  expireAt_not_in: [DateTime!]

  """All values less than the given value."""
  expireAt_lt: DateTime

  """All values less than or equal the given value."""
  expireAt_lte: DateTime

  """All values greater than the given value."""
  expireAt_gt: DateTime

  """All values greater than or equal the given value."""
  expireAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
}

input MessageWhereUniqueInput {
  id: ID
}

type Mutation {
  createAuthEmail(data: AuthEmailCreateInput!): AuthEmail!
  createAuthParticipant(data: AuthParticipantCreateInput!): AuthParticipant!
  createAuthToken(data: AuthTokenCreateInput!): AuthToken!
  createAuthInvite(data: AuthInviteCreateInput!): AuthInvite!
  createSchool(data: SchoolCreateInput!): School!
  createClass(data: ClassCreateInput!): Class!
  createClassNetwork(data: ClassNetworkCreateInput!): ClassNetwork!
  createConsent(data: ConsentCreateInput!): Consent!
  createJournal(data: JournalCreateInput!): Journal!
  createPost(data: PostCreateInput!): Post!
  createProposalBoard(data: ProposalBoardCreateInput!): ProposalBoard!
  createProposalSection(data: ProposalSectionCreateInput!): ProposalSection!
  createProposalCard(data: ProposalCardCreateInput!): ProposalCard!
  createReview(data: ReviewCreateInput!): Review!
  createWord(data: WordCreateInput!): Word!
  createTalk(data: TalkCreateInput!): Talk!
  createAssignment(data: AssignmentCreateInput!): Assignment!
  createHomework(data: HomeworkCreateInput!): Homework!
  createScript(data: ScriptCreateInput!): Script!
  createTag(data: TagCreateInput!): Tag!
  createUpdate(data: UpdateCreateInput!): Update!
  createSummaryResult(data: SummaryResultCreateInput!): SummaryResult!
  createTemplate(data: TemplateCreateInput!): Template!
  createTask(data: TaskCreateInput!): Task!
  createStudy(data: StudyCreateInput!): Study!
  createGuest(data: GuestCreateInput!): Guest!
  createResult(data: ResultCreateInput!): Result!
  createProfile(data: ProfileCreateInput!): Profile!
  createMessage(data: MessageCreateInput!): Message!
  createData(data: DataCreateInput!): Data!
  updateAuthEmail(data: AuthEmailUpdateInput!, where: AuthEmailWhereUniqueInput!): AuthEmail
  updateAuthParticipant(data: AuthParticipantUpdateInput!, where: AuthParticipantWhereUniqueInput!): AuthParticipant
  updateAuthToken(data: AuthTokenUpdateInput!, where: AuthTokenWhereUniqueInput!): AuthToken
  updateAuthInvite(data: AuthInviteUpdateInput!, where: AuthInviteWhereUniqueInput!): AuthInvite
  updateSchool(data: SchoolUpdateInput!, where: SchoolWhereUniqueInput!): School
  updateClass(data: ClassUpdateInput!, where: ClassWhereUniqueInput!): Class
  updateClassNetwork(data: ClassNetworkUpdateInput!, where: ClassNetworkWhereUniqueInput!): ClassNetwork
  updateConsent(data: ConsentUpdateInput!, where: ConsentWhereUniqueInput!): Consent
  updateJournal(data: JournalUpdateInput!, where: JournalWhereUniqueInput!): Journal
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateProposalBoard(data: ProposalBoardUpdateInput!, where: ProposalBoardWhereUniqueInput!): ProposalBoard
  updateProposalSection(data: ProposalSectionUpdateInput!, where: ProposalSectionWhereUniqueInput!): ProposalSection
  updateProposalCard(data: ProposalCardUpdateInput!, where: ProposalCardWhereUniqueInput!): ProposalCard
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  updateWord(data: WordUpdateInput!, where: WordWhereUniqueInput!): Word
  updateTalk(data: TalkUpdateInput!, where: TalkWhereUniqueInput!): Talk
  updateAssignment(data: AssignmentUpdateInput!, where: AssignmentWhereUniqueInput!): Assignment
  updateHomework(data: HomeworkUpdateInput!, where: HomeworkWhereUniqueInput!): Homework
  updateScript(data: ScriptUpdateInput!, where: ScriptWhereUniqueInput!): Script
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateUpdate(data: UpdateUpdateInput!, where: UpdateWhereUniqueInput!): Update
  updateSummaryResult(data: SummaryResultUpdateInput!, where: SummaryResultWhereUniqueInput!): SummaryResult
  updateTemplate(data: TemplateUpdateInput!, where: TemplateWhereUniqueInput!): Template
  updateTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task
  updateStudy(data: StudyUpdateInput!, where: StudyWhereUniqueInput!): Study
  updateGuest(data: GuestUpdateInput!, where: GuestWhereUniqueInput!): Guest
  updateResult(data: ResultUpdateInput!, where: ResultWhereUniqueInput!): Result
  updateProfile(data: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile
  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message
  updateData(data: DataUpdateInput!, where: DataWhereUniqueInput!): Data
  deleteAuthEmail(where: AuthEmailWhereUniqueInput!): AuthEmail
  deleteAuthParticipant(where: AuthParticipantWhereUniqueInput!): AuthParticipant
  deleteAuthToken(where: AuthTokenWhereUniqueInput!): AuthToken
  deleteAuthInvite(where: AuthInviteWhereUniqueInput!): AuthInvite
  deleteSchool(where: SchoolWhereUniqueInput!): School
  deleteClass(where: ClassWhereUniqueInput!): Class
  deleteClassNetwork(where: ClassNetworkWhereUniqueInput!): ClassNetwork
  deleteConsent(where: ConsentWhereUniqueInput!): Consent
  deleteJournal(where: JournalWhereUniqueInput!): Journal
  deletePost(where: PostWhereUniqueInput!): Post
  deleteProposalBoard(where: ProposalBoardWhereUniqueInput!): ProposalBoard
  deleteProposalSection(where: ProposalSectionWhereUniqueInput!): ProposalSection
  deleteProposalCard(where: ProposalCardWhereUniqueInput!): ProposalCard
  deleteReview(where: ReviewWhereUniqueInput!): Review
  deleteWord(where: WordWhereUniqueInput!): Word
  deleteTalk(where: TalkWhereUniqueInput!): Talk
  deleteAssignment(where: AssignmentWhereUniqueInput!): Assignment
  deleteHomework(where: HomeworkWhereUniqueInput!): Homework
  deleteScript(where: ScriptWhereUniqueInput!): Script
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteUpdate(where: UpdateWhereUniqueInput!): Update
  deleteSummaryResult(where: SummaryResultWhereUniqueInput!): SummaryResult
  deleteTemplate(where: TemplateWhereUniqueInput!): Template
  deleteTask(where: TaskWhereUniqueInput!): Task
  deleteStudy(where: StudyWhereUniqueInput!): Study
  deleteGuest(where: GuestWhereUniqueInput!): Guest
  deleteResult(where: ResultWhereUniqueInput!): Result
  deleteProfile(where: ProfileWhereUniqueInput!): Profile
  deleteMessage(where: MessageWhereUniqueInput!): Message
  deleteData(where: DataWhereUniqueInput!): Data
  upsertAuthEmail(where: AuthEmailWhereUniqueInput!, create: AuthEmailCreateInput!, update: AuthEmailUpdateInput!): AuthEmail!
  upsertAuthParticipant(where: AuthParticipantWhereUniqueInput!, create: AuthParticipantCreateInput!, update: AuthParticipantUpdateInput!): AuthParticipant!
  upsertAuthToken(where: AuthTokenWhereUniqueInput!, create: AuthTokenCreateInput!, update: AuthTokenUpdateInput!): AuthToken!
  upsertAuthInvite(where: AuthInviteWhereUniqueInput!, create: AuthInviteCreateInput!, update: AuthInviteUpdateInput!): AuthInvite!
  upsertSchool(where: SchoolWhereUniqueInput!, create: SchoolCreateInput!, update: SchoolUpdateInput!): School!
  upsertClass(where: ClassWhereUniqueInput!, create: ClassCreateInput!, update: ClassUpdateInput!): Class!
  upsertClassNetwork(where: ClassNetworkWhereUniqueInput!, create: ClassNetworkCreateInput!, update: ClassNetworkUpdateInput!): ClassNetwork!
  upsertConsent(where: ConsentWhereUniqueInput!, create: ConsentCreateInput!, update: ConsentUpdateInput!): Consent!
  upsertJournal(where: JournalWhereUniqueInput!, create: JournalCreateInput!, update: JournalUpdateInput!): Journal!
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  upsertProposalBoard(where: ProposalBoardWhereUniqueInput!, create: ProposalBoardCreateInput!, update: ProposalBoardUpdateInput!): ProposalBoard!
  upsertProposalSection(where: ProposalSectionWhereUniqueInput!, create: ProposalSectionCreateInput!, update: ProposalSectionUpdateInput!): ProposalSection!
  upsertProposalCard(where: ProposalCardWhereUniqueInput!, create: ProposalCardCreateInput!, update: ProposalCardUpdateInput!): ProposalCard!
  upsertReview(where: ReviewWhereUniqueInput!, create: ReviewCreateInput!, update: ReviewUpdateInput!): Review!
  upsertWord(where: WordWhereUniqueInput!, create: WordCreateInput!, update: WordUpdateInput!): Word!
  upsertTalk(where: TalkWhereUniqueInput!, create: TalkCreateInput!, update: TalkUpdateInput!): Talk!
  upsertAssignment(where: AssignmentWhereUniqueInput!, create: AssignmentCreateInput!, update: AssignmentUpdateInput!): Assignment!
  upsertHomework(where: HomeworkWhereUniqueInput!, create: HomeworkCreateInput!, update: HomeworkUpdateInput!): Homework!
  upsertScript(where: ScriptWhereUniqueInput!, create: ScriptCreateInput!, update: ScriptUpdateInput!): Script!
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  upsertUpdate(where: UpdateWhereUniqueInput!, create: UpdateCreateInput!, update: UpdateUpdateInput!): Update!
  upsertSummaryResult(where: SummaryResultWhereUniqueInput!, create: SummaryResultCreateInput!, update: SummaryResultUpdateInput!): SummaryResult!
  upsertTemplate(where: TemplateWhereUniqueInput!, create: TemplateCreateInput!, update: TemplateUpdateInput!): Template!
  upsertTask(where: TaskWhereUniqueInput!, create: TaskCreateInput!, update: TaskUpdateInput!): Task!
  upsertStudy(where: StudyWhereUniqueInput!, create: StudyCreateInput!, update: StudyUpdateInput!): Study!
  upsertGuest(where: GuestWhereUniqueInput!, create: GuestCreateInput!, update: GuestUpdateInput!): Guest!
  upsertResult(where: ResultWhereUniqueInput!, create: ResultCreateInput!, update: ResultUpdateInput!): Result!
  upsertProfile(where: ProfileWhereUniqueInput!, create: ProfileCreateInput!, update: ProfileUpdateInput!): Profile!
  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!
  upsertData(where: DataWhereUniqueInput!, create: DataCreateInput!, update: DataUpdateInput!): Data!
  updateManyAuthEmails(data: AuthEmailUpdateManyMutationInput!, where: AuthEmailWhereInput): BatchPayload!
  updateManyAuthParticipants(data: AuthParticipantUpdateManyMutationInput!, where: AuthParticipantWhereInput): BatchPayload!
  updateManyAuthTokens(data: AuthTokenUpdateManyMutationInput!, where: AuthTokenWhereInput): BatchPayload!
  updateManySchools(data: SchoolUpdateManyMutationInput!, where: SchoolWhereInput): BatchPayload!
  updateManyClasses(data: ClassUpdateManyMutationInput!, where: ClassWhereInput): BatchPayload!
  updateManyClassNetworks(data: ClassNetworkUpdateManyMutationInput!, where: ClassNetworkWhereInput): BatchPayload!
  updateManyConsents(data: ConsentUpdateManyMutationInput!, where: ConsentWhereInput): BatchPayload!
  updateManyJournals(data: JournalUpdateManyMutationInput!, where: JournalWhereInput): BatchPayload!
  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  updateManyProposalBoards(data: ProposalBoardUpdateManyMutationInput!, where: ProposalBoardWhereInput): BatchPayload!
  updateManyProposalSections(data: ProposalSectionUpdateManyMutationInput!, where: ProposalSectionWhereInput): BatchPayload!
  updateManyProposalCards(data: ProposalCardUpdateManyMutationInput!, where: ProposalCardWhereInput): BatchPayload!
  updateManyReviews(data: ReviewUpdateManyMutationInput!, where: ReviewWhereInput): BatchPayload!
  updateManyWords(data: WordUpdateManyMutationInput!, where: WordWhereInput): BatchPayload!
  updateManyTalks(data: TalkUpdateManyMutationInput!, where: TalkWhereInput): BatchPayload!
  updateManyAssignments(data: AssignmentUpdateManyMutationInput!, where: AssignmentWhereInput): BatchPayload!
  updateManyHomeworks(data: HomeworkUpdateManyMutationInput!, where: HomeworkWhereInput): BatchPayload!
  updateManyScripts(data: ScriptUpdateManyMutationInput!, where: ScriptWhereInput): BatchPayload!
  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  updateManyUpdates(data: UpdateUpdateManyMutationInput!, where: UpdateWhereInput): BatchPayload!
  updateManySummaryResults(data: SummaryResultUpdateManyMutationInput!, where: SummaryResultWhereInput): BatchPayload!
  updateManyTemplates(data: TemplateUpdateManyMutationInput!, where: TemplateWhereInput): BatchPayload!
  updateManyTasks(data: TaskUpdateManyMutationInput!, where: TaskWhereInput): BatchPayload!
  updateManyStudies(data: StudyUpdateManyMutationInput!, where: StudyWhereInput): BatchPayload!
  updateManyGuests(data: GuestUpdateManyMutationInput!, where: GuestWhereInput): BatchPayload!
  updateManyResults(data: ResultUpdateManyMutationInput!, where: ResultWhereInput): BatchPayload!
  updateManyProfiles(data: ProfileUpdateManyMutationInput!, where: ProfileWhereInput): BatchPayload!
  updateManyMessages(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): BatchPayload!
  updateManyDatas(data: DataUpdateManyMutationInput!, where: DataWhereInput): BatchPayload!
  deleteManyAuthEmails(where: AuthEmailWhereInput): BatchPayload!
  deleteManyAuthParticipants(where: AuthParticipantWhereInput): BatchPayload!
  deleteManyAuthTokens(where: AuthTokenWhereInput): BatchPayload!
  deleteManyAuthInvites(where: AuthInviteWhereInput): BatchPayload!
  deleteManySchools(where: SchoolWhereInput): BatchPayload!
  deleteManyClasses(where: ClassWhereInput): BatchPayload!
  deleteManyClassNetworks(where: ClassNetworkWhereInput): BatchPayload!
  deleteManyConsents(where: ConsentWhereInput): BatchPayload!
  deleteManyJournals(where: JournalWhereInput): BatchPayload!
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  deleteManyProposalBoards(where: ProposalBoardWhereInput): BatchPayload!
  deleteManyProposalSections(where: ProposalSectionWhereInput): BatchPayload!
  deleteManyProposalCards(where: ProposalCardWhereInput): BatchPayload!
  deleteManyReviews(where: ReviewWhereInput): BatchPayload!
  deleteManyWords(where: WordWhereInput): BatchPayload!
  deleteManyTalks(where: TalkWhereInput): BatchPayload!
  deleteManyAssignments(where: AssignmentWhereInput): BatchPayload!
  deleteManyHomeworks(where: HomeworkWhereInput): BatchPayload!
  deleteManyScripts(where: ScriptWhereInput): BatchPayload!
  deleteManyTags(where: TagWhereInput): BatchPayload!
  deleteManyUpdates(where: UpdateWhereInput): BatchPayload!
  deleteManySummaryResults(where: SummaryResultWhereInput): BatchPayload!
  deleteManyTemplates(where: TemplateWhereInput): BatchPayload!
  deleteManyTasks(where: TaskWhereInput): BatchPayload!
  deleteManyStudies(where: StudyWhereInput): BatchPayload!
  deleteManyGuests(where: GuestWhereInput): BatchPayload!
  deleteManyResults(where: ResultWhereInput): BatchPayload!
  deleteManyProfiles(where: ProfileWhereInput): BatchPayload!
  deleteManyMessages(where: MessageWhereInput): BatchPayload!
  deleteManyDatas(where: DataWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  IT
  ADMIN
  SCIENTIST
  MENTOR
  TEACHER
  STUDENT
  PARTICIPANT
}

type Post implements Node {
  id: ID!
  author: Profile!
  title: String
  content: String
  journal: Journal!
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

"""A connection to a list of items."""
type PostConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  id: ID
  title: String
  content: String
  settings: Json
  author: ProfileCreateOneWithoutPostsInput!
  journal: JournalCreateOneWithoutPostsInput!
  tags: TagCreateManyWithoutPostsInput
}

input PostCreateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
}

input PostCreateManyWithoutJournalInput {
  create: [PostCreateWithoutJournalInput!]
  connect: [PostWhereUniqueInput!]
}

input PostCreateManyWithoutTagsInput {
  create: [PostCreateWithoutTagsInput!]
  connect: [PostWhereUniqueInput!]
}

input PostCreateWithoutAuthorInput {
  id: ID
  title: String
  content: String
  settings: Json
  journal: JournalCreateOneWithoutPostsInput!
  tags: TagCreateManyWithoutPostsInput
}

input PostCreateWithoutJournalInput {
  id: ID
  title: String
  content: String
  settings: Json
  author: ProfileCreateOneWithoutPostsInput!
  tags: TagCreateManyWithoutPostsInput
}

input PostCreateWithoutTagsInput {
  id: ID
  title: String
  content: String
  settings: Json
  author: ProfileCreateOneWithoutPostsInput!
  journal: JournalCreateOneWithoutPostsInput!
}

"""An edge in a connection."""
type PostEdge {
  """The item at the end of the edge."""
  node: Post!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PostPreviousValues {
  id: ID!
  title: String
  content: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PostScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PostScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PostSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostWhereInput
}

input PostUpdateInput {
  title: String
  content: String
  settings: Json
  author: ProfileUpdateOneRequiredWithoutPostsInput
  journal: JournalUpdateOneRequiredWithoutPostsInput
  tags: TagUpdateManyWithoutPostsInput
}

input PostUpdateManyDataInput {
  title: String
  content: String
  settings: Json
}

input PostUpdateManyMutationInput {
  title: String
  content: String
  settings: Json
}

input PostUpdateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereNestedInput!]
  deleteMany: [PostScalarWhereInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateManyWithoutJournalInput {
  create: [PostCreateWithoutJournalInput!]
  connect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutJournalInput!]
  updateMany: [PostUpdateManyWithWhereNestedInput!]
  deleteMany: [PostScalarWhereInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutJournalInput!]
}

input PostUpdateManyWithoutTagsInput {
  create: [PostCreateWithoutTagsInput!]
  connect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [PostUpdateManyWithWhereNestedInput!]
  deleteMany: [PostScalarWhereInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutTagsInput!]
}

input PostUpdateManyWithWhereNestedInput {
  where: PostScalarWhereInput!
  data: PostUpdateManyDataInput!
}

input PostUpdateWithoutAuthorDataInput {
  title: String
  content: String
  settings: Json
  journal: JournalUpdateOneRequiredWithoutPostsInput
  tags: TagUpdateManyWithoutPostsInput
}

input PostUpdateWithoutJournalDataInput {
  title: String
  content: String
  settings: Json
  author: ProfileUpdateOneRequiredWithoutPostsInput
  tags: TagUpdateManyWithoutPostsInput
}

input PostUpdateWithoutTagsDataInput {
  title: String
  content: String
  settings: Json
  author: ProfileUpdateOneRequiredWithoutPostsInput
  journal: JournalUpdateOneRequiredWithoutPostsInput
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutAuthorDataInput!
}

input PostUpdateWithWhereUniqueWithoutJournalInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutJournalDataInput!
}

input PostUpdateWithWhereUniqueWithoutTagsInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutTagsDataInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutAuthorDataInput!
  create: PostCreateWithoutAuthorInput!
}

input PostUpsertWithWhereUniqueWithoutJournalInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutJournalDataInput!
  create: PostCreateWithoutJournalInput!
}

input PostUpsertWithWhereUniqueWithoutTagsInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutTagsDataInput!
  create: PostCreateWithoutTagsInput!
}

input PostWhereInput {
  """Logical AND on all given filters."""
  AND: [PostWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  journal: JournalWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input PostWhereUniqueInput {
  id: ID
}

type Profile implements Node {
  id: ID!
  username: String!
  permissions: [Permission!]!
  authEmail(where: AuthEmailWhereInput, orderBy: AuthEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthEmail!]
  authToken(where: AuthTokenWhereInput, orderBy: AuthTokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthToken!]
  authInvite(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthInvite!]
  authParticipant(where: AuthParticipantWhereInput, orderBy: AuthParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthParticipant!]
  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result!]
  teacherIn(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  studentIn(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  participantIn(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  researcherIn(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  taskCreatorIn(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  consentCreatorIn(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent!]
  collaboratorInStudy(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  collaboratorInTask(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  collaboratorInConsent(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent!]
  consentGivenFor(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent!]
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  journals(where: JournalWhereInput, orderBy: JournalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Journal!]
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]
  creatorOfProposal(where: ProposalBoardWhereInput, orderBy: ProposalBoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalBoard!]
  authorOfProposal(where: ProposalBoardWhereInput, orderBy: ProposalBoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalBoard!]
  collaboratorOnProposal(where: ProposalBoardWhereInput, orderBy: ProposalBoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalBoard!]
  assignedToProposalSection(where: ProposalSectionWhereInput, orderBy: ProposalSectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalSection!]
  assignedToProposalCard(where: ProposalCardWhereInput, orderBy: ProposalCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalCard!]
  publicReadableId: String
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  classNetworksCreated(where: ClassNetworkWhereInput, orderBy: ClassNetworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassNetwork!]
  authorOfWord(where: WordWhereInput, orderBy: WordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Word!]
  memberOfTalk(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk!]
  authorOfTalk(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk!]
  authorOfAssignment(where: AssignmentWhereInput, orderBy: AssignmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Assignment!]
  authorOfHomework(where: HomeworkWhereInput, orderBy: HomeworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Homework!]
  favoriteTasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  mentorIn(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  isPublic: Boolean
  creatorOfScript(where: ScriptWhereInput, orderBy: ScriptOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Script!]
  authorOfScript(where: ScriptWhereInput, orderBy: ScriptOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Script!]
  collaboratorOnScript(where: ScriptWhereInput, orderBy: ScriptOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Script!]
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  updates(where: UpdateWhereInput, orderBy: UpdateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Update!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type ProfileConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProfileEdge]!
  aggregate: AggregateProfile!
}

input ProfileCreateInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateManyWithoutAssignedToProposalCardInput {
  create: [ProfileCreateWithoutAssignedToProposalCardInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutAssignedToProposalSectionInput {
  create: [ProfileCreateWithoutAssignedToProposalSectionInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutCollaboratorInConsentInput {
  create: [ProfileCreateWithoutCollaboratorInConsentInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutCollaboratorInStudyInput {
  create: [ProfileCreateWithoutCollaboratorInStudyInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutCollaboratorInTaskInput {
  create: [ProfileCreateWithoutCollaboratorInTaskInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutCollaboratorOnProposalInput {
  create: [ProfileCreateWithoutCollaboratorOnProposalInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutCollaboratorOnScriptInput {
  create: [ProfileCreateWithoutCollaboratorOnScriptInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutConsentGivenForInput {
  create: [ProfileCreateWithoutConsentGivenForInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutMemberOfTalkInput {
  create: [ProfileCreateWithoutMemberOfTalkInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutMentorInInput {
  create: [ProfileCreateWithoutMentorInInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutParticipantInInput {
  create: [ProfileCreateWithoutParticipantInInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutStudentInInput {
  create: [ProfileCreateWithoutStudentInInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateManyWithoutTagsInput {
  create: [ProfileCreateWithoutTagsInput!]
  connect: [ProfileWhereUniqueInput!]
}

input ProfileCreateOneInput {
  create: ProfileCreateInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthEmailInput {
  create: ProfileCreateWithoutAuthEmailInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthInviteInput {
  create: ProfileCreateWithoutAuthInviteInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthorOfAssignmentInput {
  create: ProfileCreateWithoutAuthorOfAssignmentInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthorOfHomeworkInput {
  create: ProfileCreateWithoutAuthorOfHomeworkInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthorOfProposalInput {
  create: ProfileCreateWithoutAuthorOfProposalInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthorOfScriptInput {
  create: ProfileCreateWithoutAuthorOfScriptInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthorOfTalkInput {
  create: ProfileCreateWithoutAuthorOfTalkInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthorOfWordInput {
  create: ProfileCreateWithoutAuthorOfWordInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthParticipantInput {
  create: ProfileCreateWithoutAuthParticipantInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutAuthTokenInput {
  create: ProfileCreateWithoutAuthTokenInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutClassNetworksCreatedInput {
  create: ProfileCreateWithoutClassNetworksCreatedInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutConsentCreatorInInput {
  create: ProfileCreateWithoutConsentCreatorInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutCreatorOfProposalInput {
  create: ProfileCreateWithoutCreatorOfProposalInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutCreatorOfScriptInput {
  create: ProfileCreateWithoutCreatorOfScriptInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutJournalsInput {
  create: ProfileCreateWithoutJournalsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutPostsInput {
  create: ProfileCreateWithoutPostsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutResearcherInInput {
  create: ProfileCreateWithoutResearcherInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutResultsInput {
  create: ProfileCreateWithoutResultsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutReviewsInput {
  create: ProfileCreateWithoutReviewsInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutTaskCreatorInInput {
  create: ProfileCreateWithoutTaskCreatorInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutTeacherInInput {
  create: ProfileCreateWithoutTeacherInInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateOneWithoutUpdatesInput {
  create: ProfileCreateWithoutUpdatesInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreatepermissionsInput {
  set: [Permission!]
}

input ProfileCreateWithoutAssignedToProposalCardInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAssignedToProposalSectionInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthEmailInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthInviteInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthorOfAssignmentInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthorOfHomeworkInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthorOfProposalInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthorOfScriptInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthorOfTalkInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthorOfWordInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthParticipantInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutAuthTokenInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutClassNetworksCreatedInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutCollaboratorInConsentInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutCollaboratorInStudyInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutCollaboratorInTaskInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutCollaboratorOnProposalInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutCollaboratorOnScriptInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutConsentCreatorInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutConsentGivenForInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutCreatorOfProposalInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutCreatorOfScriptInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutJournalsInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutMemberOfTalkInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutMentorInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutParticipantInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutPostsInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutResearcherInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutResultsInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutReviewsInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutStudentInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutTagsInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutTaskCreatorInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutTeacherInInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
  updates: UpdateCreateManyWithoutUserInput
}

input ProfileCreateWithoutUpdatesInput {
  id: ID
  username: String!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileCreatepermissionsInput
  authEmail: AuthEmailCreateManyWithoutProfileInput
  authToken: AuthTokenCreateManyWithoutProfileInput
  authInvite: AuthInviteCreateManyWithoutProfileInput
  authParticipant: AuthParticipantCreateManyWithoutProfileInput
  results: ResultCreateManyWithoutUserInput
  teacherIn: ClassCreateManyWithoutCreatorInput
  studentIn: ClassCreateManyWithoutStudentsInput
  participantIn: StudyCreateManyWithoutParticipantsInput
  researcherIn: StudyCreateManyWithoutAuthorInput
  taskCreatorIn: TaskCreateManyWithoutAuthorInput
  consentCreatorIn: ConsentCreateManyWithoutAuthorInput
  collaboratorInStudy: StudyCreateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskCreateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentCreateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentCreateManyWithoutParticipantsInput
  journals: JournalCreateManyWithoutCreatorInput
  posts: PostCreateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardCreateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardCreateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardCreateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionCreateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardCreateManyWithoutAssignedToInput
  reviews: ReviewCreateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkCreateManyWithoutCreatorInput
  authorOfWord: WordCreateManyWithoutAuthorInput
  memberOfTalk: TalkCreateManyWithoutMembersInput
  authorOfTalk: TalkCreateManyWithoutAuthorInput
  authorOfAssignment: AssignmentCreateManyWithoutAuthorInput
  authorOfHomework: HomeworkCreateManyWithoutAuthorInput
  favoriteTasks: TaskCreateManyInput
  mentorIn: ClassCreateManyWithoutMentorsInput
  creatorOfScript: ScriptCreateManyWithoutCreatorInput
  authorOfScript: ScriptCreateManyWithoutAuthorInput
  collaboratorOnScript: ScriptCreateManyWithoutCollaboratorsInput
  tags: TagCreateManyWithoutProfilesInput
}

"""An edge in a connection."""
type ProfileEdge {
  """The item at the end of the edge."""
  node: Profile!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProfileOrderByInput {
  id_ASC
  id_DESC
  username_ASC
  username_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  info_ASC
  info_DESC
  generalInfo_ASC
  generalInfo_DESC
  tasksInfo_ASC
  tasksInfo_DESC
  studiesInfo_ASC
  studiesInfo_DESC
  consentsInfo_ASC
  consentsInfo_DESC
  publicId_ASC
  publicId_DESC
  publicReadableId_ASC
  publicReadableId_DESC
  isPublic_ASC
  isPublic_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProfilePreviousValues {
  id: ID!
  username: String!
  permissions: [Permission!]!
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProfileScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfileScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfileScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfileScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  publicId: String

  """All values that are not equal to given value."""
  publicId_not: String

  """All values that are contained in given list."""
  publicId_in: [String!]

  """All values that are not contained in given list."""
  publicId_not_in: [String!]

  """All values less than the given value."""
  publicId_lt: String

  """All values less than or equal the given value."""
  publicId_lte: String

  """All values greater than the given value."""
  publicId_gt: String

  """All values greater than or equal the given value."""
  publicId_gte: String

  """All values containing the given string."""
  publicId_contains: String

  """All values not containing the given string."""
  publicId_not_contains: String

  """All values starting with the given string."""
  publicId_starts_with: String

  """All values not starting with the given string."""
  publicId_not_starts_with: String

  """All values ending with the given string."""
  publicId_ends_with: String

  """All values not ending with the given string."""
  publicId_not_ends_with: String
  publicReadableId: String

  """All values that are not equal to given value."""
  publicReadableId_not: String

  """All values that are contained in given list."""
  publicReadableId_in: [String!]

  """All values that are not contained in given list."""
  publicReadableId_not_in: [String!]

  """All values less than the given value."""
  publicReadableId_lt: String

  """All values less than or equal the given value."""
  publicReadableId_lte: String

  """All values greater than the given value."""
  publicReadableId_gt: String

  """All values greater than or equal the given value."""
  publicReadableId_gte: String

  """All values containing the given string."""
  publicReadableId_contains: String

  """All values not containing the given string."""
  publicReadableId_not_contains: String

  """All values starting with the given string."""
  publicReadableId_starts_with: String

  """All values not starting with the given string."""
  publicReadableId_not_starts_with: String

  """All values ending with the given string."""
  publicReadableId_ends_with: String

  """All values not ending with the given string."""
  publicReadableId_not_ends_with: String
  isPublic: Boolean

  """All values that are not equal to given value."""
  isPublic_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ProfileSubscriptionPayload {
  mutation: MutationType!
  node: Profile
  updatedFields: [String!]
  previousValues: ProfilePreviousValues
}

input ProfileSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfileSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfileSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfileSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProfileWhereInput
}

input ProfileUpdateDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateManyDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
}

input ProfileUpdateManyMutationInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
}

input ProfileUpdateManyWithoutAssignedToProposalCardInput {
  create: [ProfileCreateWithoutAssignedToProposalCardInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutAssignedToProposalCardInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutAssignedToProposalCardInput!]
}

input ProfileUpdateManyWithoutAssignedToProposalSectionInput {
  create: [ProfileCreateWithoutAssignedToProposalSectionInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutAssignedToProposalSectionInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutAssignedToProposalSectionInput!]
}

input ProfileUpdateManyWithoutCollaboratorInConsentInput {
  create: [ProfileCreateWithoutCollaboratorInConsentInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorInConsentInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorInConsentInput!]
}

input ProfileUpdateManyWithoutCollaboratorInStudyInput {
  create: [ProfileCreateWithoutCollaboratorInStudyInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorInStudyInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorInStudyInput!]
}

input ProfileUpdateManyWithoutCollaboratorInTaskInput {
  create: [ProfileCreateWithoutCollaboratorInTaskInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorInTaskInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorInTaskInput!]
}

input ProfileUpdateManyWithoutCollaboratorOnProposalInput {
  create: [ProfileCreateWithoutCollaboratorOnProposalInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorOnProposalInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorOnProposalInput!]
}

input ProfileUpdateManyWithoutCollaboratorOnScriptInput {
  create: [ProfileCreateWithoutCollaboratorOnScriptInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutCollaboratorOnScriptInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutCollaboratorOnScriptInput!]
}

input ProfileUpdateManyWithoutConsentGivenForInput {
  create: [ProfileCreateWithoutConsentGivenForInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutConsentGivenForInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutConsentGivenForInput!]
}

input ProfileUpdateManyWithoutMemberOfTalkInput {
  create: [ProfileCreateWithoutMemberOfTalkInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutMemberOfTalkInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutMemberOfTalkInput!]
}

input ProfileUpdateManyWithoutMentorInInput {
  create: [ProfileCreateWithoutMentorInInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutMentorInInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutMentorInInput!]
}

input ProfileUpdateManyWithoutParticipantInInput {
  create: [ProfileCreateWithoutParticipantInInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutParticipantInInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutParticipantInInput!]
}

input ProfileUpdateManyWithoutStudentInInput {
  create: [ProfileCreateWithoutStudentInInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutStudentInInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutStudentInInput!]
}

input ProfileUpdateManyWithoutTagsInput {
  create: [ProfileCreateWithoutTagsInput!]
  connect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  disconnect: [ProfileWhereUniqueInput!]
  delete: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ProfileUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfileScalarWhereInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutTagsInput!]
}

input ProfileUpdateManyWithWhereNestedInput {
  where: ProfileScalarWhereInput!
  data: ProfileUpdateManyDataInput!
}

input ProfileUpdateOneInput {
  create: ProfileCreateInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateDataInput
  upsert: ProfileUpsertNestedInput
}

input ProfileUpdateOneRequiredInput {
  create: ProfileCreateInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateDataInput
  upsert: ProfileUpsertNestedInput
}

input ProfileUpdateOneRequiredWithoutAuthEmailInput {
  create: ProfileCreateWithoutAuthEmailInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthEmailDataInput
  upsert: ProfileUpsertWithoutAuthEmailInput
}

input ProfileUpdateOneRequiredWithoutAuthInviteInput {
  create: ProfileCreateWithoutAuthInviteInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthInviteDataInput
  upsert: ProfileUpsertWithoutAuthInviteInput
}

input ProfileUpdateOneRequiredWithoutAuthParticipantInput {
  create: ProfileCreateWithoutAuthParticipantInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthParticipantDataInput
  upsert: ProfileUpsertWithoutAuthParticipantInput
}

input ProfileUpdateOneRequiredWithoutAuthTokenInput {
  create: ProfileCreateWithoutAuthTokenInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutAuthTokenDataInput
  upsert: ProfileUpsertWithoutAuthTokenInput
}

input ProfileUpdateOneRequiredWithoutClassNetworksCreatedInput {
  create: ProfileCreateWithoutClassNetworksCreatedInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutClassNetworksCreatedDataInput
  upsert: ProfileUpsertWithoutClassNetworksCreatedInput
}

input ProfileUpdateOneRequiredWithoutConsentCreatorInInput {
  create: ProfileCreateWithoutConsentCreatorInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutConsentCreatorInDataInput
  upsert: ProfileUpsertWithoutConsentCreatorInInput
}

input ProfileUpdateOneRequiredWithoutJournalsInput {
  create: ProfileCreateWithoutJournalsInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutJournalsDataInput
  upsert: ProfileUpsertWithoutJournalsInput
}

input ProfileUpdateOneRequiredWithoutPostsInput {
  create: ProfileCreateWithoutPostsInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutPostsDataInput
  upsert: ProfileUpsertWithoutPostsInput
}

input ProfileUpdateOneRequiredWithoutResearcherInInput {
  create: ProfileCreateWithoutResearcherInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutResearcherInDataInput
  upsert: ProfileUpsertWithoutResearcherInInput
}

input ProfileUpdateOneRequiredWithoutTaskCreatorInInput {
  create: ProfileCreateWithoutTaskCreatorInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutTaskCreatorInDataInput
  upsert: ProfileUpsertWithoutTaskCreatorInInput
}

input ProfileUpdateOneRequiredWithoutTeacherInInput {
  create: ProfileCreateWithoutTeacherInInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutTeacherInDataInput
  upsert: ProfileUpsertWithoutTeacherInInput
}

input ProfileUpdateOneRequiredWithoutUpdatesInput {
  create: ProfileCreateWithoutUpdatesInput
  connect: ProfileWhereUniqueInput
  update: ProfileUpdateWithoutUpdatesDataInput
  upsert: ProfileUpsertWithoutUpdatesInput
}

input ProfileUpdateOneWithoutAuthorOfAssignmentInput {
  create: ProfileCreateWithoutAuthorOfAssignmentInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutAuthorOfAssignmentDataInput
  upsert: ProfileUpsertWithoutAuthorOfAssignmentInput
}

input ProfileUpdateOneWithoutAuthorOfHomeworkInput {
  create: ProfileCreateWithoutAuthorOfHomeworkInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutAuthorOfHomeworkDataInput
  upsert: ProfileUpsertWithoutAuthorOfHomeworkInput
}

input ProfileUpdateOneWithoutAuthorOfProposalInput {
  create: ProfileCreateWithoutAuthorOfProposalInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutAuthorOfProposalDataInput
  upsert: ProfileUpsertWithoutAuthorOfProposalInput
}

input ProfileUpdateOneWithoutAuthorOfScriptInput {
  create: ProfileCreateWithoutAuthorOfScriptInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutAuthorOfScriptDataInput
  upsert: ProfileUpsertWithoutAuthorOfScriptInput
}

input ProfileUpdateOneWithoutAuthorOfTalkInput {
  create: ProfileCreateWithoutAuthorOfTalkInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutAuthorOfTalkDataInput
  upsert: ProfileUpsertWithoutAuthorOfTalkInput
}

input ProfileUpdateOneWithoutAuthorOfWordInput {
  create: ProfileCreateWithoutAuthorOfWordInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutAuthorOfWordDataInput
  upsert: ProfileUpsertWithoutAuthorOfWordInput
}

input ProfileUpdateOneWithoutCreatorOfProposalInput {
  create: ProfileCreateWithoutCreatorOfProposalInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutCreatorOfProposalDataInput
  upsert: ProfileUpsertWithoutCreatorOfProposalInput
}

input ProfileUpdateOneWithoutCreatorOfScriptInput {
  create: ProfileCreateWithoutCreatorOfScriptInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutCreatorOfScriptDataInput
  upsert: ProfileUpsertWithoutCreatorOfScriptInput
}

input ProfileUpdateOneWithoutResultsInput {
  create: ProfileCreateWithoutResultsInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutResultsDataInput
  upsert: ProfileUpsertWithoutResultsInput
}

input ProfileUpdateOneWithoutReviewsInput {
  create: ProfileCreateWithoutReviewsInput
  connect: ProfileWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProfileUpdateWithoutReviewsDataInput
  upsert: ProfileUpsertWithoutReviewsInput
}

input ProfileUpdatepermissionsInput {
  set: [Permission!]
}

input ProfileUpdateWithoutAssignedToProposalCardDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAssignedToProposalSectionDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthEmailDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthInviteDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthorOfAssignmentDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthorOfHomeworkDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthorOfProposalDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthorOfScriptDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthorOfTalkDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthorOfWordDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthParticipantDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutAuthTokenDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutClassNetworksCreatedDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutCollaboratorInConsentDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutCollaboratorInStudyDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutCollaboratorInTaskDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutCollaboratorOnProposalDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutCollaboratorOnScriptDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutConsentCreatorInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutConsentGivenForDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutCreatorOfProposalDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutCreatorOfScriptDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutJournalsDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutMemberOfTalkDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutMentorInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutParticipantInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutPostsDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutResearcherInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutResultsDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutReviewsDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutStudentInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutTagsDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutTaskCreatorInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutTeacherInDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
  updates: UpdateUpdateManyWithoutUserInput
}

input ProfileUpdateWithoutUpdatesDataInput {
  username: String
  image: String
  largeImage: String
  info: Json
  generalInfo: Json
  tasksInfo: Json
  studiesInfo: Json
  consentsInfo: Json
  publicId: String
  publicReadableId: String
  isPublic: Boolean
  permissions: ProfileUpdatepermissionsInput
  authEmail: AuthEmailUpdateManyWithoutProfileInput
  authToken: AuthTokenUpdateManyWithoutProfileInput
  authInvite: AuthInviteUpdateManyWithoutProfileInput
  authParticipant: AuthParticipantUpdateManyWithoutProfileInput
  results: ResultUpdateManyWithoutUserInput
  teacherIn: ClassUpdateManyWithoutCreatorInput
  studentIn: ClassUpdateManyWithoutStudentsInput
  participantIn: StudyUpdateManyWithoutParticipantsInput
  researcherIn: StudyUpdateManyWithoutAuthorInput
  taskCreatorIn: TaskUpdateManyWithoutAuthorInput
  consentCreatorIn: ConsentUpdateManyWithoutAuthorInput
  collaboratorInStudy: StudyUpdateManyWithoutCollaboratorsInput
  collaboratorInTask: TaskUpdateManyWithoutCollaboratorsInput
  collaboratorInConsent: ConsentUpdateManyWithoutCollaboratorsInput
  consentGivenFor: ConsentUpdateManyWithoutParticipantsInput
  journals: JournalUpdateManyWithoutCreatorInput
  posts: PostUpdateManyWithoutAuthorInput
  creatorOfProposal: ProposalBoardUpdateManyWithoutCreatorInput
  authorOfProposal: ProposalBoardUpdateManyWithoutAuthorInput
  collaboratorOnProposal: ProposalBoardUpdateManyWithoutCollaboratorsInput
  assignedToProposalSection: ProposalSectionUpdateManyWithoutAssignedToInput
  assignedToProposalCard: ProposalCardUpdateManyWithoutAssignedToInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  classNetworksCreated: ClassNetworkUpdateManyWithoutCreatorInput
  authorOfWord: WordUpdateManyWithoutAuthorInput
  memberOfTalk: TalkUpdateManyWithoutMembersInput
  authorOfTalk: TalkUpdateManyWithoutAuthorInput
  authorOfAssignment: AssignmentUpdateManyWithoutAuthorInput
  authorOfHomework: HomeworkUpdateManyWithoutAuthorInput
  favoriteTasks: TaskUpdateManyInput
  mentorIn: ClassUpdateManyWithoutMentorsInput
  creatorOfScript: ScriptUpdateManyWithoutCreatorInput
  authorOfScript: ScriptUpdateManyWithoutAuthorInput
  collaboratorOnScript: ScriptUpdateManyWithoutCollaboratorsInput
  tags: TagUpdateManyWithoutProfilesInput
}

input ProfileUpdateWithWhereUniqueWithoutAssignedToProposalCardInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutAssignedToProposalCardDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutAssignedToProposalSectionInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutAssignedToProposalSectionDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorInConsentInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorInConsentDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorInStudyInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorInStudyDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorInTaskInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorInTaskDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorOnProposalInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorOnProposalDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutCollaboratorOnScriptInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutCollaboratorOnScriptDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutConsentGivenForInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutConsentGivenForDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutMemberOfTalkInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutMemberOfTalkDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutMentorInInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutMentorInDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutParticipantInInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutParticipantInDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutStudentInInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutStudentInDataInput!
}

input ProfileUpdateWithWhereUniqueWithoutTagsInput {
  where: ProfileWhereUniqueInput!
  data: ProfileUpdateWithoutTagsDataInput!
}

input ProfileUpsertNestedInput {
  update: ProfileUpdateDataInput!
  create: ProfileCreateInput!
}

input ProfileUpsertWithoutAuthEmailInput {
  update: ProfileUpdateWithoutAuthEmailDataInput!
  create: ProfileCreateWithoutAuthEmailInput!
}

input ProfileUpsertWithoutAuthInviteInput {
  update: ProfileUpdateWithoutAuthInviteDataInput!
  create: ProfileCreateWithoutAuthInviteInput!
}

input ProfileUpsertWithoutAuthorOfAssignmentInput {
  update: ProfileUpdateWithoutAuthorOfAssignmentDataInput!
  create: ProfileCreateWithoutAuthorOfAssignmentInput!
}

input ProfileUpsertWithoutAuthorOfHomeworkInput {
  update: ProfileUpdateWithoutAuthorOfHomeworkDataInput!
  create: ProfileCreateWithoutAuthorOfHomeworkInput!
}

input ProfileUpsertWithoutAuthorOfProposalInput {
  update: ProfileUpdateWithoutAuthorOfProposalDataInput!
  create: ProfileCreateWithoutAuthorOfProposalInput!
}

input ProfileUpsertWithoutAuthorOfScriptInput {
  update: ProfileUpdateWithoutAuthorOfScriptDataInput!
  create: ProfileCreateWithoutAuthorOfScriptInput!
}

input ProfileUpsertWithoutAuthorOfTalkInput {
  update: ProfileUpdateWithoutAuthorOfTalkDataInput!
  create: ProfileCreateWithoutAuthorOfTalkInput!
}

input ProfileUpsertWithoutAuthorOfWordInput {
  update: ProfileUpdateWithoutAuthorOfWordDataInput!
  create: ProfileCreateWithoutAuthorOfWordInput!
}

input ProfileUpsertWithoutAuthParticipantInput {
  update: ProfileUpdateWithoutAuthParticipantDataInput!
  create: ProfileCreateWithoutAuthParticipantInput!
}

input ProfileUpsertWithoutAuthTokenInput {
  update: ProfileUpdateWithoutAuthTokenDataInput!
  create: ProfileCreateWithoutAuthTokenInput!
}

input ProfileUpsertWithoutClassNetworksCreatedInput {
  update: ProfileUpdateWithoutClassNetworksCreatedDataInput!
  create: ProfileCreateWithoutClassNetworksCreatedInput!
}

input ProfileUpsertWithoutConsentCreatorInInput {
  update: ProfileUpdateWithoutConsentCreatorInDataInput!
  create: ProfileCreateWithoutConsentCreatorInInput!
}

input ProfileUpsertWithoutCreatorOfProposalInput {
  update: ProfileUpdateWithoutCreatorOfProposalDataInput!
  create: ProfileCreateWithoutCreatorOfProposalInput!
}

input ProfileUpsertWithoutCreatorOfScriptInput {
  update: ProfileUpdateWithoutCreatorOfScriptDataInput!
  create: ProfileCreateWithoutCreatorOfScriptInput!
}

input ProfileUpsertWithoutJournalsInput {
  update: ProfileUpdateWithoutJournalsDataInput!
  create: ProfileCreateWithoutJournalsInput!
}

input ProfileUpsertWithoutPostsInput {
  update: ProfileUpdateWithoutPostsDataInput!
  create: ProfileCreateWithoutPostsInput!
}

input ProfileUpsertWithoutResearcherInInput {
  update: ProfileUpdateWithoutResearcherInDataInput!
  create: ProfileCreateWithoutResearcherInInput!
}

input ProfileUpsertWithoutResultsInput {
  update: ProfileUpdateWithoutResultsDataInput!
  create: ProfileCreateWithoutResultsInput!
}

input ProfileUpsertWithoutReviewsInput {
  update: ProfileUpdateWithoutReviewsDataInput!
  create: ProfileCreateWithoutReviewsInput!
}

input ProfileUpsertWithoutTaskCreatorInInput {
  update: ProfileUpdateWithoutTaskCreatorInDataInput!
  create: ProfileCreateWithoutTaskCreatorInInput!
}

input ProfileUpsertWithoutTeacherInInput {
  update: ProfileUpdateWithoutTeacherInDataInput!
  create: ProfileCreateWithoutTeacherInInput!
}

input ProfileUpsertWithoutUpdatesInput {
  update: ProfileUpdateWithoutUpdatesDataInput!
  create: ProfileCreateWithoutUpdatesInput!
}

input ProfileUpsertWithWhereUniqueWithoutAssignedToProposalCardInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutAssignedToProposalCardDataInput!
  create: ProfileCreateWithoutAssignedToProposalCardInput!
}

input ProfileUpsertWithWhereUniqueWithoutAssignedToProposalSectionInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutAssignedToProposalSectionDataInput!
  create: ProfileCreateWithoutAssignedToProposalSectionInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorInConsentInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorInConsentDataInput!
  create: ProfileCreateWithoutCollaboratorInConsentInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorInStudyInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorInStudyDataInput!
  create: ProfileCreateWithoutCollaboratorInStudyInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorInTaskInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorInTaskDataInput!
  create: ProfileCreateWithoutCollaboratorInTaskInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorOnProposalInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorOnProposalDataInput!
  create: ProfileCreateWithoutCollaboratorOnProposalInput!
}

input ProfileUpsertWithWhereUniqueWithoutCollaboratorOnScriptInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutCollaboratorOnScriptDataInput!
  create: ProfileCreateWithoutCollaboratorOnScriptInput!
}

input ProfileUpsertWithWhereUniqueWithoutConsentGivenForInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutConsentGivenForDataInput!
  create: ProfileCreateWithoutConsentGivenForInput!
}

input ProfileUpsertWithWhereUniqueWithoutMemberOfTalkInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutMemberOfTalkDataInput!
  create: ProfileCreateWithoutMemberOfTalkInput!
}

input ProfileUpsertWithWhereUniqueWithoutMentorInInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutMentorInDataInput!
  create: ProfileCreateWithoutMentorInInput!
}

input ProfileUpsertWithWhereUniqueWithoutParticipantInInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutParticipantInDataInput!
  create: ProfileCreateWithoutParticipantInInput!
}

input ProfileUpsertWithWhereUniqueWithoutStudentInInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutStudentInDataInput!
  create: ProfileCreateWithoutStudentInInput!
}

input ProfileUpsertWithWhereUniqueWithoutTagsInput {
  where: ProfileWhereUniqueInput!
  update: ProfileUpdateWithoutTagsDataInput!
  create: ProfileCreateWithoutTagsInput!
}

input ProfileWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfileWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfileWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfileWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  publicId: String

  """All values that are not equal to given value."""
  publicId_not: String

  """All values that are contained in given list."""
  publicId_in: [String!]

  """All values that are not contained in given list."""
  publicId_not_in: [String!]

  """All values less than the given value."""
  publicId_lt: String

  """All values less than or equal the given value."""
  publicId_lte: String

  """All values greater than the given value."""
  publicId_gt: String

  """All values greater than or equal the given value."""
  publicId_gte: String

  """All values containing the given string."""
  publicId_contains: String

  """All values not containing the given string."""
  publicId_not_contains: String

  """All values starting with the given string."""
  publicId_starts_with: String

  """All values not starting with the given string."""
  publicId_not_starts_with: String

  """All values ending with the given string."""
  publicId_ends_with: String

  """All values not ending with the given string."""
  publicId_not_ends_with: String
  publicReadableId: String

  """All values that are not equal to given value."""
  publicReadableId_not: String

  """All values that are contained in given list."""
  publicReadableId_in: [String!]

  """All values that are not contained in given list."""
  publicReadableId_not_in: [String!]

  """All values less than the given value."""
  publicReadableId_lt: String

  """All values less than or equal the given value."""
  publicReadableId_lte: String

  """All values greater than the given value."""
  publicReadableId_gt: String

  """All values greater than or equal the given value."""
  publicReadableId_gte: String

  """All values containing the given string."""
  publicReadableId_contains: String

  """All values not containing the given string."""
  publicReadableId_not_contains: String

  """All values starting with the given string."""
  publicReadableId_starts_with: String

  """All values not starting with the given string."""
  publicReadableId_not_starts_with: String

  """All values ending with the given string."""
  publicReadableId_ends_with: String

  """All values not ending with the given string."""
  publicReadableId_not_ends_with: String
  isPublic: Boolean

  """All values that are not equal to given value."""
  isPublic_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  authEmail_every: AuthEmailWhereInput
  authEmail_some: AuthEmailWhereInput
  authEmail_none: AuthEmailWhereInput
  authToken_every: AuthTokenWhereInput
  authToken_some: AuthTokenWhereInput
  authToken_none: AuthTokenWhereInput
  authInvite_every: AuthInviteWhereInput
  authInvite_some: AuthInviteWhereInput
  authInvite_none: AuthInviteWhereInput
  authParticipant_every: AuthParticipantWhereInput
  authParticipant_some: AuthParticipantWhereInput
  authParticipant_none: AuthParticipantWhereInput
  results_every: ResultWhereInput
  results_some: ResultWhereInput
  results_none: ResultWhereInput
  teacherIn_every: ClassWhereInput
  teacherIn_some: ClassWhereInput
  teacherIn_none: ClassWhereInput
  studentIn_every: ClassWhereInput
  studentIn_some: ClassWhereInput
  studentIn_none: ClassWhereInput
  participantIn_every: StudyWhereInput
  participantIn_some: StudyWhereInput
  participantIn_none: StudyWhereInput
  researcherIn_every: StudyWhereInput
  researcherIn_some: StudyWhereInput
  researcherIn_none: StudyWhereInput
  taskCreatorIn_every: TaskWhereInput
  taskCreatorIn_some: TaskWhereInput
  taskCreatorIn_none: TaskWhereInput
  consentCreatorIn_every: ConsentWhereInput
  consentCreatorIn_some: ConsentWhereInput
  consentCreatorIn_none: ConsentWhereInput
  collaboratorInStudy_every: StudyWhereInput
  collaboratorInStudy_some: StudyWhereInput
  collaboratorInStudy_none: StudyWhereInput
  collaboratorInTask_every: TaskWhereInput
  collaboratorInTask_some: TaskWhereInput
  collaboratorInTask_none: TaskWhereInput
  collaboratorInConsent_every: ConsentWhereInput
  collaboratorInConsent_some: ConsentWhereInput
  collaboratorInConsent_none: ConsentWhereInput
  consentGivenFor_every: ConsentWhereInput
  consentGivenFor_some: ConsentWhereInput
  consentGivenFor_none: ConsentWhereInput
  journals_every: JournalWhereInput
  journals_some: JournalWhereInput
  journals_none: JournalWhereInput
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
  creatorOfProposal_every: ProposalBoardWhereInput
  creatorOfProposal_some: ProposalBoardWhereInput
  creatorOfProposal_none: ProposalBoardWhereInput
  authorOfProposal_every: ProposalBoardWhereInput
  authorOfProposal_some: ProposalBoardWhereInput
  authorOfProposal_none: ProposalBoardWhereInput
  collaboratorOnProposal_every: ProposalBoardWhereInput
  collaboratorOnProposal_some: ProposalBoardWhereInput
  collaboratorOnProposal_none: ProposalBoardWhereInput
  assignedToProposalSection_every: ProposalSectionWhereInput
  assignedToProposalSection_some: ProposalSectionWhereInput
  assignedToProposalSection_none: ProposalSectionWhereInput
  assignedToProposalCard_every: ProposalCardWhereInput
  assignedToProposalCard_some: ProposalCardWhereInput
  assignedToProposalCard_none: ProposalCardWhereInput
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  classNetworksCreated_every: ClassNetworkWhereInput
  classNetworksCreated_some: ClassNetworkWhereInput
  classNetworksCreated_none: ClassNetworkWhereInput
  authorOfWord_every: WordWhereInput
  authorOfWord_some: WordWhereInput
  authorOfWord_none: WordWhereInput
  memberOfTalk_every: TalkWhereInput
  memberOfTalk_some: TalkWhereInput
  memberOfTalk_none: TalkWhereInput
  authorOfTalk_every: TalkWhereInput
  authorOfTalk_some: TalkWhereInput
  authorOfTalk_none: TalkWhereInput
  authorOfAssignment_every: AssignmentWhereInput
  authorOfAssignment_some: AssignmentWhereInput
  authorOfAssignment_none: AssignmentWhereInput
  authorOfHomework_every: HomeworkWhereInput
  authorOfHomework_some: HomeworkWhereInput
  authorOfHomework_none: HomeworkWhereInput
  favoriteTasks_every: TaskWhereInput
  favoriteTasks_some: TaskWhereInput
  favoriteTasks_none: TaskWhereInput
  mentorIn_every: ClassWhereInput
  mentorIn_some: ClassWhereInput
  mentorIn_none: ClassWhereInput
  creatorOfScript_every: ScriptWhereInput
  creatorOfScript_some: ScriptWhereInput
  creatorOfScript_none: ScriptWhereInput
  authorOfScript_every: ScriptWhereInput
  authorOfScript_some: ScriptWhereInput
  authorOfScript_none: ScriptWhereInput
  collaboratorOnScript_every: ScriptWhereInput
  collaboratorOnScript_some: ScriptWhereInput
  collaboratorOnScript_none: ScriptWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  updates_every: UpdateWhereInput
  updates_some: UpdateWhereInput
  updates_none: UpdateWhereInput
}

input ProfileWhereUniqueInput {
  id: ID
  username: String
  publicId: String
}

type ProposalBoard implements Node {
  id: ID!
  title: String!
  slug: String!
  description: String
  creator: Profile
  author: Profile
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  study: Study
  isTemplate: Boolean
  sections(where: ProposalSectionWhereInput, orderBy: ProposalSectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalSection!]
  createdAt: DateTime!
  updatedAt: DateTime!
  isSubmitted: Boolean
  checklist: Json
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  settings: Json
}

"""A connection to a list of items."""
type ProposalBoardConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProposalBoardEdge]!
  aggregate: AggregateProposalBoard!
}

input ProposalBoardCreateInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileCreateOneWithoutCreatorOfProposalInput
  author: ProfileCreateOneWithoutAuthorOfProposalInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnProposalInput
  study: StudyCreateOneWithoutProposalInput
  sections: ProposalSectionCreateManyWithoutBoardInput
  reviews: ReviewCreateManyWithoutProposalInput
  tags: TagCreateManyWithoutProposalsInput
}

input ProposalBoardCreateManyWithoutAuthorInput {
  create: [ProposalBoardCreateWithoutAuthorInput!]
  connect: [ProposalBoardWhereUniqueInput!]
}

input ProposalBoardCreateManyWithoutCollaboratorsInput {
  create: [ProposalBoardCreateWithoutCollaboratorsInput!]
  connect: [ProposalBoardWhereUniqueInput!]
}

input ProposalBoardCreateManyWithoutCreatorInput {
  create: [ProposalBoardCreateWithoutCreatorInput!]
  connect: [ProposalBoardWhereUniqueInput!]
}

input ProposalBoardCreateManyWithoutStudyInput {
  create: [ProposalBoardCreateWithoutStudyInput!]
  connect: [ProposalBoardWhereUniqueInput!]
}

input ProposalBoardCreateManyWithoutTagsInput {
  create: [ProposalBoardCreateWithoutTagsInput!]
  connect: [ProposalBoardWhereUniqueInput!]
}

input ProposalBoardCreateOneWithoutReviewsInput {
  create: ProposalBoardCreateWithoutReviewsInput
  connect: ProposalBoardWhereUniqueInput
}

input ProposalBoardCreateOneWithoutSectionsInput {
  create: ProposalBoardCreateWithoutSectionsInput
  connect: ProposalBoardWhereUniqueInput
}

input ProposalBoardCreateWithoutAuthorInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileCreateOneWithoutCreatorOfProposalInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnProposalInput
  study: StudyCreateOneWithoutProposalInput
  sections: ProposalSectionCreateManyWithoutBoardInput
  reviews: ReviewCreateManyWithoutProposalInput
  tags: TagCreateManyWithoutProposalsInput
}

input ProposalBoardCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileCreateOneWithoutCreatorOfProposalInput
  author: ProfileCreateOneWithoutAuthorOfProposalInput
  study: StudyCreateOneWithoutProposalInput
  sections: ProposalSectionCreateManyWithoutBoardInput
  reviews: ReviewCreateManyWithoutProposalInput
  tags: TagCreateManyWithoutProposalsInput
}

input ProposalBoardCreateWithoutCreatorInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  author: ProfileCreateOneWithoutAuthorOfProposalInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnProposalInput
  study: StudyCreateOneWithoutProposalInput
  sections: ProposalSectionCreateManyWithoutBoardInput
  reviews: ReviewCreateManyWithoutProposalInput
  tags: TagCreateManyWithoutProposalsInput
}

input ProposalBoardCreateWithoutReviewsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileCreateOneWithoutCreatorOfProposalInput
  author: ProfileCreateOneWithoutAuthorOfProposalInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnProposalInput
  study: StudyCreateOneWithoutProposalInput
  sections: ProposalSectionCreateManyWithoutBoardInput
  tags: TagCreateManyWithoutProposalsInput
}

input ProposalBoardCreateWithoutSectionsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileCreateOneWithoutCreatorOfProposalInput
  author: ProfileCreateOneWithoutAuthorOfProposalInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnProposalInput
  study: StudyCreateOneWithoutProposalInput
  reviews: ReviewCreateManyWithoutProposalInput
  tags: TagCreateManyWithoutProposalsInput
}

input ProposalBoardCreateWithoutStudyInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileCreateOneWithoutCreatorOfProposalInput
  author: ProfileCreateOneWithoutAuthorOfProposalInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnProposalInput
  sections: ProposalSectionCreateManyWithoutBoardInput
  reviews: ReviewCreateManyWithoutProposalInput
  tags: TagCreateManyWithoutProposalsInput
}

input ProposalBoardCreateWithoutTagsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileCreateOneWithoutCreatorOfProposalInput
  author: ProfileCreateOneWithoutAuthorOfProposalInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnProposalInput
  study: StudyCreateOneWithoutProposalInput
  sections: ProposalSectionCreateManyWithoutBoardInput
  reviews: ReviewCreateManyWithoutProposalInput
}

"""An edge in a connection."""
type ProposalBoardEdge {
  """The item at the end of the edge."""
  node: ProposalBoard!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProposalBoardOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  isTemplate_ASC
  isTemplate_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  isSubmitted_ASC
  isSubmitted_DESC
  checklist_ASC
  checklist_DESC
  settings_ASC
  settings_DESC
}

type ProposalBoardPreviousValues {
  id: ID!
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  isSubmitted: Boolean
  checklist: Json
  settings: Json
}

input ProposalBoardScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalBoardScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalBoardScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalBoardScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  isTemplate: Boolean

  """All values that are not equal to given value."""
  isTemplate_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  isSubmitted: Boolean

  """All values that are not equal to given value."""
  isSubmitted_not: Boolean
}

type ProposalBoardSubscriptionPayload {
  mutation: MutationType!
  node: ProposalBoard
  updatedFields: [String!]
  previousValues: ProposalBoardPreviousValues
}

input ProposalBoardSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalBoardSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalBoardSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalBoardSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProposalBoardWhereInput
}

input ProposalBoardUpdateInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileUpdateOneWithoutCreatorOfProposalInput
  author: ProfileUpdateOneWithoutAuthorOfProposalInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnProposalInput
  study: StudyUpdateOneWithoutProposalInput
  sections: ProposalSectionUpdateManyWithoutBoardInput
  reviews: ReviewUpdateManyWithoutProposalInput
  tags: TagUpdateManyWithoutProposalsInput
}

input ProposalBoardUpdateManyDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
}

input ProposalBoardUpdateManyMutationInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
}

input ProposalBoardUpdateManyWithoutAuthorInput {
  create: [ProposalBoardCreateWithoutAuthorInput!]
  connect: [ProposalBoardWhereUniqueInput!]
  set: [ProposalBoardWhereUniqueInput!]
  disconnect: [ProposalBoardWhereUniqueInput!]
  delete: [ProposalBoardWhereUniqueInput!]
  update: [ProposalBoardUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ProposalBoardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalBoardScalarWhereInput!]
  upsert: [ProposalBoardUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ProposalBoardUpdateManyWithoutCollaboratorsInput {
  create: [ProposalBoardCreateWithoutCollaboratorsInput!]
  connect: [ProposalBoardWhereUniqueInput!]
  set: [ProposalBoardWhereUniqueInput!]
  disconnect: [ProposalBoardWhereUniqueInput!]
  delete: [ProposalBoardWhereUniqueInput!]
  update: [ProposalBoardUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [ProposalBoardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalBoardScalarWhereInput!]
  upsert: [ProposalBoardUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input ProposalBoardUpdateManyWithoutCreatorInput {
  create: [ProposalBoardCreateWithoutCreatorInput!]
  connect: [ProposalBoardWhereUniqueInput!]
  set: [ProposalBoardWhereUniqueInput!]
  disconnect: [ProposalBoardWhereUniqueInput!]
  delete: [ProposalBoardWhereUniqueInput!]
  update: [ProposalBoardUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [ProposalBoardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalBoardScalarWhereInput!]
  upsert: [ProposalBoardUpsertWithWhereUniqueWithoutCreatorInput!]
}

input ProposalBoardUpdateManyWithoutStudyInput {
  create: [ProposalBoardCreateWithoutStudyInput!]
  connect: [ProposalBoardWhereUniqueInput!]
  set: [ProposalBoardWhereUniqueInput!]
  disconnect: [ProposalBoardWhereUniqueInput!]
  delete: [ProposalBoardWhereUniqueInput!]
  update: [ProposalBoardUpdateWithWhereUniqueWithoutStudyInput!]
  updateMany: [ProposalBoardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalBoardScalarWhereInput!]
  upsert: [ProposalBoardUpsertWithWhereUniqueWithoutStudyInput!]
}

input ProposalBoardUpdateManyWithoutTagsInput {
  create: [ProposalBoardCreateWithoutTagsInput!]
  connect: [ProposalBoardWhereUniqueInput!]
  set: [ProposalBoardWhereUniqueInput!]
  disconnect: [ProposalBoardWhereUniqueInput!]
  delete: [ProposalBoardWhereUniqueInput!]
  update: [ProposalBoardUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ProposalBoardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalBoardScalarWhereInput!]
  upsert: [ProposalBoardUpsertWithWhereUniqueWithoutTagsInput!]
}

input ProposalBoardUpdateManyWithWhereNestedInput {
  where: ProposalBoardScalarWhereInput!
  data: ProposalBoardUpdateManyDataInput!
}

input ProposalBoardUpdateOneRequiredWithoutSectionsInput {
  create: ProposalBoardCreateWithoutSectionsInput
  connect: ProposalBoardWhereUniqueInput
  update: ProposalBoardUpdateWithoutSectionsDataInput
  upsert: ProposalBoardUpsertWithoutSectionsInput
}

input ProposalBoardUpdateOneWithoutReviewsInput {
  create: ProposalBoardCreateWithoutReviewsInput
  connect: ProposalBoardWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProposalBoardUpdateWithoutReviewsDataInput
  upsert: ProposalBoardUpsertWithoutReviewsInput
}

input ProposalBoardUpdateWithoutAuthorDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileUpdateOneWithoutCreatorOfProposalInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnProposalInput
  study: StudyUpdateOneWithoutProposalInput
  sections: ProposalSectionUpdateManyWithoutBoardInput
  reviews: ReviewUpdateManyWithoutProposalInput
  tags: TagUpdateManyWithoutProposalsInput
}

input ProposalBoardUpdateWithoutCollaboratorsDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileUpdateOneWithoutCreatorOfProposalInput
  author: ProfileUpdateOneWithoutAuthorOfProposalInput
  study: StudyUpdateOneWithoutProposalInput
  sections: ProposalSectionUpdateManyWithoutBoardInput
  reviews: ReviewUpdateManyWithoutProposalInput
  tags: TagUpdateManyWithoutProposalsInput
}

input ProposalBoardUpdateWithoutCreatorDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  author: ProfileUpdateOneWithoutAuthorOfProposalInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnProposalInput
  study: StudyUpdateOneWithoutProposalInput
  sections: ProposalSectionUpdateManyWithoutBoardInput
  reviews: ReviewUpdateManyWithoutProposalInput
  tags: TagUpdateManyWithoutProposalsInput
}

input ProposalBoardUpdateWithoutReviewsDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileUpdateOneWithoutCreatorOfProposalInput
  author: ProfileUpdateOneWithoutAuthorOfProposalInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnProposalInput
  study: StudyUpdateOneWithoutProposalInput
  sections: ProposalSectionUpdateManyWithoutBoardInput
  tags: TagUpdateManyWithoutProposalsInput
}

input ProposalBoardUpdateWithoutSectionsDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileUpdateOneWithoutCreatorOfProposalInput
  author: ProfileUpdateOneWithoutAuthorOfProposalInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnProposalInput
  study: StudyUpdateOneWithoutProposalInput
  reviews: ReviewUpdateManyWithoutProposalInput
  tags: TagUpdateManyWithoutProposalsInput
}

input ProposalBoardUpdateWithoutStudyDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileUpdateOneWithoutCreatorOfProposalInput
  author: ProfileUpdateOneWithoutAuthorOfProposalInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnProposalInput
  sections: ProposalSectionUpdateManyWithoutBoardInput
  reviews: ReviewUpdateManyWithoutProposalInput
  tags: TagUpdateManyWithoutProposalsInput
}

input ProposalBoardUpdateWithoutTagsDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isSubmitted: Boolean
  checklist: Json
  settings: Json
  creator: ProfileUpdateOneWithoutCreatorOfProposalInput
  author: ProfileUpdateOneWithoutAuthorOfProposalInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnProposalInput
  study: StudyUpdateOneWithoutProposalInput
  sections: ProposalSectionUpdateManyWithoutBoardInput
  reviews: ReviewUpdateManyWithoutProposalInput
}

input ProposalBoardUpdateWithWhereUniqueWithoutAuthorInput {
  where: ProposalBoardWhereUniqueInput!
  data: ProposalBoardUpdateWithoutAuthorDataInput!
}

input ProposalBoardUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: ProposalBoardWhereUniqueInput!
  data: ProposalBoardUpdateWithoutCollaboratorsDataInput!
}

input ProposalBoardUpdateWithWhereUniqueWithoutCreatorInput {
  where: ProposalBoardWhereUniqueInput!
  data: ProposalBoardUpdateWithoutCreatorDataInput!
}

input ProposalBoardUpdateWithWhereUniqueWithoutStudyInput {
  where: ProposalBoardWhereUniqueInput!
  data: ProposalBoardUpdateWithoutStudyDataInput!
}

input ProposalBoardUpdateWithWhereUniqueWithoutTagsInput {
  where: ProposalBoardWhereUniqueInput!
  data: ProposalBoardUpdateWithoutTagsDataInput!
}

input ProposalBoardUpsertWithoutReviewsInput {
  update: ProposalBoardUpdateWithoutReviewsDataInput!
  create: ProposalBoardCreateWithoutReviewsInput!
}

input ProposalBoardUpsertWithoutSectionsInput {
  update: ProposalBoardUpdateWithoutSectionsDataInput!
  create: ProposalBoardCreateWithoutSectionsInput!
}

input ProposalBoardUpsertWithWhereUniqueWithoutAuthorInput {
  where: ProposalBoardWhereUniqueInput!
  update: ProposalBoardUpdateWithoutAuthorDataInput!
  create: ProposalBoardCreateWithoutAuthorInput!
}

input ProposalBoardUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: ProposalBoardWhereUniqueInput!
  update: ProposalBoardUpdateWithoutCollaboratorsDataInput!
  create: ProposalBoardCreateWithoutCollaboratorsInput!
}

input ProposalBoardUpsertWithWhereUniqueWithoutCreatorInput {
  where: ProposalBoardWhereUniqueInput!
  update: ProposalBoardUpdateWithoutCreatorDataInput!
  create: ProposalBoardCreateWithoutCreatorInput!
}

input ProposalBoardUpsertWithWhereUniqueWithoutStudyInput {
  where: ProposalBoardWhereUniqueInput!
  update: ProposalBoardUpdateWithoutStudyDataInput!
  create: ProposalBoardCreateWithoutStudyInput!
}

input ProposalBoardUpsertWithWhereUniqueWithoutTagsInput {
  where: ProposalBoardWhereUniqueInput!
  update: ProposalBoardUpdateWithoutTagsDataInput!
  create: ProposalBoardCreateWithoutTagsInput!
}

input ProposalBoardWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalBoardWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalBoardWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalBoardWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  isTemplate: Boolean

  """All values that are not equal to given value."""
  isTemplate_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  isSubmitted: Boolean

  """All values that are not equal to given value."""
  isSubmitted_not: Boolean
  creator: ProfileWhereInput
  author: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  study: StudyWhereInput
  sections_every: ProposalSectionWhereInput
  sections_some: ProposalSectionWhereInput
  sections_none: ProposalSectionWhereInput
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input ProposalBoardWhereUniqueInput {
  id: ID
  slug: String
}

type ProposalCard implements Node {
  id: ID!
  title: String!
  description: String
  position: Float!
  content: String
  section: ProposalSection!
  assignedTo(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  comment: String
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  studyDescription(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
}

"""A connection to a list of items."""
type ProposalCardConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProposalCardEdge]!
  aggregate: AggregateProposalCard!
}

input ProposalCardCreateInput {
  id: ID
  title: String!
  description: String
  position: Float!
  content: String
  settings: Json
  comment: String
  section: ProposalSectionCreateOneWithoutCardsInput!
  assignedTo: ProfileCreateManyWithoutAssignedToProposalCardInput
  tags: TagCreateManyWithoutProposalCardsInput
  studyDescription: StudyCreateManyWithoutDescriptionInProposalCardInput
}

input ProposalCardCreateManyWithoutAssignedToInput {
  create: [ProposalCardCreateWithoutAssignedToInput!]
  connect: [ProposalCardWhereUniqueInput!]
}

input ProposalCardCreateManyWithoutSectionInput {
  create: [ProposalCardCreateWithoutSectionInput!]
  connect: [ProposalCardWhereUniqueInput!]
}

input ProposalCardCreateManyWithoutTagsInput {
  create: [ProposalCardCreateWithoutTagsInput!]
  connect: [ProposalCardWhereUniqueInput!]
}

input ProposalCardCreateOneWithoutStudyDescriptionInput {
  create: ProposalCardCreateWithoutStudyDescriptionInput
  connect: ProposalCardWhereUniqueInput
}

input ProposalCardCreateWithoutAssignedToInput {
  id: ID
  title: String!
  description: String
  position: Float!
  content: String
  settings: Json
  comment: String
  section: ProposalSectionCreateOneWithoutCardsInput!
  tags: TagCreateManyWithoutProposalCardsInput
  studyDescription: StudyCreateManyWithoutDescriptionInProposalCardInput
}

input ProposalCardCreateWithoutSectionInput {
  id: ID
  title: String!
  description: String
  position: Float!
  content: String
  settings: Json
  comment: String
  assignedTo: ProfileCreateManyWithoutAssignedToProposalCardInput
  tags: TagCreateManyWithoutProposalCardsInput
  studyDescription: StudyCreateManyWithoutDescriptionInProposalCardInput
}

input ProposalCardCreateWithoutStudyDescriptionInput {
  id: ID
  title: String!
  description: String
  position: Float!
  content: String
  settings: Json
  comment: String
  section: ProposalSectionCreateOneWithoutCardsInput!
  assignedTo: ProfileCreateManyWithoutAssignedToProposalCardInput
  tags: TagCreateManyWithoutProposalCardsInput
}

input ProposalCardCreateWithoutTagsInput {
  id: ID
  title: String!
  description: String
  position: Float!
  content: String
  settings: Json
  comment: String
  section: ProposalSectionCreateOneWithoutCardsInput!
  assignedTo: ProfileCreateManyWithoutAssignedToProposalCardInput
  studyDescription: StudyCreateManyWithoutDescriptionInProposalCardInput
}

"""An edge in a connection."""
type ProposalCardEdge {
  """The item at the end of the edge."""
  node: ProposalCard!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProposalCardOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  position_ASC
  position_DESC
  content_ASC
  content_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  comment_ASC
  comment_DESC
}

type ProposalCardPreviousValues {
  id: ID!
  title: String!
  description: String
  position: Float!
  content: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  comment: String
}

input ProposalCardScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalCardScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalCardScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalCardScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  position: Float

  """All values that are not equal to given value."""
  position_not: Float

  """All values that are contained in given list."""
  position_in: [Float!]

  """All values that are not contained in given list."""
  position_not_in: [Float!]

  """All values less than the given value."""
  position_lt: Float

  """All values less than or equal the given value."""
  position_lte: Float

  """All values greater than the given value."""
  position_gt: Float

  """All values greater than or equal the given value."""
  position_gte: Float
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  comment: String

  """All values that are not equal to given value."""
  comment_not: String

  """All values that are contained in given list."""
  comment_in: [String!]

  """All values that are not contained in given list."""
  comment_not_in: [String!]

  """All values less than the given value."""
  comment_lt: String

  """All values less than or equal the given value."""
  comment_lte: String

  """All values greater than the given value."""
  comment_gt: String

  """All values greater than or equal the given value."""
  comment_gte: String

  """All values containing the given string."""
  comment_contains: String

  """All values not containing the given string."""
  comment_not_contains: String

  """All values starting with the given string."""
  comment_starts_with: String

  """All values not starting with the given string."""
  comment_not_starts_with: String

  """All values ending with the given string."""
  comment_ends_with: String

  """All values not ending with the given string."""
  comment_not_ends_with: String
}

type ProposalCardSubscriptionPayload {
  mutation: MutationType!
  node: ProposalCard
  updatedFields: [String!]
  previousValues: ProposalCardPreviousValues
}

input ProposalCardSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalCardSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalCardSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalCardSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProposalCardWhereInput
}

input ProposalCardUpdateInput {
  title: String
  description: String
  position: Float
  content: String
  settings: Json
  comment: String
  section: ProposalSectionUpdateOneRequiredWithoutCardsInput
  assignedTo: ProfileUpdateManyWithoutAssignedToProposalCardInput
  tags: TagUpdateManyWithoutProposalCardsInput
  studyDescription: StudyUpdateManyWithoutDescriptionInProposalCardInput
}

input ProposalCardUpdateManyDataInput {
  title: String
  description: String
  position: Float
  content: String
  settings: Json
  comment: String
}

input ProposalCardUpdateManyMutationInput {
  title: String
  description: String
  position: Float
  content: String
  settings: Json
  comment: String
}

input ProposalCardUpdateManyWithoutAssignedToInput {
  create: [ProposalCardCreateWithoutAssignedToInput!]
  connect: [ProposalCardWhereUniqueInput!]
  set: [ProposalCardWhereUniqueInput!]
  disconnect: [ProposalCardWhereUniqueInput!]
  delete: [ProposalCardWhereUniqueInput!]
  update: [ProposalCardUpdateWithWhereUniqueWithoutAssignedToInput!]
  updateMany: [ProposalCardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalCardScalarWhereInput!]
  upsert: [ProposalCardUpsertWithWhereUniqueWithoutAssignedToInput!]
}

input ProposalCardUpdateManyWithoutSectionInput {
  create: [ProposalCardCreateWithoutSectionInput!]
  connect: [ProposalCardWhereUniqueInput!]
  set: [ProposalCardWhereUniqueInput!]
  disconnect: [ProposalCardWhereUniqueInput!]
  delete: [ProposalCardWhereUniqueInput!]
  update: [ProposalCardUpdateWithWhereUniqueWithoutSectionInput!]
  updateMany: [ProposalCardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalCardScalarWhereInput!]
  upsert: [ProposalCardUpsertWithWhereUniqueWithoutSectionInput!]
}

input ProposalCardUpdateManyWithoutTagsInput {
  create: [ProposalCardCreateWithoutTagsInput!]
  connect: [ProposalCardWhereUniqueInput!]
  set: [ProposalCardWhereUniqueInput!]
  disconnect: [ProposalCardWhereUniqueInput!]
  delete: [ProposalCardWhereUniqueInput!]
  update: [ProposalCardUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ProposalCardUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalCardScalarWhereInput!]
  upsert: [ProposalCardUpsertWithWhereUniqueWithoutTagsInput!]
}

input ProposalCardUpdateManyWithWhereNestedInput {
  where: ProposalCardScalarWhereInput!
  data: ProposalCardUpdateManyDataInput!
}

input ProposalCardUpdateOneWithoutStudyDescriptionInput {
  create: ProposalCardCreateWithoutStudyDescriptionInput
  connect: ProposalCardWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProposalCardUpdateWithoutStudyDescriptionDataInput
  upsert: ProposalCardUpsertWithoutStudyDescriptionInput
}

input ProposalCardUpdateWithoutAssignedToDataInput {
  title: String
  description: String
  position: Float
  content: String
  settings: Json
  comment: String
  section: ProposalSectionUpdateOneRequiredWithoutCardsInput
  tags: TagUpdateManyWithoutProposalCardsInput
  studyDescription: StudyUpdateManyWithoutDescriptionInProposalCardInput
}

input ProposalCardUpdateWithoutSectionDataInput {
  title: String
  description: String
  position: Float
  content: String
  settings: Json
  comment: String
  assignedTo: ProfileUpdateManyWithoutAssignedToProposalCardInput
  tags: TagUpdateManyWithoutProposalCardsInput
  studyDescription: StudyUpdateManyWithoutDescriptionInProposalCardInput
}

input ProposalCardUpdateWithoutStudyDescriptionDataInput {
  title: String
  description: String
  position: Float
  content: String
  settings: Json
  comment: String
  section: ProposalSectionUpdateOneRequiredWithoutCardsInput
  assignedTo: ProfileUpdateManyWithoutAssignedToProposalCardInput
  tags: TagUpdateManyWithoutProposalCardsInput
}

input ProposalCardUpdateWithoutTagsDataInput {
  title: String
  description: String
  position: Float
  content: String
  settings: Json
  comment: String
  section: ProposalSectionUpdateOneRequiredWithoutCardsInput
  assignedTo: ProfileUpdateManyWithoutAssignedToProposalCardInput
  studyDescription: StudyUpdateManyWithoutDescriptionInProposalCardInput
}

input ProposalCardUpdateWithWhereUniqueWithoutAssignedToInput {
  where: ProposalCardWhereUniqueInput!
  data: ProposalCardUpdateWithoutAssignedToDataInput!
}

input ProposalCardUpdateWithWhereUniqueWithoutSectionInput {
  where: ProposalCardWhereUniqueInput!
  data: ProposalCardUpdateWithoutSectionDataInput!
}

input ProposalCardUpdateWithWhereUniqueWithoutTagsInput {
  where: ProposalCardWhereUniqueInput!
  data: ProposalCardUpdateWithoutTagsDataInput!
}

input ProposalCardUpsertWithoutStudyDescriptionInput {
  update: ProposalCardUpdateWithoutStudyDescriptionDataInput!
  create: ProposalCardCreateWithoutStudyDescriptionInput!
}

input ProposalCardUpsertWithWhereUniqueWithoutAssignedToInput {
  where: ProposalCardWhereUniqueInput!
  update: ProposalCardUpdateWithoutAssignedToDataInput!
  create: ProposalCardCreateWithoutAssignedToInput!
}

input ProposalCardUpsertWithWhereUniqueWithoutSectionInput {
  where: ProposalCardWhereUniqueInput!
  update: ProposalCardUpdateWithoutSectionDataInput!
  create: ProposalCardCreateWithoutSectionInput!
}

input ProposalCardUpsertWithWhereUniqueWithoutTagsInput {
  where: ProposalCardWhereUniqueInput!
  update: ProposalCardUpdateWithoutTagsDataInput!
  create: ProposalCardCreateWithoutTagsInput!
}

input ProposalCardWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalCardWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalCardWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalCardWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  position: Float

  """All values that are not equal to given value."""
  position_not: Float

  """All values that are contained in given list."""
  position_in: [Float!]

  """All values that are not contained in given list."""
  position_not_in: [Float!]

  """All values less than the given value."""
  position_lt: Float

  """All values less than or equal the given value."""
  position_lte: Float

  """All values greater than the given value."""
  position_gt: Float

  """All values greater than or equal the given value."""
  position_gte: Float
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  comment: String

  """All values that are not equal to given value."""
  comment_not: String

  """All values that are contained in given list."""
  comment_in: [String!]

  """All values that are not contained in given list."""
  comment_not_in: [String!]

  """All values less than the given value."""
  comment_lt: String

  """All values less than or equal the given value."""
  comment_lte: String

  """All values greater than the given value."""
  comment_gt: String

  """All values greater than or equal the given value."""
  comment_gte: String

  """All values containing the given string."""
  comment_contains: String

  """All values not containing the given string."""
  comment_not_contains: String

  """All values starting with the given string."""
  comment_starts_with: String

  """All values not starting with the given string."""
  comment_not_starts_with: String

  """All values ending with the given string."""
  comment_ends_with: String

  """All values not ending with the given string."""
  comment_not_ends_with: String
  section: ProposalSectionWhereInput
  assignedTo_every: ProfileWhereInput
  assignedTo_some: ProfileWhereInput
  assignedTo_none: ProfileWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  studyDescription_every: StudyWhereInput
  studyDescription_some: StudyWhereInput
  studyDescription_none: StudyWhereInput
}

input ProposalCardWhereUniqueInput {
  id: ID
}

type ProposalSection implements Node {
  id: ID!
  title: String!
  description: String
  position: Float!
  board: ProposalBoard!
  assignedTo(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  cards(where: ProposalCardWhereInput, orderBy: ProposalCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalCard!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type ProposalSectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProposalSectionEdge]!
  aggregate: AggregateProposalSection!
}

input ProposalSectionCreateInput {
  id: ID
  title: String!
  description: String
  position: Float!
  board: ProposalBoardCreateOneWithoutSectionsInput!
  assignedTo: ProfileCreateManyWithoutAssignedToProposalSectionInput
  cards: ProposalCardCreateManyWithoutSectionInput
}

input ProposalSectionCreateManyWithoutAssignedToInput {
  create: [ProposalSectionCreateWithoutAssignedToInput!]
  connect: [ProposalSectionWhereUniqueInput!]
}

input ProposalSectionCreateManyWithoutBoardInput {
  create: [ProposalSectionCreateWithoutBoardInput!]
  connect: [ProposalSectionWhereUniqueInput!]
}

input ProposalSectionCreateOneWithoutCardsInput {
  create: ProposalSectionCreateWithoutCardsInput
  connect: ProposalSectionWhereUniqueInput
}

input ProposalSectionCreateWithoutAssignedToInput {
  id: ID
  title: String!
  description: String
  position: Float!
  board: ProposalBoardCreateOneWithoutSectionsInput!
  cards: ProposalCardCreateManyWithoutSectionInput
}

input ProposalSectionCreateWithoutBoardInput {
  id: ID
  title: String!
  description: String
  position: Float!
  assignedTo: ProfileCreateManyWithoutAssignedToProposalSectionInput
  cards: ProposalCardCreateManyWithoutSectionInput
}

input ProposalSectionCreateWithoutCardsInput {
  id: ID
  title: String!
  description: String
  position: Float!
  board: ProposalBoardCreateOneWithoutSectionsInput!
  assignedTo: ProfileCreateManyWithoutAssignedToProposalSectionInput
}

"""An edge in a connection."""
type ProposalSectionEdge {
  """The item at the end of the edge."""
  node: ProposalSection!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProposalSectionOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  position_ASC
  position_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProposalSectionPreviousValues {
  id: ID!
  title: String!
  description: String
  position: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProposalSectionScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalSectionScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalSectionScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalSectionScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  position: Float

  """All values that are not equal to given value."""
  position_not: Float

  """All values that are contained in given list."""
  position_in: [Float!]

  """All values that are not contained in given list."""
  position_not_in: [Float!]

  """All values less than the given value."""
  position_lt: Float

  """All values less than or equal the given value."""
  position_lte: Float

  """All values greater than the given value."""
  position_gt: Float

  """All values greater than or equal the given value."""
  position_gte: Float
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ProposalSectionSubscriptionPayload {
  mutation: MutationType!
  node: ProposalSection
  updatedFields: [String!]
  previousValues: ProposalSectionPreviousValues
}

input ProposalSectionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalSectionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalSectionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalSectionSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProposalSectionWhereInput
}

input ProposalSectionUpdateInput {
  title: String
  description: String
  position: Float
  board: ProposalBoardUpdateOneRequiredWithoutSectionsInput
  assignedTo: ProfileUpdateManyWithoutAssignedToProposalSectionInput
  cards: ProposalCardUpdateManyWithoutSectionInput
}

input ProposalSectionUpdateManyDataInput {
  title: String
  description: String
  position: Float
}

input ProposalSectionUpdateManyMutationInput {
  title: String
  description: String
  position: Float
}

input ProposalSectionUpdateManyWithoutAssignedToInput {
  create: [ProposalSectionCreateWithoutAssignedToInput!]
  connect: [ProposalSectionWhereUniqueInput!]
  set: [ProposalSectionWhereUniqueInput!]
  disconnect: [ProposalSectionWhereUniqueInput!]
  delete: [ProposalSectionWhereUniqueInput!]
  update: [ProposalSectionUpdateWithWhereUniqueWithoutAssignedToInput!]
  updateMany: [ProposalSectionUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalSectionScalarWhereInput!]
  upsert: [ProposalSectionUpsertWithWhereUniqueWithoutAssignedToInput!]
}

input ProposalSectionUpdateManyWithoutBoardInput {
  create: [ProposalSectionCreateWithoutBoardInput!]
  connect: [ProposalSectionWhereUniqueInput!]
  set: [ProposalSectionWhereUniqueInput!]
  disconnect: [ProposalSectionWhereUniqueInput!]
  delete: [ProposalSectionWhereUniqueInput!]
  update: [ProposalSectionUpdateWithWhereUniqueWithoutBoardInput!]
  updateMany: [ProposalSectionUpdateManyWithWhereNestedInput!]
  deleteMany: [ProposalSectionScalarWhereInput!]
  upsert: [ProposalSectionUpsertWithWhereUniqueWithoutBoardInput!]
}

input ProposalSectionUpdateManyWithWhereNestedInput {
  where: ProposalSectionScalarWhereInput!
  data: ProposalSectionUpdateManyDataInput!
}

input ProposalSectionUpdateOneRequiredWithoutCardsInput {
  create: ProposalSectionCreateWithoutCardsInput
  connect: ProposalSectionWhereUniqueInput
  update: ProposalSectionUpdateWithoutCardsDataInput
  upsert: ProposalSectionUpsertWithoutCardsInput
}

input ProposalSectionUpdateWithoutAssignedToDataInput {
  title: String
  description: String
  position: Float
  board: ProposalBoardUpdateOneRequiredWithoutSectionsInput
  cards: ProposalCardUpdateManyWithoutSectionInput
}

input ProposalSectionUpdateWithoutBoardDataInput {
  title: String
  description: String
  position: Float
  assignedTo: ProfileUpdateManyWithoutAssignedToProposalSectionInput
  cards: ProposalCardUpdateManyWithoutSectionInput
}

input ProposalSectionUpdateWithoutCardsDataInput {
  title: String
  description: String
  position: Float
  board: ProposalBoardUpdateOneRequiredWithoutSectionsInput
  assignedTo: ProfileUpdateManyWithoutAssignedToProposalSectionInput
}

input ProposalSectionUpdateWithWhereUniqueWithoutAssignedToInput {
  where: ProposalSectionWhereUniqueInput!
  data: ProposalSectionUpdateWithoutAssignedToDataInput!
}

input ProposalSectionUpdateWithWhereUniqueWithoutBoardInput {
  where: ProposalSectionWhereUniqueInput!
  data: ProposalSectionUpdateWithoutBoardDataInput!
}

input ProposalSectionUpsertWithoutCardsInput {
  update: ProposalSectionUpdateWithoutCardsDataInput!
  create: ProposalSectionCreateWithoutCardsInput!
}

input ProposalSectionUpsertWithWhereUniqueWithoutAssignedToInput {
  where: ProposalSectionWhereUniqueInput!
  update: ProposalSectionUpdateWithoutAssignedToDataInput!
  create: ProposalSectionCreateWithoutAssignedToInput!
}

input ProposalSectionUpsertWithWhereUniqueWithoutBoardInput {
  where: ProposalSectionWhereUniqueInput!
  update: ProposalSectionUpdateWithoutBoardDataInput!
  create: ProposalSectionCreateWithoutBoardInput!
}

input ProposalSectionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProposalSectionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProposalSectionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProposalSectionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  position: Float

  """All values that are not equal to given value."""
  position_not: Float

  """All values that are contained in given list."""
  position_in: [Float!]

  """All values that are not contained in given list."""
  position_not_in: [Float!]

  """All values less than the given value."""
  position_lt: Float

  """All values less than or equal the given value."""
  position_lte: Float

  """All values greater than the given value."""
  position_gt: Float

  """All values greater than or equal the given value."""
  position_gte: Float
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  board: ProposalBoardWhereInput
  assignedTo_every: ProfileWhereInput
  assignedTo_some: ProfileWhereInput
  assignedTo_none: ProfileWhereInput
  cards_every: ProposalCardWhereInput
  cards_some: ProposalCardWhereInput
  cards_none: ProposalCardWhereInput
}

input ProposalSectionWhereUniqueInput {
  id: ID
}

type Query {
  authEmails(where: AuthEmailWhereInput, orderBy: AuthEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthEmail]!
  authParticipants(where: AuthParticipantWhereInput, orderBy: AuthParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthParticipant]!
  authTokens(where: AuthTokenWhereInput, orderBy: AuthTokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthToken]!
  authInvites(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AuthInvite]!
  schools(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [School]!
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class]!
  classNetworks(where: ClassNetworkWhereInput, orderBy: ClassNetworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassNetwork]!
  consents(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent]!
  journals(where: JournalWhereInput, orderBy: JournalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Journal]!
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  proposalBoards(where: ProposalBoardWhereInput, orderBy: ProposalBoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalBoard]!
  proposalSections(where: ProposalSectionWhereInput, orderBy: ProposalSectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalSection]!
  proposalCards(where: ProposalCardWhereInput, orderBy: ProposalCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalCard]!
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review]!
  words(where: WordWhereInput, orderBy: WordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Word]!
  talks(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk]!
  assignments(where: AssignmentWhereInput, orderBy: AssignmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Assignment]!
  homeworks(where: HomeworkWhereInput, orderBy: HomeworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Homework]!
  scripts(where: ScriptWhereInput, orderBy: ScriptOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Script]!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  updates(where: UpdateWhereInput, orderBy: UpdateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Update]!
  summaryResults(where: SummaryResultWhereInput, orderBy: SummaryResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SummaryResult]!
  templates(where: TemplateWhereInput, orderBy: TemplateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Template]!
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task]!
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study]!
  guests(where: GuestWhereInput, orderBy: GuestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Guest]!
  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result]!
  profiles(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile]!
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!
  datas(where: DataWhereInput, orderBy: DataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Data]!
  authEmail(where: AuthEmailWhereUniqueInput!): AuthEmail
  authParticipant(where: AuthParticipantWhereUniqueInput!): AuthParticipant
  authToken(where: AuthTokenWhereUniqueInput!): AuthToken
  authInvite(where: AuthInviteWhereUniqueInput!): AuthInvite
  school(where: SchoolWhereUniqueInput!): School
  class(where: ClassWhereUniqueInput!): Class
  classNetwork(where: ClassNetworkWhereUniqueInput!): ClassNetwork
  consent(where: ConsentWhereUniqueInput!): Consent
  journal(where: JournalWhereUniqueInput!): Journal
  post(where: PostWhereUniqueInput!): Post
  proposalBoard(where: ProposalBoardWhereUniqueInput!): ProposalBoard
  proposalSection(where: ProposalSectionWhereUniqueInput!): ProposalSection
  proposalCard(where: ProposalCardWhereUniqueInput!): ProposalCard
  review(where: ReviewWhereUniqueInput!): Review
  word(where: WordWhereUniqueInput!): Word
  talk(where: TalkWhereUniqueInput!): Talk
  assignment(where: AssignmentWhereUniqueInput!): Assignment
  homework(where: HomeworkWhereUniqueInput!): Homework
  script(where: ScriptWhereUniqueInput!): Script
  tag(where: TagWhereUniqueInput!): Tag
  update(where: UpdateWhereUniqueInput!): Update
  summaryResult(where: SummaryResultWhereUniqueInput!): SummaryResult
  template(where: TemplateWhereUniqueInput!): Template
  task(where: TaskWhereUniqueInput!): Task
  study(where: StudyWhereUniqueInput!): Study
  guest(where: GuestWhereUniqueInput!): Guest
  result(where: ResultWhereUniqueInput!): Result
  profile(where: ProfileWhereUniqueInput!): Profile
  message(where: MessageWhereUniqueInput!): Message
  data(where: DataWhereUniqueInput!): Data
  authEmailsConnection(where: AuthEmailWhereInput, orderBy: AuthEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthEmailConnection!
  authParticipantsConnection(where: AuthParticipantWhereInput, orderBy: AuthParticipantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthParticipantConnection!
  authTokensConnection(where: AuthTokenWhereInput, orderBy: AuthTokenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthTokenConnection!
  authInvitesConnection(where: AuthInviteWhereInput, orderBy: AuthInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuthInviteConnection!
  schoolsConnection(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SchoolConnection!
  classesConnection(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClassConnection!
  classNetworksConnection(where: ClassNetworkWhereInput, orderBy: ClassNetworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClassNetworkConnection!
  consentsConnection(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConsentConnection!
  journalsConnection(where: JournalWhereInput, orderBy: JournalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): JournalConnection!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  proposalBoardsConnection(where: ProposalBoardWhereInput, orderBy: ProposalBoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProposalBoardConnection!
  proposalSectionsConnection(where: ProposalSectionWhereInput, orderBy: ProposalSectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProposalSectionConnection!
  proposalCardsConnection(where: ProposalCardWhereInput, orderBy: ProposalCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProposalCardConnection!
  reviewsConnection(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReviewConnection!
  wordsConnection(where: WordWhereInput, orderBy: WordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WordConnection!
  talksConnection(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TalkConnection!
  assignmentsConnection(where: AssignmentWhereInput, orderBy: AssignmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AssignmentConnection!
  homeworksConnection(where: HomeworkWhereInput, orderBy: HomeworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HomeworkConnection!
  scriptsConnection(where: ScriptWhereInput, orderBy: ScriptOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ScriptConnection!
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  updatesConnection(where: UpdateWhereInput, orderBy: UpdateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UpdateConnection!
  summaryResultsConnection(where: SummaryResultWhereInput, orderBy: SummaryResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SummaryResultConnection!
  templatesConnection(where: TemplateWhereInput, orderBy: TemplateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TemplateConnection!
  tasksConnection(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TaskConnection!
  studiesConnection(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StudyConnection!
  guestsConnection(where: GuestWhereInput, orderBy: GuestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GuestConnection!
  resultsConnection(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ResultConnection!
  profilesConnection(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProfileConnection!
  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!
  datasConnection(where: DataWhereInput, orderBy: DataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DataConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Result implements Node {
  id: ID!
  template: Template
  task: Task!
  user: Profile
  guest: Guest
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  createdAt: DateTime!
  updatedAt: DateTime!
  payload: String
  study: Study
  info: Json
  incrementalData(where: DataWhereInput, orderBy: DataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Data!]
  fullData: Data
  resultType: ResultType
  testVersion: String
}

"""A connection to a list of items."""
type ResultConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ResultEdge]!
  aggregate: AggregateResult!
}

input ResultCreateInput {
  id: ID
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
  template: TemplateCreateOneInput
  task: TaskCreateOneInput!
  user: ProfileCreateOneWithoutResultsInput
  guest: GuestCreateOneWithoutResultsInput
  study: StudyCreateOneInput
  incrementalData: DataCreateManyInput
  fullData: DataCreateOneInput
}

input ResultCreateManyWithoutGuestInput {
  create: [ResultCreateWithoutGuestInput!]
  connect: [ResultWhereUniqueInput!]
}

input ResultCreateManyWithoutUserInput {
  create: [ResultCreateWithoutUserInput!]
  connect: [ResultWhereUniqueInput!]
}

input ResultCreateOneInput {
  create: ResultCreateInput
  connect: ResultWhereUniqueInput
}

input ResultCreateWithoutGuestInput {
  id: ID
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
  template: TemplateCreateOneInput
  task: TaskCreateOneInput!
  user: ProfileCreateOneWithoutResultsInput
  study: StudyCreateOneInput
  incrementalData: DataCreateManyInput
  fullData: DataCreateOneInput
}

input ResultCreateWithoutUserInput {
  id: ID
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
  template: TemplateCreateOneInput
  task: TaskCreateOneInput!
  guest: GuestCreateOneWithoutResultsInput
  study: StudyCreateOneInput
  incrementalData: DataCreateManyInput
  fullData: DataCreateOneInput
}

"""An edge in a connection."""
type ResultEdge {
  """The item at the end of the edge."""
  node: Result!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ResultOrderByInput {
  id_ASC
  id_DESC
  quantity_ASC
  quantity_DESC
  data_ASC
  data_DESC
  dataPolicy_ASC
  dataPolicy_DESC
  token_ASC
  token_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  payload_ASC
  payload_DESC
  info_ASC
  info_DESC
  resultType_ASC
  resultType_DESC
  testVersion_ASC
  testVersion_DESC
}

type ResultPreviousValues {
  id: ID!
  quantity: Int!
  data: Json
  dataPolicy: String
  token: String
  createdAt: DateTime!
  updatedAt: DateTime!
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
}

input ResultScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ResultScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResultScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResultScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  quantity: Int

  """All values that are not equal to given value."""
  quantity_not: Int

  """All values that are contained in given list."""
  quantity_in: [Int!]

  """All values that are not contained in given list."""
  quantity_not_in: [Int!]

  """All values less than the given value."""
  quantity_lt: Int

  """All values less than or equal the given value."""
  quantity_lte: Int

  """All values greater than the given value."""
  quantity_gt: Int

  """All values greater than or equal the given value."""
  quantity_gte: Int
  dataPolicy: String

  """All values that are not equal to given value."""
  dataPolicy_not: String

  """All values that are contained in given list."""
  dataPolicy_in: [String!]

  """All values that are not contained in given list."""
  dataPolicy_not_in: [String!]

  """All values less than the given value."""
  dataPolicy_lt: String

  """All values less than or equal the given value."""
  dataPolicy_lte: String

  """All values greater than the given value."""
  dataPolicy_gt: String

  """All values greater than or equal the given value."""
  dataPolicy_gte: String

  """All values containing the given string."""
  dataPolicy_contains: String

  """All values not containing the given string."""
  dataPolicy_not_contains: String

  """All values starting with the given string."""
  dataPolicy_starts_with: String

  """All values not starting with the given string."""
  dataPolicy_not_starts_with: String

  """All values ending with the given string."""
  dataPolicy_ends_with: String

  """All values not ending with the given string."""
  dataPolicy_not_ends_with: String
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  payload: String

  """All values that are not equal to given value."""
  payload_not: String

  """All values that are contained in given list."""
  payload_in: [String!]

  """All values that are not contained in given list."""
  payload_not_in: [String!]

  """All values less than the given value."""
  payload_lt: String

  """All values less than or equal the given value."""
  payload_lte: String

  """All values greater than the given value."""
  payload_gt: String

  """All values greater than or equal the given value."""
  payload_gte: String

  """All values containing the given string."""
  payload_contains: String

  """All values not containing the given string."""
  payload_not_contains: String

  """All values starting with the given string."""
  payload_starts_with: String

  """All values not starting with the given string."""
  payload_not_starts_with: String

  """All values ending with the given string."""
  payload_ends_with: String

  """All values not ending with the given string."""
  payload_not_ends_with: String
  resultType: ResultType

  """All values that are not equal to given value."""
  resultType_not: ResultType

  """All values that are contained in given list."""
  resultType_in: [ResultType!]

  """All values that are not contained in given list."""
  resultType_not_in: [ResultType!]
  testVersion: String

  """All values that are not equal to given value."""
  testVersion_not: String

  """All values that are contained in given list."""
  testVersion_in: [String!]

  """All values that are not contained in given list."""
  testVersion_not_in: [String!]

  """All values less than the given value."""
  testVersion_lt: String

  """All values less than or equal the given value."""
  testVersion_lte: String

  """All values greater than the given value."""
  testVersion_gt: String

  """All values greater than or equal the given value."""
  testVersion_gte: String

  """All values containing the given string."""
  testVersion_contains: String

  """All values not containing the given string."""
  testVersion_not_contains: String

  """All values starting with the given string."""
  testVersion_starts_with: String

  """All values not starting with the given string."""
  testVersion_not_starts_with: String

  """All values ending with the given string."""
  testVersion_ends_with: String

  """All values not ending with the given string."""
  testVersion_not_ends_with: String
}

type ResultSubscriptionPayload {
  mutation: MutationType!
  node: Result
  updatedFields: [String!]
  previousValues: ResultPreviousValues
}

input ResultSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ResultSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResultSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResultSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ResultWhereInput
}

enum ResultType {
  REVIEW
  TEST
  MAIN
}

input ResultUpdateDataInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
  template: TemplateUpdateOneInput
  task: TaskUpdateOneRequiredInput
  user: ProfileUpdateOneWithoutResultsInput
  guest: GuestUpdateOneWithoutResultsInput
  study: StudyUpdateOneInput
  incrementalData: DataUpdateManyInput
  fullData: DataUpdateOneInput
}

input ResultUpdateInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
  template: TemplateUpdateOneInput
  task: TaskUpdateOneRequiredInput
  user: ProfileUpdateOneWithoutResultsInput
  guest: GuestUpdateOneWithoutResultsInput
  study: StudyUpdateOneInput
  incrementalData: DataUpdateManyInput
  fullData: DataUpdateOneInput
}

input ResultUpdateManyDataInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
}

input ResultUpdateManyMutationInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
}

input ResultUpdateManyWithoutGuestInput {
  create: [ResultCreateWithoutGuestInput!]
  connect: [ResultWhereUniqueInput!]
  set: [ResultWhereUniqueInput!]
  disconnect: [ResultWhereUniqueInput!]
  delete: [ResultWhereUniqueInput!]
  update: [ResultUpdateWithWhereUniqueWithoutGuestInput!]
  updateMany: [ResultUpdateManyWithWhereNestedInput!]
  deleteMany: [ResultScalarWhereInput!]
  upsert: [ResultUpsertWithWhereUniqueWithoutGuestInput!]
}

input ResultUpdateManyWithoutUserInput {
  create: [ResultCreateWithoutUserInput!]
  connect: [ResultWhereUniqueInput!]
  set: [ResultWhereUniqueInput!]
  disconnect: [ResultWhereUniqueInput!]
  delete: [ResultWhereUniqueInput!]
  update: [ResultUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ResultUpdateManyWithWhereNestedInput!]
  deleteMany: [ResultScalarWhereInput!]
  upsert: [ResultUpsertWithWhereUniqueWithoutUserInput!]
}

input ResultUpdateManyWithWhereNestedInput {
  where: ResultScalarWhereInput!
  data: ResultUpdateManyDataInput!
}

input ResultUpdateOneInput {
  create: ResultCreateInput
  connect: ResultWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ResultUpdateDataInput
  upsert: ResultUpsertNestedInput
}

input ResultUpdateWithoutGuestDataInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
  template: TemplateUpdateOneInput
  task: TaskUpdateOneRequiredInput
  user: ProfileUpdateOneWithoutResultsInput
  study: StudyUpdateOneInput
  incrementalData: DataUpdateManyInput
  fullData: DataUpdateOneInput
}

input ResultUpdateWithoutUserDataInput {
  quantity: Int
  data: Json
  dataPolicy: String
  token: String
  payload: String
  info: Json
  resultType: ResultType
  testVersion: String
  template: TemplateUpdateOneInput
  task: TaskUpdateOneRequiredInput
  guest: GuestUpdateOneWithoutResultsInput
  study: StudyUpdateOneInput
  incrementalData: DataUpdateManyInput
  fullData: DataUpdateOneInput
}

input ResultUpdateWithWhereUniqueWithoutGuestInput {
  where: ResultWhereUniqueInput!
  data: ResultUpdateWithoutGuestDataInput!
}

input ResultUpdateWithWhereUniqueWithoutUserInput {
  where: ResultWhereUniqueInput!
  data: ResultUpdateWithoutUserDataInput!
}

input ResultUpsertNestedInput {
  update: ResultUpdateDataInput!
  create: ResultCreateInput!
}

input ResultUpsertWithWhereUniqueWithoutGuestInput {
  where: ResultWhereUniqueInput!
  update: ResultUpdateWithoutGuestDataInput!
  create: ResultCreateWithoutGuestInput!
}

input ResultUpsertWithWhereUniqueWithoutUserInput {
  where: ResultWhereUniqueInput!
  update: ResultUpdateWithoutUserDataInput!
  create: ResultCreateWithoutUserInput!
}

input ResultWhereInput {
  """Logical AND on all given filters."""
  AND: [ResultWhereInput!]

  """Logical OR on all given filters."""
  OR: [ResultWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ResultWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  quantity: Int

  """All values that are not equal to given value."""
  quantity_not: Int

  """All values that are contained in given list."""
  quantity_in: [Int!]

  """All values that are not contained in given list."""
  quantity_not_in: [Int!]

  """All values less than the given value."""
  quantity_lt: Int

  """All values less than or equal the given value."""
  quantity_lte: Int

  """All values greater than the given value."""
  quantity_gt: Int

  """All values greater than or equal the given value."""
  quantity_gte: Int
  dataPolicy: String

  """All values that are not equal to given value."""
  dataPolicy_not: String

  """All values that are contained in given list."""
  dataPolicy_in: [String!]

  """All values that are not contained in given list."""
  dataPolicy_not_in: [String!]

  """All values less than the given value."""
  dataPolicy_lt: String

  """All values less than or equal the given value."""
  dataPolicy_lte: String

  """All values greater than the given value."""
  dataPolicy_gt: String

  """All values greater than or equal the given value."""
  dataPolicy_gte: String

  """All values containing the given string."""
  dataPolicy_contains: String

  """All values not containing the given string."""
  dataPolicy_not_contains: String

  """All values starting with the given string."""
  dataPolicy_starts_with: String

  """All values not starting with the given string."""
  dataPolicy_not_starts_with: String

  """All values ending with the given string."""
  dataPolicy_ends_with: String

  """All values not ending with the given string."""
  dataPolicy_not_ends_with: String
  token: String

  """All values that are not equal to given value."""
  token_not: String

  """All values that are contained in given list."""
  token_in: [String!]

  """All values that are not contained in given list."""
  token_not_in: [String!]

  """All values less than the given value."""
  token_lt: String

  """All values less than or equal the given value."""
  token_lte: String

  """All values greater than the given value."""
  token_gt: String

  """All values greater than or equal the given value."""
  token_gte: String

  """All values containing the given string."""
  token_contains: String

  """All values not containing the given string."""
  token_not_contains: String

  """All values starting with the given string."""
  token_starts_with: String

  """All values not starting with the given string."""
  token_not_starts_with: String

  """All values ending with the given string."""
  token_ends_with: String

  """All values not ending with the given string."""
  token_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  payload: String

  """All values that are not equal to given value."""
  payload_not: String

  """All values that are contained in given list."""
  payload_in: [String!]

  """All values that are not contained in given list."""
  payload_not_in: [String!]

  """All values less than the given value."""
  payload_lt: String

  """All values less than or equal the given value."""
  payload_lte: String

  """All values greater than the given value."""
  payload_gt: String

  """All values greater than or equal the given value."""
  payload_gte: String

  """All values containing the given string."""
  payload_contains: String

  """All values not containing the given string."""
  payload_not_contains: String

  """All values starting with the given string."""
  payload_starts_with: String

  """All values not starting with the given string."""
  payload_not_starts_with: String

  """All values ending with the given string."""
  payload_ends_with: String

  """All values not ending with the given string."""
  payload_not_ends_with: String
  resultType: ResultType

  """All values that are not equal to given value."""
  resultType_not: ResultType

  """All values that are contained in given list."""
  resultType_in: [ResultType!]

  """All values that are not contained in given list."""
  resultType_not_in: [ResultType!]
  testVersion: String

  """All values that are not equal to given value."""
  testVersion_not: String

  """All values that are contained in given list."""
  testVersion_in: [String!]

  """All values that are not contained in given list."""
  testVersion_not_in: [String!]

  """All values less than the given value."""
  testVersion_lt: String

  """All values less than or equal the given value."""
  testVersion_lte: String

  """All values greater than the given value."""
  testVersion_gt: String

  """All values greater than or equal the given value."""
  testVersion_gte: String

  """All values containing the given string."""
  testVersion_contains: String

  """All values not containing the given string."""
  testVersion_not_contains: String

  """All values starting with the given string."""
  testVersion_starts_with: String

  """All values not starting with the given string."""
  testVersion_not_starts_with: String

  """All values ending with the given string."""
  testVersion_ends_with: String

  """All values not ending with the given string."""
  testVersion_not_ends_with: String
  template: TemplateWhereInput
  task: TaskWhereInput
  user: ProfileWhereInput
  guest: GuestWhereInput
  study: StudyWhereInput
  incrementalData_every: DataWhereInput
  incrementalData_some: DataWhereInput
  incrementalData_none: DataWhereInput
  fullData: DataWhereInput
}

input ResultWhereUniqueInput {
  id: ID
  token: String
}

type Review implements Node {
  id: ID!
  study: Study
  proposal: ProposalBoard
  author: Profile
  settings: Json
  content: Json
  stage: ReviewStage
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type ReviewConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ReviewEdge]!
  aggregate: AggregateReview!
}

input ReviewCreateInput {
  id: ID
  settings: Json
  content: Json
  stage: ReviewStage
  study: StudyCreateOneWithoutReviewsInput
  proposal: ProposalBoardCreateOneWithoutReviewsInput
  author: ProfileCreateOneWithoutReviewsInput
}

input ReviewCreateManyWithoutAuthorInput {
  create: [ReviewCreateWithoutAuthorInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateManyWithoutProposalInput {
  create: [ReviewCreateWithoutProposalInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateManyWithoutStudyInput {
  create: [ReviewCreateWithoutStudyInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateWithoutAuthorInput {
  id: ID
  settings: Json
  content: Json
  stage: ReviewStage
  study: StudyCreateOneWithoutReviewsInput
  proposal: ProposalBoardCreateOneWithoutReviewsInput
}

input ReviewCreateWithoutProposalInput {
  id: ID
  settings: Json
  content: Json
  stage: ReviewStage
  study: StudyCreateOneWithoutReviewsInput
  author: ProfileCreateOneWithoutReviewsInput
}

input ReviewCreateWithoutStudyInput {
  id: ID
  settings: Json
  content: Json
  stage: ReviewStage
  proposal: ProposalBoardCreateOneWithoutReviewsInput
  author: ProfileCreateOneWithoutReviewsInput
}

"""An edge in a connection."""
type ReviewEdge {
  """The item at the end of the edge."""
  node: Review!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ReviewOrderByInput {
  id_ASC
  id_DESC
  settings_ASC
  settings_DESC
  content_ASC
  content_DESC
  stage_ASC
  stage_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ReviewPreviousValues {
  id: ID!
  settings: Json
  content: Json
  stage: ReviewStage
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ReviewScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ReviewScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReviewScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReviewScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  stage: ReviewStage

  """All values that are not equal to given value."""
  stage_not: ReviewStage

  """All values that are contained in given list."""
  stage_in: [ReviewStage!]

  """All values that are not contained in given list."""
  stage_not_in: [ReviewStage!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

enum ReviewStage {
  INDIVIDUAL
  SYNTHESIS
}

type ReviewSubscriptionPayload {
  mutation: MutationType!
  node: Review
  updatedFields: [String!]
  previousValues: ReviewPreviousValues
}

input ReviewSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ReviewSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReviewSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReviewSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ReviewWhereInput
}

input ReviewUpdateInput {
  settings: Json
  content: Json
  stage: ReviewStage
  study: StudyUpdateOneWithoutReviewsInput
  proposal: ProposalBoardUpdateOneWithoutReviewsInput
  author: ProfileUpdateOneWithoutReviewsInput
}

input ReviewUpdateManyDataInput {
  settings: Json
  content: Json
  stage: ReviewStage
}

input ReviewUpdateManyMutationInput {
  settings: Json
  content: Json
  stage: ReviewStage
}

input ReviewUpdateManyWithoutAuthorInput {
  create: [ReviewCreateWithoutAuthorInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  delete: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  deleteMany: [ReviewScalarWhereInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ReviewUpdateManyWithoutProposalInput {
  create: [ReviewCreateWithoutProposalInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  delete: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutProposalInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  deleteMany: [ReviewScalarWhereInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutProposalInput!]
}

input ReviewUpdateManyWithoutStudyInput {
  create: [ReviewCreateWithoutStudyInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  delete: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutStudyInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
  deleteMany: [ReviewScalarWhereInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutStudyInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  where: ReviewScalarWhereInput!
  data: ReviewUpdateManyDataInput!
}

input ReviewUpdateWithoutAuthorDataInput {
  settings: Json
  content: Json
  stage: ReviewStage
  study: StudyUpdateOneWithoutReviewsInput
  proposal: ProposalBoardUpdateOneWithoutReviewsInput
}

input ReviewUpdateWithoutProposalDataInput {
  settings: Json
  content: Json
  stage: ReviewStage
  study: StudyUpdateOneWithoutReviewsInput
  author: ProfileUpdateOneWithoutReviewsInput
}

input ReviewUpdateWithoutStudyDataInput {
  settings: Json
  content: Json
  stage: ReviewStage
  proposal: ProposalBoardUpdateOneWithoutReviewsInput
  author: ProfileUpdateOneWithoutReviewsInput
}

input ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutAuthorDataInput!
}

input ReviewUpdateWithWhereUniqueWithoutProposalInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutProposalDataInput!
}

input ReviewUpdateWithWhereUniqueWithoutStudyInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutStudyDataInput!
}

input ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutAuthorDataInput!
  create: ReviewCreateWithoutAuthorInput!
}

input ReviewUpsertWithWhereUniqueWithoutProposalInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutProposalDataInput!
  create: ReviewCreateWithoutProposalInput!
}

input ReviewUpsertWithWhereUniqueWithoutStudyInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutStudyDataInput!
  create: ReviewCreateWithoutStudyInput!
}

input ReviewWhereInput {
  """Logical AND on all given filters."""
  AND: [ReviewWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReviewWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReviewWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  stage: ReviewStage

  """All values that are not equal to given value."""
  stage_not: ReviewStage

  """All values that are contained in given list."""
  stage_in: [ReviewStage!]

  """All values that are not contained in given list."""
  stage_not_in: [ReviewStage!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  study: StudyWhereInput
  proposal: ProposalBoardWhereInput
  author: ProfileWhereInput
}

input ReviewWhereUniqueInput {
  id: ID
}

type School implements Node {
  id: ID!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: Profile!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

"""A connection to a list of items."""
type SchoolConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SchoolEdge]!
  aggregate: AggregateSchool!
}

input SchoolCreateInput {
  id: ID
  title: String!
  description: String
  image: String
  largeImage: String
  creator: ProfileCreateOneInput!
  tags: TagCreateManyWithoutSchoolsInput
}

input SchoolCreateManyWithoutTagsInput {
  create: [SchoolCreateWithoutTagsInput!]
  connect: [SchoolWhereUniqueInput!]
}

input SchoolCreateWithoutTagsInput {
  id: ID
  title: String!
  description: String
  image: String
  largeImage: String
  creator: ProfileCreateOneInput!
}

"""An edge in a connection."""
type SchoolEdge {
  """The item at the end of the edge."""
  node: School!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SchoolOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SchoolPreviousValues {
  id: ID!
  title: String!
  description: String
  image: String
  largeImage: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input SchoolScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [SchoolScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [SchoolScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SchoolScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type SchoolSubscriptionPayload {
  mutation: MutationType!
  node: School
  updatedFields: [String!]
  previousValues: SchoolPreviousValues
}

input SchoolSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SchoolSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SchoolSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SchoolSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SchoolWhereInput
}

input SchoolUpdateInput {
  title: String
  description: String
  image: String
  largeImage: String
  creator: ProfileUpdateOneRequiredInput
  tags: TagUpdateManyWithoutSchoolsInput
}

input SchoolUpdateManyDataInput {
  title: String
  description: String
  image: String
  largeImage: String
}

input SchoolUpdateManyMutationInput {
  title: String
  description: String
  image: String
  largeImage: String
}

input SchoolUpdateManyWithoutTagsInput {
  create: [SchoolCreateWithoutTagsInput!]
  connect: [SchoolWhereUniqueInput!]
  set: [SchoolWhereUniqueInput!]
  disconnect: [SchoolWhereUniqueInput!]
  delete: [SchoolWhereUniqueInput!]
  update: [SchoolUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [SchoolUpdateManyWithWhereNestedInput!]
  deleteMany: [SchoolScalarWhereInput!]
  upsert: [SchoolUpsertWithWhereUniqueWithoutTagsInput!]
}

input SchoolUpdateManyWithWhereNestedInput {
  where: SchoolScalarWhereInput!
  data: SchoolUpdateManyDataInput!
}

input SchoolUpdateWithoutTagsDataInput {
  title: String
  description: String
  image: String
  largeImage: String
  creator: ProfileUpdateOneRequiredInput
}

input SchoolUpdateWithWhereUniqueWithoutTagsInput {
  where: SchoolWhereUniqueInput!
  data: SchoolUpdateWithoutTagsDataInput!
}

input SchoolUpsertWithWhereUniqueWithoutTagsInput {
  where: SchoolWhereUniqueInput!
  update: SchoolUpdateWithoutTagsDataInput!
  create: SchoolCreateWithoutTagsInput!
}

input SchoolWhereInput {
  """Logical AND on all given filters."""
  AND: [SchoolWhereInput!]

  """Logical OR on all given filters."""
  OR: [SchoolWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SchoolWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  creator: ProfileWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input SchoolWhereUniqueInput {
  id: ID
}

type Script implements Node {
  id: ID!
  title: String!
  slug: String!
  description: String
  creator: Profile
  author: Profile
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  createdAt: DateTime!
  updatedAt: DateTime!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
}

"""A connection to a list of items."""
type ScriptConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ScriptEdge]!
  aggregate: AggregateScript!
}

input ScriptCreateInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileCreateOneWithoutCreatorOfScriptInput
  author: ProfileCreateOneWithoutAuthorOfScriptInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnScriptInput
  studies: StudyCreateManyWithoutScriptsInput
  tags: TagCreateManyWithoutScriptsInput
}

input ScriptCreateManyWithoutAuthorInput {
  create: [ScriptCreateWithoutAuthorInput!]
  connect: [ScriptWhereUniqueInput!]
}

input ScriptCreateManyWithoutCollaboratorsInput {
  create: [ScriptCreateWithoutCollaboratorsInput!]
  connect: [ScriptWhereUniqueInput!]
}

input ScriptCreateManyWithoutCreatorInput {
  create: [ScriptCreateWithoutCreatorInput!]
  connect: [ScriptWhereUniqueInput!]
}

input ScriptCreateManyWithoutStudiesInput {
  create: [ScriptCreateWithoutStudiesInput!]
  connect: [ScriptWhereUniqueInput!]
}

input ScriptCreateManyWithoutTagsInput {
  create: [ScriptCreateWithoutTagsInput!]
  connect: [ScriptWhereUniqueInput!]
}

input ScriptCreateWithoutAuthorInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileCreateOneWithoutCreatorOfScriptInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnScriptInput
  studies: StudyCreateManyWithoutScriptsInput
  tags: TagCreateManyWithoutScriptsInput
}

input ScriptCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileCreateOneWithoutCreatorOfScriptInput
  author: ProfileCreateOneWithoutAuthorOfScriptInput
  studies: StudyCreateManyWithoutScriptsInput
  tags: TagCreateManyWithoutScriptsInput
}

input ScriptCreateWithoutCreatorInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  author: ProfileCreateOneWithoutAuthorOfScriptInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnScriptInput
  studies: StudyCreateManyWithoutScriptsInput
  tags: TagCreateManyWithoutScriptsInput
}

input ScriptCreateWithoutStudiesInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileCreateOneWithoutCreatorOfScriptInput
  author: ProfileCreateOneWithoutAuthorOfScriptInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnScriptInput
  tags: TagCreateManyWithoutScriptsInput
}

input ScriptCreateWithoutTagsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileCreateOneWithoutCreatorOfScriptInput
  author: ProfileCreateOneWithoutAuthorOfScriptInput
  collaborators: ProfileCreateManyWithoutCollaboratorOnScriptInput
  studies: StudyCreateManyWithoutScriptsInput
}

"""An edge in a connection."""
type ScriptEdge {
  """The item at the end of the edge."""
  node: Script!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ScriptOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  isTemplate_ASC
  isTemplate_DESC
  isPublic_ASC
  isPublic_DESC
  isFeatured_ASC
  isFeatured_DESC
  settings_ASC
  settings_DESC
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ScriptPreviousValues {
  id: ID!
  title: String!
  slug: String!
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ScriptScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ScriptScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScriptScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScriptScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  isTemplate: Boolean

  """All values that are not equal to given value."""
  isTemplate_not: Boolean
  isPublic: Boolean

  """All values that are not equal to given value."""
  isPublic_not: Boolean
  isFeatured: Boolean

  """All values that are not equal to given value."""
  isFeatured_not: Boolean
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ScriptSubscriptionPayload {
  mutation: MutationType!
  node: Script
  updatedFields: [String!]
  previousValues: ScriptPreviousValues
}

input ScriptSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ScriptSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScriptSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScriptSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ScriptWhereInput
}

input ScriptUpdateInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileUpdateOneWithoutCreatorOfScriptInput
  author: ProfileUpdateOneWithoutAuthorOfScriptInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnScriptInput
  studies: StudyUpdateManyWithoutScriptsInput
  tags: TagUpdateManyWithoutScriptsInput
}

input ScriptUpdateManyDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
}

input ScriptUpdateManyMutationInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
}

input ScriptUpdateManyWithoutAuthorInput {
  create: [ScriptCreateWithoutAuthorInput!]
  connect: [ScriptWhereUniqueInput!]
  set: [ScriptWhereUniqueInput!]
  disconnect: [ScriptWhereUniqueInput!]
  delete: [ScriptWhereUniqueInput!]
  update: [ScriptUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ScriptUpdateManyWithWhereNestedInput!]
  deleteMany: [ScriptScalarWhereInput!]
  upsert: [ScriptUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ScriptUpdateManyWithoutCollaboratorsInput {
  create: [ScriptCreateWithoutCollaboratorsInput!]
  connect: [ScriptWhereUniqueInput!]
  set: [ScriptWhereUniqueInput!]
  disconnect: [ScriptWhereUniqueInput!]
  delete: [ScriptWhereUniqueInput!]
  update: [ScriptUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [ScriptUpdateManyWithWhereNestedInput!]
  deleteMany: [ScriptScalarWhereInput!]
  upsert: [ScriptUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input ScriptUpdateManyWithoutCreatorInput {
  create: [ScriptCreateWithoutCreatorInput!]
  connect: [ScriptWhereUniqueInput!]
  set: [ScriptWhereUniqueInput!]
  disconnect: [ScriptWhereUniqueInput!]
  delete: [ScriptWhereUniqueInput!]
  update: [ScriptUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [ScriptUpdateManyWithWhereNestedInput!]
  deleteMany: [ScriptScalarWhereInput!]
  upsert: [ScriptUpsertWithWhereUniqueWithoutCreatorInput!]
}

input ScriptUpdateManyWithoutStudiesInput {
  create: [ScriptCreateWithoutStudiesInput!]
  connect: [ScriptWhereUniqueInput!]
  set: [ScriptWhereUniqueInput!]
  disconnect: [ScriptWhereUniqueInput!]
  delete: [ScriptWhereUniqueInput!]
  update: [ScriptUpdateWithWhereUniqueWithoutStudiesInput!]
  updateMany: [ScriptUpdateManyWithWhereNestedInput!]
  deleteMany: [ScriptScalarWhereInput!]
  upsert: [ScriptUpsertWithWhereUniqueWithoutStudiesInput!]
}

input ScriptUpdateManyWithoutTagsInput {
  create: [ScriptCreateWithoutTagsInput!]
  connect: [ScriptWhereUniqueInput!]
  set: [ScriptWhereUniqueInput!]
  disconnect: [ScriptWhereUniqueInput!]
  delete: [ScriptWhereUniqueInput!]
  update: [ScriptUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ScriptUpdateManyWithWhereNestedInput!]
  deleteMany: [ScriptScalarWhereInput!]
  upsert: [ScriptUpsertWithWhereUniqueWithoutTagsInput!]
}

input ScriptUpdateManyWithWhereNestedInput {
  where: ScriptScalarWhereInput!
  data: ScriptUpdateManyDataInput!
}

input ScriptUpdateWithoutAuthorDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileUpdateOneWithoutCreatorOfScriptInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnScriptInput
  studies: StudyUpdateManyWithoutScriptsInput
  tags: TagUpdateManyWithoutScriptsInput
}

input ScriptUpdateWithoutCollaboratorsDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileUpdateOneWithoutCreatorOfScriptInput
  author: ProfileUpdateOneWithoutAuthorOfScriptInput
  studies: StudyUpdateManyWithoutScriptsInput
  tags: TagUpdateManyWithoutScriptsInput
}

input ScriptUpdateWithoutCreatorDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  author: ProfileUpdateOneWithoutAuthorOfScriptInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnScriptInput
  studies: StudyUpdateManyWithoutScriptsInput
  tags: TagUpdateManyWithoutScriptsInput
}

input ScriptUpdateWithoutStudiesDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileUpdateOneWithoutCreatorOfScriptInput
  author: ProfileUpdateOneWithoutAuthorOfScriptInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnScriptInput
  tags: TagUpdateManyWithoutScriptsInput
}

input ScriptUpdateWithoutTagsDataInput {
  title: String
  slug: String
  description: String
  isTemplate: Boolean
  isPublic: Boolean
  isFeatured: Boolean
  settings: Json
  content: String
  creator: ProfileUpdateOneWithoutCreatorOfScriptInput
  author: ProfileUpdateOneWithoutAuthorOfScriptInput
  collaborators: ProfileUpdateManyWithoutCollaboratorOnScriptInput
  studies: StudyUpdateManyWithoutScriptsInput
}

input ScriptUpdateWithWhereUniqueWithoutAuthorInput {
  where: ScriptWhereUniqueInput!
  data: ScriptUpdateWithoutAuthorDataInput!
}

input ScriptUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: ScriptWhereUniqueInput!
  data: ScriptUpdateWithoutCollaboratorsDataInput!
}

input ScriptUpdateWithWhereUniqueWithoutCreatorInput {
  where: ScriptWhereUniqueInput!
  data: ScriptUpdateWithoutCreatorDataInput!
}

input ScriptUpdateWithWhereUniqueWithoutStudiesInput {
  where: ScriptWhereUniqueInput!
  data: ScriptUpdateWithoutStudiesDataInput!
}

input ScriptUpdateWithWhereUniqueWithoutTagsInput {
  where: ScriptWhereUniqueInput!
  data: ScriptUpdateWithoutTagsDataInput!
}

input ScriptUpsertWithWhereUniqueWithoutAuthorInput {
  where: ScriptWhereUniqueInput!
  update: ScriptUpdateWithoutAuthorDataInput!
  create: ScriptCreateWithoutAuthorInput!
}

input ScriptUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: ScriptWhereUniqueInput!
  update: ScriptUpdateWithoutCollaboratorsDataInput!
  create: ScriptCreateWithoutCollaboratorsInput!
}

input ScriptUpsertWithWhereUniqueWithoutCreatorInput {
  where: ScriptWhereUniqueInput!
  update: ScriptUpdateWithoutCreatorDataInput!
  create: ScriptCreateWithoutCreatorInput!
}

input ScriptUpsertWithWhereUniqueWithoutStudiesInput {
  where: ScriptWhereUniqueInput!
  update: ScriptUpdateWithoutStudiesDataInput!
  create: ScriptCreateWithoutStudiesInput!
}

input ScriptUpsertWithWhereUniqueWithoutTagsInput {
  where: ScriptWhereUniqueInput!
  update: ScriptUpdateWithoutTagsDataInput!
  create: ScriptCreateWithoutTagsInput!
}

input ScriptWhereInput {
  """Logical AND on all given filters."""
  AND: [ScriptWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScriptWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScriptWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  isTemplate: Boolean

  """All values that are not equal to given value."""
  isTemplate_not: Boolean
  isPublic: Boolean

  """All values that are not equal to given value."""
  isPublic_not: Boolean
  isFeatured: Boolean

  """All values that are not equal to given value."""
  isFeatured_not: Boolean
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  creator: ProfileWhereInput
  author: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  studies_every: StudyWhereInput
  studies_some: StudyWhereInput
  studies_none: StudyWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input ScriptWhereUniqueInput {
  id: ID
  slug: String
}

type Study implements Node {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  descriptionInProposalCard: ProposalCard
  author: Profile!
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  settings: Json
  participants(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  createdAt: DateTime!
  updatedAt: DateTime!
  image: String
  largeImage: String
  info: Json
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  consent(where: ConsentWhereInput, orderBy: ConsentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Consent!]
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  proposal(where: ProposalBoardWhereInput, orderBy: ProposalBoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalBoard!]
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  featured: Boolean
  guests(where: GuestWhereInput, orderBy: GuestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Guest!]
  isHidden: Boolean
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  scripts(where: ScriptWhereInput, orderBy: ScriptOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Script!]
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  diagram: String
  talks(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk!]
}

"""A connection to a list of items."""
type StudyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [StudyEdge]!
  aggregate: AggregateStudy!
}

input StudyCreateInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateManyWithoutAuthorInput {
  create: [StudyCreateWithoutAuthorInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutClassesInput {
  create: [StudyCreateWithoutClassesInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutCollaboratorsInput {
  create: [StudyCreateWithoutCollaboratorsInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutConsentInput {
  create: [StudyCreateWithoutConsentInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutDescriptionInProposalCardInput {
  create: [StudyCreateWithoutDescriptionInProposalCardInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutGuestsInput {
  create: [StudyCreateWithoutGuestsInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutParticipantsInput {
  create: [StudyCreateWithoutParticipantsInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutScriptsInput {
  create: [StudyCreateWithoutScriptsInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutTagsInput {
  create: [StudyCreateWithoutTagsInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateManyWithoutTalksInput {
  create: [StudyCreateWithoutTalksInput!]
  connect: [StudyWhereUniqueInput!]
}

input StudyCreateOneInput {
  create: StudyCreateInput
  connect: StudyWhereUniqueInput
}

input StudyCreateOneWithoutProposalInput {
  create: StudyCreateWithoutProposalInput
  connect: StudyWhereUniqueInput
}

input StudyCreateOneWithoutReviewsInput {
  create: StudyCreateWithoutReviewsInput
  connect: StudyWhereUniqueInput
}

input StudyCreateWithoutAuthorInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutClassesInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutConsentInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutDescriptionInProposalCardInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutGuestsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutParticipantsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutProposalInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutReviewsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutScriptsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutTagsInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  talks: TalkCreateManyWithoutStudiesInput
}

input StudyCreateWithoutTalksInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardCreateOneWithoutStudyDescriptionInput
  author: ProfileCreateOneWithoutResearcherInInput!
  tasks: TaskCreateManyInput
  participants: ProfileCreateManyWithoutParticipantInInput
  collaborators: ProfileCreateManyWithoutCollaboratorInStudyInput
  consent: ConsentCreateManyWithoutStudiesInput
  messages: MessageCreateManyInput
  proposal: ProposalBoardCreateManyWithoutStudyInput
  reviews: ReviewCreateManyWithoutStudyInput
  guests: GuestCreateManyWithoutGuestParticipantInInput
  classes: ClassCreateManyWithoutStudiesInput
  scripts: ScriptCreateManyWithoutStudiesInput
  tags: TagCreateManyWithoutStudiesInput
}

"""An edge in a connection."""
type StudyEdge {
  """The item at the end of the edge."""
  node: Study!

  """A cursor for use in pagination."""
  cursor: String!
}

enum StudyOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  shortDescription_ASC
  shortDescription_DESC
  description_ASC
  description_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  info_ASC
  info_DESC
  public_ASC
  public_DESC
  submitForPublishing_ASC
  submitForPublishing_DESC
  components_ASC
  components_DESC
  featured_ASC
  featured_DESC
  isHidden_ASC
  isHidden_DESC
  diagram_ASC
  diagram_DESC
}

type StudyPreviousValues {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
}

input StudyScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [StudyScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [StudyScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StudyScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  submitForPublishing: Boolean

  """All values that are not equal to given value."""
  submitForPublishing_not: Boolean
  featured: Boolean

  """All values that are not equal to given value."""
  featured_not: Boolean
  isHidden: Boolean

  """All values that are not equal to given value."""
  isHidden_not: Boolean
  diagram: String

  """All values that are not equal to given value."""
  diagram_not: String

  """All values that are contained in given list."""
  diagram_in: [String!]

  """All values that are not contained in given list."""
  diagram_not_in: [String!]

  """All values less than the given value."""
  diagram_lt: String

  """All values less than or equal the given value."""
  diagram_lte: String

  """All values greater than the given value."""
  diagram_gt: String

  """All values greater than or equal the given value."""
  diagram_gte: String

  """All values containing the given string."""
  diagram_contains: String

  """All values not containing the given string."""
  diagram_not_contains: String

  """All values starting with the given string."""
  diagram_starts_with: String

  """All values not starting with the given string."""
  diagram_not_starts_with: String

  """All values ending with the given string."""
  diagram_ends_with: String

  """All values not ending with the given string."""
  diagram_not_ends_with: String
}

type StudySubscriptionPayload {
  mutation: MutationType!
  node: Study
  updatedFields: [String!]
  previousValues: StudyPreviousValues
}

input StudySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [StudySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [StudySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StudySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StudyWhereInput
}

input StudyUpdateDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateManyDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
}

input StudyUpdateManyMutationInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
}

input StudyUpdateManyWithoutAuthorInput {
  create: [StudyCreateWithoutAuthorInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutAuthorInput!]
}

input StudyUpdateManyWithoutClassesInput {
  create: [StudyCreateWithoutClassesInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutClassesInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutClassesInput!]
}

input StudyUpdateManyWithoutCollaboratorsInput {
  create: [StudyCreateWithoutCollaboratorsInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input StudyUpdateManyWithoutConsentInput {
  create: [StudyCreateWithoutConsentInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutConsentInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutConsentInput!]
}

input StudyUpdateManyWithoutDescriptionInProposalCardInput {
  create: [StudyCreateWithoutDescriptionInProposalCardInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutDescriptionInProposalCardInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutDescriptionInProposalCardInput!]
}

input StudyUpdateManyWithoutGuestsInput {
  create: [StudyCreateWithoutGuestsInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutGuestsInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutGuestsInput!]
}

input StudyUpdateManyWithoutParticipantsInput {
  create: [StudyCreateWithoutParticipantsInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutParticipantsInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutParticipantsInput!]
}

input StudyUpdateManyWithoutScriptsInput {
  create: [StudyCreateWithoutScriptsInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutScriptsInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutScriptsInput!]
}

input StudyUpdateManyWithoutTagsInput {
  create: [StudyCreateWithoutTagsInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutTagsInput!]
}

input StudyUpdateManyWithoutTalksInput {
  create: [StudyCreateWithoutTalksInput!]
  connect: [StudyWhereUniqueInput!]
  set: [StudyWhereUniqueInput!]
  disconnect: [StudyWhereUniqueInput!]
  delete: [StudyWhereUniqueInput!]
  update: [StudyUpdateWithWhereUniqueWithoutTalksInput!]
  updateMany: [StudyUpdateManyWithWhereNestedInput!]
  deleteMany: [StudyScalarWhereInput!]
  upsert: [StudyUpsertWithWhereUniqueWithoutTalksInput!]
}

input StudyUpdateManyWithWhereNestedInput {
  where: StudyScalarWhereInput!
  data: StudyUpdateManyDataInput!
}

input StudyUpdateOneInput {
  create: StudyCreateInput
  connect: StudyWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StudyUpdateDataInput
  upsert: StudyUpsertNestedInput
}

input StudyUpdateOneWithoutProposalInput {
  create: StudyCreateWithoutProposalInput
  connect: StudyWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StudyUpdateWithoutProposalDataInput
  upsert: StudyUpsertWithoutProposalInput
}

input StudyUpdateOneWithoutReviewsInput {
  create: StudyCreateWithoutReviewsInput
  connect: StudyWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StudyUpdateWithoutReviewsDataInput
  upsert: StudyUpsertWithoutReviewsInput
}

input StudyUpdateWithoutAuthorDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutClassesDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutCollaboratorsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutConsentDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutDescriptionInProposalCardDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutGuestsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutParticipantsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutProposalDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutReviewsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutScriptsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutTagsDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  talks: TalkUpdateManyWithoutStudiesInput
}

input StudyUpdateWithoutTalksDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  settings: Json
  image: String
  largeImage: String
  info: Json
  public: Boolean
  submitForPublishing: Boolean
  components: Json
  featured: Boolean
  isHidden: Boolean
  diagram: String
  descriptionInProposalCard: ProposalCardUpdateOneWithoutStudyDescriptionInput
  author: ProfileUpdateOneRequiredWithoutResearcherInInput
  tasks: TaskUpdateManyInput
  participants: ProfileUpdateManyWithoutParticipantInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInStudyInput
  consent: ConsentUpdateManyWithoutStudiesInput
  messages: MessageUpdateManyInput
  proposal: ProposalBoardUpdateManyWithoutStudyInput
  reviews: ReviewUpdateManyWithoutStudyInput
  guests: GuestUpdateManyWithoutGuestParticipantInInput
  classes: ClassUpdateManyWithoutStudiesInput
  scripts: ScriptUpdateManyWithoutStudiesInput
  tags: TagUpdateManyWithoutStudiesInput
}

input StudyUpdateWithWhereUniqueWithoutAuthorInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutAuthorDataInput!
}

input StudyUpdateWithWhereUniqueWithoutClassesInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutClassesDataInput!
}

input StudyUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutCollaboratorsDataInput!
}

input StudyUpdateWithWhereUniqueWithoutConsentInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutConsentDataInput!
}

input StudyUpdateWithWhereUniqueWithoutDescriptionInProposalCardInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutDescriptionInProposalCardDataInput!
}

input StudyUpdateWithWhereUniqueWithoutGuestsInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutGuestsDataInput!
}

input StudyUpdateWithWhereUniqueWithoutParticipantsInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutParticipantsDataInput!
}

input StudyUpdateWithWhereUniqueWithoutScriptsInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutScriptsDataInput!
}

input StudyUpdateWithWhereUniqueWithoutTagsInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutTagsDataInput!
}

input StudyUpdateWithWhereUniqueWithoutTalksInput {
  where: StudyWhereUniqueInput!
  data: StudyUpdateWithoutTalksDataInput!
}

input StudyUpsertNestedInput {
  update: StudyUpdateDataInput!
  create: StudyCreateInput!
}

input StudyUpsertWithoutProposalInput {
  update: StudyUpdateWithoutProposalDataInput!
  create: StudyCreateWithoutProposalInput!
}

input StudyUpsertWithoutReviewsInput {
  update: StudyUpdateWithoutReviewsDataInput!
  create: StudyCreateWithoutReviewsInput!
}

input StudyUpsertWithWhereUniqueWithoutAuthorInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutAuthorDataInput!
  create: StudyCreateWithoutAuthorInput!
}

input StudyUpsertWithWhereUniqueWithoutClassesInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutClassesDataInput!
  create: StudyCreateWithoutClassesInput!
}

input StudyUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutCollaboratorsDataInput!
  create: StudyCreateWithoutCollaboratorsInput!
}

input StudyUpsertWithWhereUniqueWithoutConsentInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutConsentDataInput!
  create: StudyCreateWithoutConsentInput!
}

input StudyUpsertWithWhereUniqueWithoutDescriptionInProposalCardInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutDescriptionInProposalCardDataInput!
  create: StudyCreateWithoutDescriptionInProposalCardInput!
}

input StudyUpsertWithWhereUniqueWithoutGuestsInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutGuestsDataInput!
  create: StudyCreateWithoutGuestsInput!
}

input StudyUpsertWithWhereUniqueWithoutParticipantsInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutParticipantsDataInput!
  create: StudyCreateWithoutParticipantsInput!
}

input StudyUpsertWithWhereUniqueWithoutScriptsInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutScriptsDataInput!
  create: StudyCreateWithoutScriptsInput!
}

input StudyUpsertWithWhereUniqueWithoutTagsInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutTagsDataInput!
  create: StudyCreateWithoutTagsInput!
}

input StudyUpsertWithWhereUniqueWithoutTalksInput {
  where: StudyWhereUniqueInput!
  update: StudyUpdateWithoutTalksDataInput!
  create: StudyCreateWithoutTalksInput!
}

input StudyWhereInput {
  """Logical AND on all given filters."""
  AND: [StudyWhereInput!]

  """Logical OR on all given filters."""
  OR: [StudyWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StudyWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  submitForPublishing: Boolean

  """All values that are not equal to given value."""
  submitForPublishing_not: Boolean
  featured: Boolean

  """All values that are not equal to given value."""
  featured_not: Boolean
  isHidden: Boolean

  """All values that are not equal to given value."""
  isHidden_not: Boolean
  diagram: String

  """All values that are not equal to given value."""
  diagram_not: String

  """All values that are contained in given list."""
  diagram_in: [String!]

  """All values that are not contained in given list."""
  diagram_not_in: [String!]

  """All values less than the given value."""
  diagram_lt: String

  """All values less than or equal the given value."""
  diagram_lte: String

  """All values greater than the given value."""
  diagram_gt: String

  """All values greater than or equal the given value."""
  diagram_gte: String

  """All values containing the given string."""
  diagram_contains: String

  """All values not containing the given string."""
  diagram_not_contains: String

  """All values starting with the given string."""
  diagram_starts_with: String

  """All values not starting with the given string."""
  diagram_not_starts_with: String

  """All values ending with the given string."""
  diagram_ends_with: String

  """All values not ending with the given string."""
  diagram_not_ends_with: String
  descriptionInProposalCard: ProposalCardWhereInput
  author: ProfileWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
  participants_every: ProfileWhereInput
  participants_some: ProfileWhereInput
  participants_none: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  consent_every: ConsentWhereInput
  consent_some: ConsentWhereInput
  consent_none: ConsentWhereInput
  messages_every: MessageWhereInput
  messages_some: MessageWhereInput
  messages_none: MessageWhereInput
  proposal_every: ProposalBoardWhereInput
  proposal_some: ProposalBoardWhereInput
  proposal_none: ProposalBoardWhereInput
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  guests_every: GuestWhereInput
  guests_some: GuestWhereInput
  guests_none: GuestWhereInput
  classes_every: ClassWhereInput
  classes_some: ClassWhereInput
  classes_none: ClassWhereInput
  scripts_every: ScriptWhereInput
  scripts_some: ScriptWhereInput
  scripts_none: ScriptWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  talks_every: TalkWhereInput
  talks_some: TalkWhereInput
  talks_none: TalkWhereInput
}

input StudyWhereUniqueInput {
  id: ID
  slug: String
}

type Subscription {
  authEmail(where: AuthEmailSubscriptionWhereInput): AuthEmailSubscriptionPayload
  authParticipant(where: AuthParticipantSubscriptionWhereInput): AuthParticipantSubscriptionPayload
  authToken(where: AuthTokenSubscriptionWhereInput): AuthTokenSubscriptionPayload
  authInvite(where: AuthInviteSubscriptionWhereInput): AuthInviteSubscriptionPayload
  school(where: SchoolSubscriptionWhereInput): SchoolSubscriptionPayload
  class(where: ClassSubscriptionWhereInput): ClassSubscriptionPayload
  classNetwork(where: ClassNetworkSubscriptionWhereInput): ClassNetworkSubscriptionPayload
  consent(where: ConsentSubscriptionWhereInput): ConsentSubscriptionPayload
  journal(where: JournalSubscriptionWhereInput): JournalSubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  proposalBoard(where: ProposalBoardSubscriptionWhereInput): ProposalBoardSubscriptionPayload
  proposalSection(where: ProposalSectionSubscriptionWhereInput): ProposalSectionSubscriptionPayload
  proposalCard(where: ProposalCardSubscriptionWhereInput): ProposalCardSubscriptionPayload
  review(where: ReviewSubscriptionWhereInput): ReviewSubscriptionPayload
  word(where: WordSubscriptionWhereInput): WordSubscriptionPayload
  talk(where: TalkSubscriptionWhereInput): TalkSubscriptionPayload
  assignment(where: AssignmentSubscriptionWhereInput): AssignmentSubscriptionPayload
  homework(where: HomeworkSubscriptionWhereInput): HomeworkSubscriptionPayload
  script(where: ScriptSubscriptionWhereInput): ScriptSubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  update(where: UpdateSubscriptionWhereInput): UpdateSubscriptionPayload
  summaryResult(where: SummaryResultSubscriptionWhereInput): SummaryResultSubscriptionPayload
  template(where: TemplateSubscriptionWhereInput): TemplateSubscriptionPayload
  task(where: TaskSubscriptionWhereInput): TaskSubscriptionPayload
  study(where: StudySubscriptionWhereInput): StudySubscriptionPayload
  guest(where: GuestSubscriptionWhereInput): GuestSubscriptionPayload
  result(where: ResultSubscriptionWhereInput): ResultSubscriptionPayload
  profile(where: ProfileSubscriptionWhereInput): ProfileSubscriptionPayload
  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload
  data(where: DataSubscriptionWhereInput): DataSubscriptionPayload
}

type SummaryResult implements Node {
  id: ID!
  user: Profile
  guest: Guest
  study: Study
  template: Template
  task: Task!
  testVersion: String
  metadataId: String
  dataPolicy: String
  fullResult: Result
  data: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type SummaryResultConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SummaryResultEdge]!
  aggregate: AggregateSummaryResult!
}

input SummaryResultCreateInput {
  id: ID
  testVersion: String
  metadataId: String
  dataPolicy: String
  data: Json
  user: ProfileCreateOneInput
  guest: GuestCreateOneInput
  study: StudyCreateOneInput
  template: TemplateCreateOneInput
  task: TaskCreateOneInput!
  fullResult: ResultCreateOneInput
}

"""An edge in a connection."""
type SummaryResultEdge {
  """The item at the end of the edge."""
  node: SummaryResult!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SummaryResultOrderByInput {
  id_ASC
  id_DESC
  testVersion_ASC
  testVersion_DESC
  metadataId_ASC
  metadataId_DESC
  dataPolicy_ASC
  dataPolicy_DESC
  data_ASC
  data_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SummaryResultPreviousValues {
  id: ID!
  testVersion: String
  metadataId: String
  dataPolicy: String
  data: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SummaryResultSubscriptionPayload {
  mutation: MutationType!
  node: SummaryResult
  updatedFields: [String!]
  previousValues: SummaryResultPreviousValues
}

input SummaryResultSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SummaryResultSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SummaryResultSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SummaryResultSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SummaryResultWhereInput
}

input SummaryResultUpdateInput {
  testVersion: String
  metadataId: String
  dataPolicy: String
  data: Json
  user: ProfileUpdateOneInput
  guest: GuestUpdateOneInput
  study: StudyUpdateOneInput
  template: TemplateUpdateOneInput
  task: TaskUpdateOneRequiredInput
  fullResult: ResultUpdateOneInput
}

input SummaryResultUpdateManyMutationInput {
  testVersion: String
  metadataId: String
  dataPolicy: String
  data: Json
}

input SummaryResultWhereInput {
  """Logical AND on all given filters."""
  AND: [SummaryResultWhereInput!]

  """Logical OR on all given filters."""
  OR: [SummaryResultWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SummaryResultWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  testVersion: String

  """All values that are not equal to given value."""
  testVersion_not: String

  """All values that are contained in given list."""
  testVersion_in: [String!]

  """All values that are not contained in given list."""
  testVersion_not_in: [String!]

  """All values less than the given value."""
  testVersion_lt: String

  """All values less than or equal the given value."""
  testVersion_lte: String

  """All values greater than the given value."""
  testVersion_gt: String

  """All values greater than or equal the given value."""
  testVersion_gte: String

  """All values containing the given string."""
  testVersion_contains: String

  """All values not containing the given string."""
  testVersion_not_contains: String

  """All values starting with the given string."""
  testVersion_starts_with: String

  """All values not starting with the given string."""
  testVersion_not_starts_with: String

  """All values ending with the given string."""
  testVersion_ends_with: String

  """All values not ending with the given string."""
  testVersion_not_ends_with: String
  metadataId: String

  """All values that are not equal to given value."""
  metadataId_not: String

  """All values that are contained in given list."""
  metadataId_in: [String!]

  """All values that are not contained in given list."""
  metadataId_not_in: [String!]

  """All values less than the given value."""
  metadataId_lt: String

  """All values less than or equal the given value."""
  metadataId_lte: String

  """All values greater than the given value."""
  metadataId_gt: String

  """All values greater than or equal the given value."""
  metadataId_gte: String

  """All values containing the given string."""
  metadataId_contains: String

  """All values not containing the given string."""
  metadataId_not_contains: String

  """All values starting with the given string."""
  metadataId_starts_with: String

  """All values not starting with the given string."""
  metadataId_not_starts_with: String

  """All values ending with the given string."""
  metadataId_ends_with: String

  """All values not ending with the given string."""
  metadataId_not_ends_with: String
  dataPolicy: String

  """All values that are not equal to given value."""
  dataPolicy_not: String

  """All values that are contained in given list."""
  dataPolicy_in: [String!]

  """All values that are not contained in given list."""
  dataPolicy_not_in: [String!]

  """All values less than the given value."""
  dataPolicy_lt: String

  """All values less than or equal the given value."""
  dataPolicy_lte: String

  """All values greater than the given value."""
  dataPolicy_gt: String

  """All values greater than or equal the given value."""
  dataPolicy_gte: String

  """All values containing the given string."""
  dataPolicy_contains: String

  """All values not containing the given string."""
  dataPolicy_not_contains: String

  """All values starting with the given string."""
  dataPolicy_starts_with: String

  """All values not starting with the given string."""
  dataPolicy_not_starts_with: String

  """All values ending with the given string."""
  dataPolicy_ends_with: String

  """All values not ending with the given string."""
  dataPolicy_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  user: ProfileWhereInput
  guest: GuestWhereInput
  study: StudyWhereInput
  template: TemplateWhereInput
  task: TaskWhereInput
  fullResult: ResultWhereInput
}

input SummaryResultWhereUniqueInput {
  id: ID
}

type Tag implements Node {
  id: ID!
  title: String!
  slug: String!
  description: String
  profiles(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  schools(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [School!]
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  classNetworks(where: ClassNetworkWhereInput, orderBy: ClassNetworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassNetwork!]
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  journals(where: JournalWhereInput, orderBy: JournalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Journal!]
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]
  proposals(where: ProposalBoardWhereInput, orderBy: ProposalBoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalBoard!]
  proposalCards(where: ProposalCardWhereInput, orderBy: ProposalCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProposalCard!]
  assignments(where: AssignmentWhereInput, orderBy: AssignmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Assignment!]
  homeworks(where: HomeworkWhereInput, orderBy: HomeworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Homework!]
  scripts(where: ScriptWhereInput, orderBy: ScriptOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Script!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type TagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateManyWithoutAssignmentsInput {
  create: [TagCreateWithoutAssignmentsInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutClassesInput {
  create: [TagCreateWithoutClassesInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutClassNetworksInput {
  create: [TagCreateWithoutClassNetworksInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutHomeworksInput {
  create: [TagCreateWithoutHomeworksInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutJournalsInput {
  create: [TagCreateWithoutJournalsInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutPostsInput {
  create: [TagCreateWithoutPostsInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutProfilesInput {
  create: [TagCreateWithoutProfilesInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutProposalCardsInput {
  create: [TagCreateWithoutProposalCardsInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutProposalsInput {
  create: [TagCreateWithoutProposalsInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutSchoolsInput {
  create: [TagCreateWithoutSchoolsInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutScriptsInput {
  create: [TagCreateWithoutScriptsInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutStudiesInput {
  create: [TagCreateWithoutStudiesInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutTasksInput {
  create: [TagCreateWithoutTasksInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateWithoutAssignmentsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutClassesInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutClassNetworksInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutHomeworksInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutJournalsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutPostsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutProfilesInput {
  id: ID
  title: String!
  slug: String!
  description: String
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutProposalCardsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutProposalsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutSchoolsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutScriptsInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
}

input TagCreateWithoutStudiesInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  tasks: TaskCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

input TagCreateWithoutTasksInput {
  id: ID
  title: String!
  slug: String!
  description: String
  profiles: ProfileCreateManyWithoutTagsInput
  schools: SchoolCreateManyWithoutTagsInput
  classes: ClassCreateManyWithoutTagsInput
  classNetworks: ClassNetworkCreateManyWithoutTagsInput
  studies: StudyCreateManyWithoutTagsInput
  journals: JournalCreateManyWithoutTagsInput
  posts: PostCreateManyWithoutTagsInput
  proposals: ProposalBoardCreateManyWithoutTagsInput
  proposalCards: ProposalCardCreateManyWithoutTagsInput
  assignments: AssignmentCreateManyWithoutTagsInput
  homeworks: HomeworkCreateManyWithoutTagsInput
  scripts: ScriptCreateManyWithoutTagsInput
}

"""An edge in a connection."""
type TagEdge {
  """The item at the end of the edge."""
  node: Tag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TagPreviousValues {
  id: ID!
  title: String!
  slug: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TagScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [TagScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TagWhereInput
}

input TagUpdateInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateManyDataInput {
  title: String
  slug: String
  description: String
}

input TagUpdateManyMutationInput {
  title: String
  slug: String
  description: String
}

input TagUpdateManyWithoutAssignmentsInput {
  create: [TagCreateWithoutAssignmentsInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutAssignmentsInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutAssignmentsInput!]
}

input TagUpdateManyWithoutClassesInput {
  create: [TagCreateWithoutClassesInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutClassesInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutClassesInput!]
}

input TagUpdateManyWithoutClassNetworksInput {
  create: [TagCreateWithoutClassNetworksInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutClassNetworksInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutClassNetworksInput!]
}

input TagUpdateManyWithoutHomeworksInput {
  create: [TagCreateWithoutHomeworksInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutHomeworksInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutHomeworksInput!]
}

input TagUpdateManyWithoutJournalsInput {
  create: [TagCreateWithoutJournalsInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutJournalsInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutJournalsInput!]
}

input TagUpdateManyWithoutPostsInput {
  create: [TagCreateWithoutPostsInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutPostsInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutPostsInput!]
}

input TagUpdateManyWithoutProfilesInput {
  create: [TagCreateWithoutProfilesInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutProfilesInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutProfilesInput!]
}

input TagUpdateManyWithoutProposalCardsInput {
  create: [TagCreateWithoutProposalCardsInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutProposalCardsInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutProposalCardsInput!]
}

input TagUpdateManyWithoutProposalsInput {
  create: [TagCreateWithoutProposalsInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutProposalsInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutProposalsInput!]
}

input TagUpdateManyWithoutSchoolsInput {
  create: [TagCreateWithoutSchoolsInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutSchoolsInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutSchoolsInput!]
}

input TagUpdateManyWithoutScriptsInput {
  create: [TagCreateWithoutScriptsInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutScriptsInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutScriptsInput!]
}

input TagUpdateManyWithoutStudiesInput {
  create: [TagCreateWithoutStudiesInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutStudiesInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutStudiesInput!]
}

input TagUpdateManyWithoutTasksInput {
  create: [TagCreateWithoutTasksInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutTasksInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutTasksInput!]
}

input TagUpdateManyWithWhereNestedInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyDataInput!
}

input TagUpdateWithoutAssignmentsDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutClassesDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutClassNetworksDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutHomeworksDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutJournalsDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutPostsDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutProfilesDataInput {
  title: String
  slug: String
  description: String
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutProposalCardsDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutProposalsDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutSchoolsDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutScriptsDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
}

input TagUpdateWithoutStudiesDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  tasks: TaskUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithoutTasksDataInput {
  title: String
  slug: String
  description: String
  profiles: ProfileUpdateManyWithoutTagsInput
  schools: SchoolUpdateManyWithoutTagsInput
  classes: ClassUpdateManyWithoutTagsInput
  classNetworks: ClassNetworkUpdateManyWithoutTagsInput
  studies: StudyUpdateManyWithoutTagsInput
  journals: JournalUpdateManyWithoutTagsInput
  posts: PostUpdateManyWithoutTagsInput
  proposals: ProposalBoardUpdateManyWithoutTagsInput
  proposalCards: ProposalCardUpdateManyWithoutTagsInput
  assignments: AssignmentUpdateManyWithoutTagsInput
  homeworks: HomeworkUpdateManyWithoutTagsInput
  scripts: ScriptUpdateManyWithoutTagsInput
}

input TagUpdateWithWhereUniqueWithoutAssignmentsInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutAssignmentsDataInput!
}

input TagUpdateWithWhereUniqueWithoutClassesInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutClassesDataInput!
}

input TagUpdateWithWhereUniqueWithoutClassNetworksInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutClassNetworksDataInput!
}

input TagUpdateWithWhereUniqueWithoutHomeworksInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutHomeworksDataInput!
}

input TagUpdateWithWhereUniqueWithoutJournalsInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutJournalsDataInput!
}

input TagUpdateWithWhereUniqueWithoutPostsInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutPostsDataInput!
}

input TagUpdateWithWhereUniqueWithoutProfilesInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutProfilesDataInput!
}

input TagUpdateWithWhereUniqueWithoutProposalCardsInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutProposalCardsDataInput!
}

input TagUpdateWithWhereUniqueWithoutProposalsInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutProposalsDataInput!
}

input TagUpdateWithWhereUniqueWithoutSchoolsInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutSchoolsDataInput!
}

input TagUpdateWithWhereUniqueWithoutScriptsInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutScriptsDataInput!
}

input TagUpdateWithWhereUniqueWithoutStudiesInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutStudiesDataInput!
}

input TagUpdateWithWhereUniqueWithoutTasksInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutTasksDataInput!
}

input TagUpsertWithWhereUniqueWithoutAssignmentsInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutAssignmentsDataInput!
  create: TagCreateWithoutAssignmentsInput!
}

input TagUpsertWithWhereUniqueWithoutClassesInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutClassesDataInput!
  create: TagCreateWithoutClassesInput!
}

input TagUpsertWithWhereUniqueWithoutClassNetworksInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutClassNetworksDataInput!
  create: TagCreateWithoutClassNetworksInput!
}

input TagUpsertWithWhereUniqueWithoutHomeworksInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutHomeworksDataInput!
  create: TagCreateWithoutHomeworksInput!
}

input TagUpsertWithWhereUniqueWithoutJournalsInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutJournalsDataInput!
  create: TagCreateWithoutJournalsInput!
}

input TagUpsertWithWhereUniqueWithoutPostsInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutPostsDataInput!
  create: TagCreateWithoutPostsInput!
}

input TagUpsertWithWhereUniqueWithoutProfilesInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutProfilesDataInput!
  create: TagCreateWithoutProfilesInput!
}

input TagUpsertWithWhereUniqueWithoutProposalCardsInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutProposalCardsDataInput!
  create: TagCreateWithoutProposalCardsInput!
}

input TagUpsertWithWhereUniqueWithoutProposalsInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutProposalsDataInput!
  create: TagCreateWithoutProposalsInput!
}

input TagUpsertWithWhereUniqueWithoutSchoolsInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutSchoolsDataInput!
  create: TagCreateWithoutSchoolsInput!
}

input TagUpsertWithWhereUniqueWithoutScriptsInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutScriptsDataInput!
  create: TagCreateWithoutScriptsInput!
}

input TagUpsertWithWhereUniqueWithoutStudiesInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutStudiesDataInput!
  create: TagCreateWithoutStudiesInput!
}

input TagUpsertWithWhereUniqueWithoutTasksInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutTasksDataInput!
  create: TagCreateWithoutTasksInput!
}

input TagWhereInput {
  """Logical AND on all given filters."""
  AND: [TagWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  profiles_every: ProfileWhereInput
  profiles_some: ProfileWhereInput
  profiles_none: ProfileWhereInput
  schools_every: SchoolWhereInput
  schools_some: SchoolWhereInput
  schools_none: SchoolWhereInput
  classes_every: ClassWhereInput
  classes_some: ClassWhereInput
  classes_none: ClassWhereInput
  classNetworks_every: ClassNetworkWhereInput
  classNetworks_some: ClassNetworkWhereInput
  classNetworks_none: ClassNetworkWhereInput
  studies_every: StudyWhereInput
  studies_some: StudyWhereInput
  studies_none: StudyWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
  journals_every: JournalWhereInput
  journals_some: JournalWhereInput
  journals_none: JournalWhereInput
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
  proposals_every: ProposalBoardWhereInput
  proposals_some: ProposalBoardWhereInput
  proposals_none: ProposalBoardWhereInput
  proposalCards_every: ProposalCardWhereInput
  proposalCards_some: ProposalCardWhereInput
  proposalCards_none: ProposalCardWhereInput
  assignments_every: AssignmentWhereInput
  assignments_some: AssignmentWhereInput
  assignments_none: AssignmentWhereInput
  homeworks_every: HomeworkWhereInput
  homeworks_some: HomeworkWhereInput
  homeworks_none: HomeworkWhereInput
  scripts_every: ScriptWhereInput
  scripts_some: ScriptWhereInput
  scripts_none: ScriptWhereInput
}

input TagWhereUniqueInput {
  id: ID
  slug: String
}

type Talk implements Node {
  id: ID!
  author: Profile
  members(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  words(where: WordWhereInput, orderBy: WordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Word!]
  settings: Json
  studies(where: StudyWhereInput, orderBy: StudyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Study!]
  classes(where: ClassWhereInput, orderBy: ClassOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Class!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type TalkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TalkEdge]!
  aggregate: AggregateTalk!
}

input TalkCreateInput {
  id: ID
  settings: Json
  author: ProfileCreateOneWithoutAuthorOfTalkInput
  members: ProfileCreateManyWithoutMemberOfTalkInput
  words: WordCreateManyWithoutTalkInput
  studies: StudyCreateManyWithoutTalksInput
  classes: ClassCreateManyWithoutTalksInput
}

input TalkCreateManyWithoutAuthorInput {
  create: [TalkCreateWithoutAuthorInput!]
  connect: [TalkWhereUniqueInput!]
}

input TalkCreateManyWithoutClassesInput {
  create: [TalkCreateWithoutClassesInput!]
  connect: [TalkWhereUniqueInput!]
}

input TalkCreateManyWithoutMembersInput {
  create: [TalkCreateWithoutMembersInput!]
  connect: [TalkWhereUniqueInput!]
}

input TalkCreateManyWithoutStudiesInput {
  create: [TalkCreateWithoutStudiesInput!]
  connect: [TalkWhereUniqueInput!]
}

input TalkCreateOneWithoutWordsInput {
  create: TalkCreateWithoutWordsInput
  connect: TalkWhereUniqueInput
}

input TalkCreateWithoutAuthorInput {
  id: ID
  settings: Json
  members: ProfileCreateManyWithoutMemberOfTalkInput
  words: WordCreateManyWithoutTalkInput
  studies: StudyCreateManyWithoutTalksInput
  classes: ClassCreateManyWithoutTalksInput
}

input TalkCreateWithoutClassesInput {
  id: ID
  settings: Json
  author: ProfileCreateOneWithoutAuthorOfTalkInput
  members: ProfileCreateManyWithoutMemberOfTalkInput
  words: WordCreateManyWithoutTalkInput
  studies: StudyCreateManyWithoutTalksInput
}

input TalkCreateWithoutMembersInput {
  id: ID
  settings: Json
  author: ProfileCreateOneWithoutAuthorOfTalkInput
  words: WordCreateManyWithoutTalkInput
  studies: StudyCreateManyWithoutTalksInput
  classes: ClassCreateManyWithoutTalksInput
}

input TalkCreateWithoutStudiesInput {
  id: ID
  settings: Json
  author: ProfileCreateOneWithoutAuthorOfTalkInput
  members: ProfileCreateManyWithoutMemberOfTalkInput
  words: WordCreateManyWithoutTalkInput
  classes: ClassCreateManyWithoutTalksInput
}

input TalkCreateWithoutWordsInput {
  id: ID
  settings: Json
  author: ProfileCreateOneWithoutAuthorOfTalkInput
  members: ProfileCreateManyWithoutMemberOfTalkInput
  studies: StudyCreateManyWithoutTalksInput
  classes: ClassCreateManyWithoutTalksInput
}

"""An edge in a connection."""
type TalkEdge {
  """The item at the end of the edge."""
  node: Talk!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TalkOrderByInput {
  id_ASC
  id_DESC
  settings_ASC
  settings_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TalkPreviousValues {
  id: ID!
  settings: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TalkScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [TalkScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TalkScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TalkScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type TalkSubscriptionPayload {
  mutation: MutationType!
  node: Talk
  updatedFields: [String!]
  previousValues: TalkPreviousValues
}

input TalkSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TalkSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TalkSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TalkSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TalkWhereInput
}

input TalkUpdateInput {
  settings: Json
  author: ProfileUpdateOneWithoutAuthorOfTalkInput
  members: ProfileUpdateManyWithoutMemberOfTalkInput
  words: WordUpdateManyWithoutTalkInput
  studies: StudyUpdateManyWithoutTalksInput
  classes: ClassUpdateManyWithoutTalksInput
}

input TalkUpdateManyDataInput {
  settings: Json
}

input TalkUpdateManyMutationInput {
  settings: Json
}

input TalkUpdateManyWithoutAuthorInput {
  create: [TalkCreateWithoutAuthorInput!]
  connect: [TalkWhereUniqueInput!]
  set: [TalkWhereUniqueInput!]
  disconnect: [TalkWhereUniqueInput!]
  delete: [TalkWhereUniqueInput!]
  update: [TalkUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [TalkUpdateManyWithWhereNestedInput!]
  deleteMany: [TalkScalarWhereInput!]
  upsert: [TalkUpsertWithWhereUniqueWithoutAuthorInput!]
}

input TalkUpdateManyWithoutClassesInput {
  create: [TalkCreateWithoutClassesInput!]
  connect: [TalkWhereUniqueInput!]
  set: [TalkWhereUniqueInput!]
  disconnect: [TalkWhereUniqueInput!]
  delete: [TalkWhereUniqueInput!]
  update: [TalkUpdateWithWhereUniqueWithoutClassesInput!]
  updateMany: [TalkUpdateManyWithWhereNestedInput!]
  deleteMany: [TalkScalarWhereInput!]
  upsert: [TalkUpsertWithWhereUniqueWithoutClassesInput!]
}

input TalkUpdateManyWithoutMembersInput {
  create: [TalkCreateWithoutMembersInput!]
  connect: [TalkWhereUniqueInput!]
  set: [TalkWhereUniqueInput!]
  disconnect: [TalkWhereUniqueInput!]
  delete: [TalkWhereUniqueInput!]
  update: [TalkUpdateWithWhereUniqueWithoutMembersInput!]
  updateMany: [TalkUpdateManyWithWhereNestedInput!]
  deleteMany: [TalkScalarWhereInput!]
  upsert: [TalkUpsertWithWhereUniqueWithoutMembersInput!]
}

input TalkUpdateManyWithoutStudiesInput {
  create: [TalkCreateWithoutStudiesInput!]
  connect: [TalkWhereUniqueInput!]
  set: [TalkWhereUniqueInput!]
  disconnect: [TalkWhereUniqueInput!]
  delete: [TalkWhereUniqueInput!]
  update: [TalkUpdateWithWhereUniqueWithoutStudiesInput!]
  updateMany: [TalkUpdateManyWithWhereNestedInput!]
  deleteMany: [TalkScalarWhereInput!]
  upsert: [TalkUpsertWithWhereUniqueWithoutStudiesInput!]
}

input TalkUpdateManyWithWhereNestedInput {
  where: TalkScalarWhereInput!
  data: TalkUpdateManyDataInput!
}

input TalkUpdateOneRequiredWithoutWordsInput {
  create: TalkCreateWithoutWordsInput
  connect: TalkWhereUniqueInput
  update: TalkUpdateWithoutWordsDataInput
  upsert: TalkUpsertWithoutWordsInput
}

input TalkUpdateWithoutAuthorDataInput {
  settings: Json
  members: ProfileUpdateManyWithoutMemberOfTalkInput
  words: WordUpdateManyWithoutTalkInput
  studies: StudyUpdateManyWithoutTalksInput
  classes: ClassUpdateManyWithoutTalksInput
}

input TalkUpdateWithoutClassesDataInput {
  settings: Json
  author: ProfileUpdateOneWithoutAuthorOfTalkInput
  members: ProfileUpdateManyWithoutMemberOfTalkInput
  words: WordUpdateManyWithoutTalkInput
  studies: StudyUpdateManyWithoutTalksInput
}

input TalkUpdateWithoutMembersDataInput {
  settings: Json
  author: ProfileUpdateOneWithoutAuthorOfTalkInput
  words: WordUpdateManyWithoutTalkInput
  studies: StudyUpdateManyWithoutTalksInput
  classes: ClassUpdateManyWithoutTalksInput
}

input TalkUpdateWithoutStudiesDataInput {
  settings: Json
  author: ProfileUpdateOneWithoutAuthorOfTalkInput
  members: ProfileUpdateManyWithoutMemberOfTalkInput
  words: WordUpdateManyWithoutTalkInput
  classes: ClassUpdateManyWithoutTalksInput
}

input TalkUpdateWithoutWordsDataInput {
  settings: Json
  author: ProfileUpdateOneWithoutAuthorOfTalkInput
  members: ProfileUpdateManyWithoutMemberOfTalkInput
  studies: StudyUpdateManyWithoutTalksInput
  classes: ClassUpdateManyWithoutTalksInput
}

input TalkUpdateWithWhereUniqueWithoutAuthorInput {
  where: TalkWhereUniqueInput!
  data: TalkUpdateWithoutAuthorDataInput!
}

input TalkUpdateWithWhereUniqueWithoutClassesInput {
  where: TalkWhereUniqueInput!
  data: TalkUpdateWithoutClassesDataInput!
}

input TalkUpdateWithWhereUniqueWithoutMembersInput {
  where: TalkWhereUniqueInput!
  data: TalkUpdateWithoutMembersDataInput!
}

input TalkUpdateWithWhereUniqueWithoutStudiesInput {
  where: TalkWhereUniqueInput!
  data: TalkUpdateWithoutStudiesDataInput!
}

input TalkUpsertWithoutWordsInput {
  update: TalkUpdateWithoutWordsDataInput!
  create: TalkCreateWithoutWordsInput!
}

input TalkUpsertWithWhereUniqueWithoutAuthorInput {
  where: TalkWhereUniqueInput!
  update: TalkUpdateWithoutAuthorDataInput!
  create: TalkCreateWithoutAuthorInput!
}

input TalkUpsertWithWhereUniqueWithoutClassesInput {
  where: TalkWhereUniqueInput!
  update: TalkUpdateWithoutClassesDataInput!
  create: TalkCreateWithoutClassesInput!
}

input TalkUpsertWithWhereUniqueWithoutMembersInput {
  where: TalkWhereUniqueInput!
  update: TalkUpdateWithoutMembersDataInput!
  create: TalkCreateWithoutMembersInput!
}

input TalkUpsertWithWhereUniqueWithoutStudiesInput {
  where: TalkWhereUniqueInput!
  update: TalkUpdateWithoutStudiesDataInput!
  create: TalkCreateWithoutStudiesInput!
}

input TalkWhereInput {
  """Logical AND on all given filters."""
  AND: [TalkWhereInput!]

  """Logical OR on all given filters."""
  OR: [TalkWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TalkWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  members_every: ProfileWhereInput
  members_some: ProfileWhereInput
  members_none: ProfileWhereInput
  words_every: WordWhereInput
  words_some: WordWhereInput
  words_none: WordWhereInput
  studies_every: StudyWhereInput
  studies_some: StudyWhereInput
  studies_none: StudyWhereInput
  classes_every: ClassWhereInput
  classes_some: ClassWhereInput
  classes_none: ClassWhereInput
}

input TalkWhereUniqueInput {
  id: ID
}

type Task implements Node {
  id: ID!
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  template: Template
  author: Profile!
  parameters: Json
  settings: Json
  link: String
  createdAt: DateTime!
  updatedAt: DateTime!
  collaborators(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]
  consent: Consent
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  image: String
  largeImage: String
}

"""A connection to a list of items."""
type TaskConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TaskEdge]!
  aggregate: AggregateTask!
}

input TaskCreateInput {
  id: ID
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateCreateOneWithoutTasksInput
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  consent: ConsentCreateOneWithoutTasksInput
  tags: TagCreateManyWithoutTasksInput
}

input TaskCreateManyInput {
  create: [TaskCreateInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutAuthorInput {
  create: [TaskCreateWithoutAuthorInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutCollaboratorsInput {
  create: [TaskCreateWithoutCollaboratorsInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutConsentInput {
  create: [TaskCreateWithoutConsentInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutTagsInput {
  create: [TaskCreateWithoutTagsInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutTemplateInput {
  create: [TaskCreateWithoutTemplateInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateOneInput {
  create: TaskCreateInput
  connect: TaskWhereUniqueInput
}

input TaskCreateWithoutAuthorInput {
  id: ID
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateCreateOneWithoutTasksInput
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  consent: ConsentCreateOneWithoutTasksInput
  tags: TagCreateManyWithoutTasksInput
}

input TaskCreateWithoutCollaboratorsInput {
  id: ID
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateCreateOneWithoutTasksInput
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  consent: ConsentCreateOneWithoutTasksInput
  tags: TagCreateManyWithoutTasksInput
}

input TaskCreateWithoutConsentInput {
  id: ID
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateCreateOneWithoutTasksInput
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  tags: TagCreateManyWithoutTasksInput
}

input TaskCreateWithoutTagsInput {
  id: ID
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateCreateOneWithoutTasksInput
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  consent: ConsentCreateOneWithoutTasksInput
}

input TaskCreateWithoutTemplateInput {
  id: ID
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  author: ProfileCreateOneWithoutTaskCreatorInInput!
  collaborators: ProfileCreateManyWithoutCollaboratorInTaskInput
  consent: ConsentCreateOneWithoutTasksInput
  tags: TagCreateManyWithoutTasksInput
}

"""An edge in a connection."""
type TaskEdge {
  """The item at the end of the edge."""
  node: Task!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TaskOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  subtitle_ASC
  subtitle_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  descriptionForParticipants_ASC
  descriptionForParticipants_DESC
  parameters_ASC
  parameters_DESC
  settings_ASC
  settings_DESC
  link_ASC
  link_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  public_ASC
  public_DESC
  submitForPublishing_ASC
  submitForPublishing_DESC
  taskType_ASC
  taskType_DESC
  isOriginal_ASC
  isOriginal_DESC
  isExternal_ASC
  isExternal_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
}

type TaskPreviousValues {
  id: ID!
  title: String!
  subtitle: String
  slug: String!
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  createdAt: DateTime!
  updatedAt: DateTime!
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
}

input TaskScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [TaskScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TaskScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TaskScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  descriptionForParticipants: String

  """All values that are not equal to given value."""
  descriptionForParticipants_not: String

  """All values that are contained in given list."""
  descriptionForParticipants_in: [String!]

  """All values that are not contained in given list."""
  descriptionForParticipants_not_in: [String!]

  """All values less than the given value."""
  descriptionForParticipants_lt: String

  """All values less than or equal the given value."""
  descriptionForParticipants_lte: String

  """All values greater than the given value."""
  descriptionForParticipants_gt: String

  """All values greater than or equal the given value."""
  descriptionForParticipants_gte: String

  """All values containing the given string."""
  descriptionForParticipants_contains: String

  """All values not containing the given string."""
  descriptionForParticipants_not_contains: String

  """All values starting with the given string."""
  descriptionForParticipants_starts_with: String

  """All values not starting with the given string."""
  descriptionForParticipants_not_starts_with: String

  """All values ending with the given string."""
  descriptionForParticipants_ends_with: String

  """All values not ending with the given string."""
  descriptionForParticipants_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  submitForPublishing: Boolean

  """All values that are not equal to given value."""
  submitForPublishing_not: Boolean
  taskType: TaskType

  """All values that are not equal to given value."""
  taskType_not: TaskType

  """All values that are contained in given list."""
  taskType_in: [TaskType!]

  """All values that are not contained in given list."""
  taskType_not_in: [TaskType!]
  isOriginal: Boolean

  """All values that are not equal to given value."""
  isOriginal_not: Boolean
  isExternal: Boolean

  """All values that are not equal to given value."""
  isExternal_not: Boolean
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
}

type TaskSubscriptionPayload {
  mutation: MutationType!
  node: Task
  updatedFields: [String!]
  previousValues: TaskPreviousValues
}

input TaskSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TaskSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TaskSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TaskSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TaskWhereInput
}

enum TaskType {
  TASK
  SURVEY
  BLOCK
}

input TaskUpdateDataInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
  tags: TagUpdateManyWithoutTasksInput
}

input TaskUpdateInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
  tags: TagUpdateManyWithoutTasksInput
}

input TaskUpdateManyDataInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
}

input TaskUpdateManyInput {
  create: [TaskCreateInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueNestedInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueNestedInput!]
}

input TaskUpdateManyMutationInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
}

input TaskUpdateManyWithoutAuthorInput {
  create: [TaskCreateWithoutAuthorInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutAuthorInput!]
}

input TaskUpdateManyWithoutCollaboratorsInput {
  create: [TaskCreateWithoutCollaboratorsInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutCollaboratorsInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutCollaboratorsInput!]
}

input TaskUpdateManyWithoutConsentInput {
  create: [TaskCreateWithoutConsentInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutConsentInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutConsentInput!]
}

input TaskUpdateManyWithoutTagsInput {
  create: [TaskCreateWithoutTagsInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutTagsInput!]
}

input TaskUpdateManyWithoutTemplateInput {
  create: [TaskCreateWithoutTemplateInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  delete: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutTemplateInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  deleteMany: [TaskScalarWhereInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutTemplateInput!]
}

input TaskUpdateManyWithWhereNestedInput {
  where: TaskScalarWhereInput!
  data: TaskUpdateManyDataInput!
}

input TaskUpdateOneRequiredInput {
  create: TaskCreateInput
  connect: TaskWhereUniqueInput
  update: TaskUpdateDataInput
  upsert: TaskUpsertNestedInput
}

input TaskUpdateWithoutAuthorDataInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateUpdateOneWithoutTasksInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
  tags: TagUpdateManyWithoutTasksInput
}

input TaskUpdateWithoutCollaboratorsDataInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  consent: ConsentUpdateOneWithoutTasksInput
  tags: TagUpdateManyWithoutTasksInput
}

input TaskUpdateWithoutConsentDataInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  tags: TagUpdateManyWithoutTasksInput
}

input TaskUpdateWithoutTagsDataInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  template: TemplateUpdateOneWithoutTasksInput
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
}

input TaskUpdateWithoutTemplateDataInput {
  title: String
  subtitle: String
  slug: String
  description: String
  descriptionForParticipants: String
  parameters: Json
  settings: Json
  link: String
  public: Boolean
  submitForPublishing: Boolean
  taskType: TaskType
  isOriginal: Boolean
  isExternal: Boolean
  image: String
  largeImage: String
  author: ProfileUpdateOneRequiredWithoutTaskCreatorInInput
  collaborators: ProfileUpdateManyWithoutCollaboratorInTaskInput
  consent: ConsentUpdateOneWithoutTasksInput
  tags: TagUpdateManyWithoutTasksInput
}

input TaskUpdateWithWhereUniqueNestedInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateDataInput!
}

input TaskUpdateWithWhereUniqueWithoutAuthorInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutAuthorDataInput!
}

input TaskUpdateWithWhereUniqueWithoutCollaboratorsInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutCollaboratorsDataInput!
}

input TaskUpdateWithWhereUniqueWithoutConsentInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutConsentDataInput!
}

input TaskUpdateWithWhereUniqueWithoutTagsInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutTagsDataInput!
}

input TaskUpdateWithWhereUniqueWithoutTemplateInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutTemplateDataInput!
}

input TaskUpsertNestedInput {
  update: TaskUpdateDataInput!
  create: TaskCreateInput!
}

input TaskUpsertWithWhereUniqueNestedInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateDataInput!
  create: TaskCreateInput!
}

input TaskUpsertWithWhereUniqueWithoutAuthorInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutAuthorDataInput!
  create: TaskCreateWithoutAuthorInput!
}

input TaskUpsertWithWhereUniqueWithoutCollaboratorsInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutCollaboratorsDataInput!
  create: TaskCreateWithoutCollaboratorsInput!
}

input TaskUpsertWithWhereUniqueWithoutConsentInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutConsentDataInput!
  create: TaskCreateWithoutConsentInput!
}

input TaskUpsertWithWhereUniqueWithoutTagsInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutTagsDataInput!
  create: TaskCreateWithoutTagsInput!
}

input TaskUpsertWithWhereUniqueWithoutTemplateInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutTemplateDataInput!
  create: TaskCreateWithoutTemplateInput!
}

input TaskWhereInput {
  """Logical AND on all given filters."""
  AND: [TaskWhereInput!]

  """Logical OR on all given filters."""
  OR: [TaskWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TaskWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  descriptionForParticipants: String

  """All values that are not equal to given value."""
  descriptionForParticipants_not: String

  """All values that are contained in given list."""
  descriptionForParticipants_in: [String!]

  """All values that are not contained in given list."""
  descriptionForParticipants_not_in: [String!]

  """All values less than the given value."""
  descriptionForParticipants_lt: String

  """All values less than or equal the given value."""
  descriptionForParticipants_lte: String

  """All values greater than the given value."""
  descriptionForParticipants_gt: String

  """All values greater than or equal the given value."""
  descriptionForParticipants_gte: String

  """All values containing the given string."""
  descriptionForParticipants_contains: String

  """All values not containing the given string."""
  descriptionForParticipants_not_contains: String

  """All values starting with the given string."""
  descriptionForParticipants_starts_with: String

  """All values not starting with the given string."""
  descriptionForParticipants_not_starts_with: String

  """All values ending with the given string."""
  descriptionForParticipants_ends_with: String

  """All values not ending with the given string."""
  descriptionForParticipants_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  public: Boolean

  """All values that are not equal to given value."""
  public_not: Boolean
  submitForPublishing: Boolean

  """All values that are not equal to given value."""
  submitForPublishing_not: Boolean
  taskType: TaskType

  """All values that are not equal to given value."""
  taskType_not: TaskType

  """All values that are contained in given list."""
  taskType_in: [TaskType!]

  """All values that are not contained in given list."""
  taskType_not_in: [TaskType!]
  isOriginal: Boolean

  """All values that are not equal to given value."""
  isOriginal_not: Boolean
  isExternal: Boolean

  """All values that are not equal to given value."""
  isExternal_not: Boolean
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  template: TemplateWhereInput
  author: ProfileWhereInput
  collaborators_every: ProfileWhereInput
  collaborators_some: ProfileWhereInput
  collaborators_none: ProfileWhereInput
  consent: ConsentWhereInput
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
}

input TaskWhereUniqueInput {
  id: ID
  slug: String
}

type Template implements Node {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  author: Profile!
  parameters: Json
  script: String
  style: String
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  settings: Json
  file: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type TemplateConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TemplateEdge]!
  aggregate: AggregateTemplate!
}

input TemplateCreateInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  file: String
  author: ProfileCreateOneInput!
  tasks: TaskCreateManyWithoutTemplateInput
}

input TemplateCreateOneInput {
  create: TemplateCreateInput
  connect: TemplateWhereUniqueInput
}

input TemplateCreateOneWithoutTasksInput {
  create: TemplateCreateWithoutTasksInput
  connect: TemplateWhereUniqueInput
}

input TemplateCreateWithoutTasksInput {
  id: ID
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  file: String
  author: ProfileCreateOneInput!
}

"""An edge in a connection."""
type TemplateEdge {
  """The item at the end of the edge."""
  node: Template!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TemplateOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  shortDescription_ASC
  shortDescription_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  parameters_ASC
  parameters_DESC
  script_ASC
  script_DESC
  style_ASC
  style_DESC
  settings_ASC
  settings_DESC
  file_ASC
  file_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TemplatePreviousValues {
  id: ID!
  title: String!
  slug: String!
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  file: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TemplateSubscriptionPayload {
  mutation: MutationType!
  node: Template
  updatedFields: [String!]
  previousValues: TemplatePreviousValues
}

input TemplateSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TemplateSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TemplateSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TemplateSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TemplateWhereInput
}

input TemplateUpdateDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  file: String
  author: ProfileUpdateOneRequiredInput
  tasks: TaskUpdateManyWithoutTemplateInput
}

input TemplateUpdateInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  file: String
  author: ProfileUpdateOneRequiredInput
  tasks: TaskUpdateManyWithoutTemplateInput
}

input TemplateUpdateManyMutationInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  file: String
}

input TemplateUpdateOneInput {
  create: TemplateCreateInput
  connect: TemplateWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: TemplateUpdateDataInput
  upsert: TemplateUpsertNestedInput
}

input TemplateUpdateOneWithoutTasksInput {
  create: TemplateCreateWithoutTasksInput
  connect: TemplateWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: TemplateUpdateWithoutTasksDataInput
  upsert: TemplateUpsertWithoutTasksInput
}

input TemplateUpdateWithoutTasksDataInput {
  title: String
  slug: String
  shortDescription: String
  description: String
  image: String
  largeImage: String
  parameters: Json
  script: String
  style: String
  settings: Json
  file: String
  author: ProfileUpdateOneRequiredInput
}

input TemplateUpsertNestedInput {
  update: TemplateUpdateDataInput!
  create: TemplateCreateInput!
}

input TemplateUpsertWithoutTasksInput {
  update: TemplateUpdateWithoutTasksDataInput!
  create: TemplateCreateWithoutTasksInput!
}

input TemplateWhereInput {
  """Logical AND on all given filters."""
  AND: [TemplateWhereInput!]

  """Logical OR on all given filters."""
  OR: [TemplateWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TemplateWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  shortDescription: String

  """All values that are not equal to given value."""
  shortDescription_not: String

  """All values that are contained in given list."""
  shortDescription_in: [String!]

  """All values that are not contained in given list."""
  shortDescription_not_in: [String!]

  """All values less than the given value."""
  shortDescription_lt: String

  """All values less than or equal the given value."""
  shortDescription_lte: String

  """All values greater than the given value."""
  shortDescription_gt: String

  """All values greater than or equal the given value."""
  shortDescription_gte: String

  """All values containing the given string."""
  shortDescription_contains: String

  """All values not containing the given string."""
  shortDescription_not_contains: String

  """All values starting with the given string."""
  shortDescription_starts_with: String

  """All values not starting with the given string."""
  shortDescription_not_starts_with: String

  """All values ending with the given string."""
  shortDescription_ends_with: String

  """All values not ending with the given string."""
  shortDescription_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  script: String

  """All values that are not equal to given value."""
  script_not: String

  """All values that are contained in given list."""
  script_in: [String!]

  """All values that are not contained in given list."""
  script_not_in: [String!]

  """All values less than the given value."""
  script_lt: String

  """All values less than or equal the given value."""
  script_lte: String

  """All values greater than the given value."""
  script_gt: String

  """All values greater than or equal the given value."""
  script_gte: String

  """All values containing the given string."""
  script_contains: String

  """All values not containing the given string."""
  script_not_contains: String

  """All values starting with the given string."""
  script_starts_with: String

  """All values not starting with the given string."""
  script_not_starts_with: String

  """All values ending with the given string."""
  script_ends_with: String

  """All values not ending with the given string."""
  script_not_ends_with: String
  style: String

  """All values that are not equal to given value."""
  style_not: String

  """All values that are contained in given list."""
  style_in: [String!]

  """All values that are not contained in given list."""
  style_not_in: [String!]

  """All values less than the given value."""
  style_lt: String

  """All values less than or equal the given value."""
  style_lte: String

  """All values greater than the given value."""
  style_gt: String

  """All values greater than or equal the given value."""
  style_gte: String

  """All values containing the given string."""
  style_contains: String

  """All values not containing the given string."""
  style_not_contains: String

  """All values starting with the given string."""
  style_starts_with: String

  """All values not starting with the given string."""
  style_not_starts_with: String

  """All values ending with the given string."""
  style_ends_with: String

  """All values not ending with the given string."""
  style_not_ends_with: String
  file: String

  """All values that are not equal to given value."""
  file_not: String

  """All values that are contained in given list."""
  file_in: [String!]

  """All values that are not contained in given list."""
  file_not_in: [String!]

  """All values less than the given value."""
  file_lt: String

  """All values less than or equal the given value."""
  file_lte: String

  """All values greater than the given value."""
  file_gt: String

  """All values greater than or equal the given value."""
  file_gte: String

  """All values containing the given string."""
  file_contains: String

  """All values not containing the given string."""
  file_not_contains: String

  """All values starting with the given string."""
  file_starts_with: String

  """All values not starting with the given string."""
  file_not_starts_with: String

  """All values ending with the given string."""
  file_ends_with: String

  """All values not ending with the given string."""
  file_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
}

input TemplateWhereUniqueInput {
  id: ID
  slug: String
}

type Update implements Node {
  id: ID!
  user: Profile!
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type UpdateConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UpdateEdge]!
  aggregate: AggregateUpdate!
}

input UpdateCreateInput {
  id: ID
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
  user: ProfileCreateOneWithoutUpdatesInput!
}

input UpdateCreateManyWithoutUserInput {
  create: [UpdateCreateWithoutUserInput!]
  connect: [UpdateWhereUniqueInput!]
}

input UpdateCreateWithoutUserInput {
  id: ID
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
}

"""An edge in a connection."""
type UpdateEdge {
  """The item at the end of the edge."""
  node: Update!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UpdateOrderByInput {
  id_ASC
  id_DESC
  updateArea_ASC
  updateArea_DESC
  link_ASC
  link_DESC
  content_ASC
  content_DESC
  hasOpen_ASC
  hasOpen_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UpdatePreviousValues {
  id: ID!
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UpdateScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [UpdateScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [UpdateScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UpdateScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updateArea: String

  """All values that are not equal to given value."""
  updateArea_not: String

  """All values that are contained in given list."""
  updateArea_in: [String!]

  """All values that are not contained in given list."""
  updateArea_not_in: [String!]

  """All values less than the given value."""
  updateArea_lt: String

  """All values less than or equal the given value."""
  updateArea_lte: String

  """All values greater than the given value."""
  updateArea_gt: String

  """All values greater than or equal the given value."""
  updateArea_gte: String

  """All values containing the given string."""
  updateArea_contains: String

  """All values not containing the given string."""
  updateArea_not_contains: String

  """All values starting with the given string."""
  updateArea_starts_with: String

  """All values not starting with the given string."""
  updateArea_not_starts_with: String

  """All values ending with the given string."""
  updateArea_ends_with: String

  """All values not ending with the given string."""
  updateArea_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  hasOpen: Boolean

  """All values that are not equal to given value."""
  hasOpen_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type UpdateSubscriptionPayload {
  mutation: MutationType!
  node: Update
  updatedFields: [String!]
  previousValues: UpdatePreviousValues
}

input UpdateSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UpdateSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UpdateSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UpdateSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UpdateWhereInput
}

input UpdateUpdateInput {
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
  user: ProfileUpdateOneRequiredWithoutUpdatesInput
}

input UpdateUpdateManyDataInput {
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
}

input UpdateUpdateManyMutationInput {
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
}

input UpdateUpdateManyWithoutUserInput {
  create: [UpdateCreateWithoutUserInput!]
  connect: [UpdateWhereUniqueInput!]
  set: [UpdateWhereUniqueInput!]
  disconnect: [UpdateWhereUniqueInput!]
  delete: [UpdateWhereUniqueInput!]
  update: [UpdateUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UpdateUpdateManyWithWhereNestedInput!]
  deleteMany: [UpdateScalarWhereInput!]
  upsert: [UpdateUpsertWithWhereUniqueWithoutUserInput!]
}

input UpdateUpdateManyWithWhereNestedInput {
  where: UpdateScalarWhereInput!
  data: UpdateUpdateManyDataInput!
}

input UpdateUpdateWithoutUserDataInput {
  updateArea: String
  link: String
  content: Json
  hasOpen: Boolean
}

input UpdateUpdateWithWhereUniqueWithoutUserInput {
  where: UpdateWhereUniqueInput!
  data: UpdateUpdateWithoutUserDataInput!
}

input UpdateUpsertWithWhereUniqueWithoutUserInput {
  where: UpdateWhereUniqueInput!
  update: UpdateUpdateWithoutUserDataInput!
  create: UpdateCreateWithoutUserInput!
}

input UpdateWhereInput {
  """Logical AND on all given filters."""
  AND: [UpdateWhereInput!]

  """Logical OR on all given filters."""
  OR: [UpdateWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UpdateWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updateArea: String

  """All values that are not equal to given value."""
  updateArea_not: String

  """All values that are contained in given list."""
  updateArea_in: [String!]

  """All values that are not contained in given list."""
  updateArea_not_in: [String!]

  """All values less than the given value."""
  updateArea_lt: String

  """All values less than or equal the given value."""
  updateArea_lte: String

  """All values greater than the given value."""
  updateArea_gt: String

  """All values greater than or equal the given value."""
  updateArea_gte: String

  """All values containing the given string."""
  updateArea_contains: String

  """All values not containing the given string."""
  updateArea_not_contains: String

  """All values starting with the given string."""
  updateArea_starts_with: String

  """All values not starting with the given string."""
  updateArea_not_starts_with: String

  """All values ending with the given string."""
  updateArea_ends_with: String

  """All values not ending with the given string."""
  updateArea_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  hasOpen: Boolean

  """All values that are not equal to given value."""
  hasOpen_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  user: ProfileWhereInput
}

input UpdateWhereUniqueInput {
  id: ID
}

type Word implements Node {
  id: ID!
  author: Profile
  talk: Talk!
  message: String!
  new: Boolean
  settings: Json
  isMain: Boolean
  parent: Word
  children(where: WordWhereInput, orderBy: WordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Word!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type WordConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [WordEdge]!
  aggregate: AggregateWord!
}

input WordCreateInput {
  id: ID
  message: String!
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileCreateOneWithoutAuthorOfWordInput
  talk: TalkCreateOneWithoutWordsInput!
  parent: WordCreateOneWithoutChildrenInput
  children: WordCreateManyWithoutParentInput
}

input WordCreateManyWithoutAuthorInput {
  create: [WordCreateWithoutAuthorInput!]
  connect: [WordWhereUniqueInput!]
}

input WordCreateManyWithoutParentInput {
  create: [WordCreateWithoutParentInput!]
  connect: [WordWhereUniqueInput!]
}

input WordCreateManyWithoutTalkInput {
  create: [WordCreateWithoutTalkInput!]
  connect: [WordWhereUniqueInput!]
}

input WordCreateOneWithoutChildrenInput {
  create: WordCreateWithoutChildrenInput
  connect: WordWhereUniqueInput
}

input WordCreateWithoutAuthorInput {
  id: ID
  message: String!
  new: Boolean
  settings: Json
  isMain: Boolean
  talk: TalkCreateOneWithoutWordsInput!
  parent: WordCreateOneWithoutChildrenInput
  children: WordCreateManyWithoutParentInput
}

input WordCreateWithoutChildrenInput {
  id: ID
  message: String!
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileCreateOneWithoutAuthorOfWordInput
  talk: TalkCreateOneWithoutWordsInput!
  parent: WordCreateOneWithoutChildrenInput
}

input WordCreateWithoutParentInput {
  id: ID
  message: String!
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileCreateOneWithoutAuthorOfWordInput
  talk: TalkCreateOneWithoutWordsInput!
  children: WordCreateManyWithoutParentInput
}

input WordCreateWithoutTalkInput {
  id: ID
  message: String!
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileCreateOneWithoutAuthorOfWordInput
  parent: WordCreateOneWithoutChildrenInput
  children: WordCreateManyWithoutParentInput
}

"""An edge in a connection."""
type WordEdge {
  """The item at the end of the edge."""
  node: Word!

  """A cursor for use in pagination."""
  cursor: String!
}

enum WordOrderByInput {
  id_ASC
  id_DESC
  message_ASC
  message_DESC
  new_ASC
  new_DESC
  settings_ASC
  settings_DESC
  isMain_ASC
  isMain_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type WordPreviousValues {
  id: ID!
  message: String!
  new: Boolean
  settings: Json
  isMain: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input WordScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [WordScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [WordScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WordScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  message: String

  """All values that are not equal to given value."""
  message_not: String

  """All values that are contained in given list."""
  message_in: [String!]

  """All values that are not contained in given list."""
  message_not_in: [String!]

  """All values less than the given value."""
  message_lt: String

  """All values less than or equal the given value."""
  message_lte: String

  """All values greater than the given value."""
  message_gt: String

  """All values greater than or equal the given value."""
  message_gte: String

  """All values containing the given string."""
  message_contains: String

  """All values not containing the given string."""
  message_not_contains: String

  """All values starting with the given string."""
  message_starts_with: String

  """All values not starting with the given string."""
  message_not_starts_with: String

  """All values ending with the given string."""
  message_ends_with: String

  """All values not ending with the given string."""
  message_not_ends_with: String
  new: Boolean

  """All values that are not equal to given value."""
  new_not: Boolean
  isMain: Boolean

  """All values that are not equal to given value."""
  isMain_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type WordSubscriptionPayload {
  mutation: MutationType!
  node: Word
  updatedFields: [String!]
  previousValues: WordPreviousValues
}

input WordSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [WordSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [WordSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WordSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: WordWhereInput
}

input WordUpdateInput {
  message: String
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileUpdateOneWithoutAuthorOfWordInput
  talk: TalkUpdateOneRequiredWithoutWordsInput
  parent: WordUpdateOneWithoutChildrenInput
  children: WordUpdateManyWithoutParentInput
}

input WordUpdateManyDataInput {
  message: String
  new: Boolean
  settings: Json
  isMain: Boolean
}

input WordUpdateManyMutationInput {
  message: String
  new: Boolean
  settings: Json
  isMain: Boolean
}

input WordUpdateManyWithoutAuthorInput {
  create: [WordCreateWithoutAuthorInput!]
  connect: [WordWhereUniqueInput!]
  set: [WordWhereUniqueInput!]
  disconnect: [WordWhereUniqueInput!]
  delete: [WordWhereUniqueInput!]
  update: [WordUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [WordUpdateManyWithWhereNestedInput!]
  deleteMany: [WordScalarWhereInput!]
  upsert: [WordUpsertWithWhereUniqueWithoutAuthorInput!]
}

input WordUpdateManyWithoutParentInput {
  create: [WordCreateWithoutParentInput!]
  connect: [WordWhereUniqueInput!]
  set: [WordWhereUniqueInput!]
  disconnect: [WordWhereUniqueInput!]
  delete: [WordWhereUniqueInput!]
  update: [WordUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [WordUpdateManyWithWhereNestedInput!]
  deleteMany: [WordScalarWhereInput!]
  upsert: [WordUpsertWithWhereUniqueWithoutParentInput!]
}

input WordUpdateManyWithoutTalkInput {
  create: [WordCreateWithoutTalkInput!]
  connect: [WordWhereUniqueInput!]
  set: [WordWhereUniqueInput!]
  disconnect: [WordWhereUniqueInput!]
  delete: [WordWhereUniqueInput!]
  update: [WordUpdateWithWhereUniqueWithoutTalkInput!]
  updateMany: [WordUpdateManyWithWhereNestedInput!]
  deleteMany: [WordScalarWhereInput!]
  upsert: [WordUpsertWithWhereUniqueWithoutTalkInput!]
}

input WordUpdateManyWithWhereNestedInput {
  where: WordScalarWhereInput!
  data: WordUpdateManyDataInput!
}

input WordUpdateOneWithoutChildrenInput {
  create: WordCreateWithoutChildrenInput
  connect: WordWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: WordUpdateWithoutChildrenDataInput
  upsert: WordUpsertWithoutChildrenInput
}

input WordUpdateWithoutAuthorDataInput {
  message: String
  new: Boolean
  settings: Json
  isMain: Boolean
  talk: TalkUpdateOneRequiredWithoutWordsInput
  parent: WordUpdateOneWithoutChildrenInput
  children: WordUpdateManyWithoutParentInput
}

input WordUpdateWithoutChildrenDataInput {
  message: String
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileUpdateOneWithoutAuthorOfWordInput
  talk: TalkUpdateOneRequiredWithoutWordsInput
  parent: WordUpdateOneWithoutChildrenInput
}

input WordUpdateWithoutParentDataInput {
  message: String
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileUpdateOneWithoutAuthorOfWordInput
  talk: TalkUpdateOneRequiredWithoutWordsInput
  children: WordUpdateManyWithoutParentInput
}

input WordUpdateWithoutTalkDataInput {
  message: String
  new: Boolean
  settings: Json
  isMain: Boolean
  author: ProfileUpdateOneWithoutAuthorOfWordInput
  parent: WordUpdateOneWithoutChildrenInput
  children: WordUpdateManyWithoutParentInput
}

input WordUpdateWithWhereUniqueWithoutAuthorInput {
  where: WordWhereUniqueInput!
  data: WordUpdateWithoutAuthorDataInput!
}

input WordUpdateWithWhereUniqueWithoutParentInput {
  where: WordWhereUniqueInput!
  data: WordUpdateWithoutParentDataInput!
}

input WordUpdateWithWhereUniqueWithoutTalkInput {
  where: WordWhereUniqueInput!
  data: WordUpdateWithoutTalkDataInput!
}

input WordUpsertWithoutChildrenInput {
  update: WordUpdateWithoutChildrenDataInput!
  create: WordCreateWithoutChildrenInput!
}

input WordUpsertWithWhereUniqueWithoutAuthorInput {
  where: WordWhereUniqueInput!
  update: WordUpdateWithoutAuthorDataInput!
  create: WordCreateWithoutAuthorInput!
}

input WordUpsertWithWhereUniqueWithoutParentInput {
  where: WordWhereUniqueInput!
  update: WordUpdateWithoutParentDataInput!
  create: WordCreateWithoutParentInput!
}

input WordUpsertWithWhereUniqueWithoutTalkInput {
  where: WordWhereUniqueInput!
  update: WordUpdateWithoutTalkDataInput!
  create: WordCreateWithoutTalkInput!
}

input WordWhereInput {
  """Logical AND on all given filters."""
  AND: [WordWhereInput!]

  """Logical OR on all given filters."""
  OR: [WordWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WordWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  message: String

  """All values that are not equal to given value."""
  message_not: String

  """All values that are contained in given list."""
  message_in: [String!]

  """All values that are not contained in given list."""
  message_not_in: [String!]

  """All values less than the given value."""
  message_lt: String

  """All values less than or equal the given value."""
  message_lte: String

  """All values greater than the given value."""
  message_gt: String

  """All values greater than or equal the given value."""
  message_gte: String

  """All values containing the given string."""
  message_contains: String

  """All values not containing the given string."""
  message_not_contains: String

  """All values starting with the given string."""
  message_starts_with: String

  """All values not starting with the given string."""
  message_not_starts_with: String

  """All values ending with the given string."""
  message_ends_with: String

  """All values not ending with the given string."""
  message_not_ends_with: String
  new: Boolean

  """All values that are not equal to given value."""
  new_not: Boolean
  isMain: Boolean

  """All values that are not equal to given value."""
  isMain_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  author: ProfileWhereInput
  talk: TalkWhereInput
  parent: WordWhereInput
  children_every: WordWhereInput
  children_some: WordWhereInput
  children_none: WordWhereInput
}

input WordWhereUniqueInput {
  id: ID
}
